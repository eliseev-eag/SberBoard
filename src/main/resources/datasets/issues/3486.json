{
  "url": "https://api.github.com/repos/facebook/react/issues/3486",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3486/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3486/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3486/events",
  "html_url": "https://github.com/facebook/react/issues/3486",
  "id": 63782006,
  "node_id": "MDU6SXNzdWU2Mzc4MjAwNg==",
  "number": 3486,
  "title": "catching nulls and undefineds in createClass?",
  "user": {
    "login": "Pomax",
    "id": 177243,
    "node_id": "MDQ6VXNlcjE3NzI0Mw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/177243?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Pomax",
    "html_url": "https://github.com/Pomax",
    "followers_url": "https://api.github.com/users/Pomax/followers",
    "following_url": "https://api.github.com/users/Pomax/following{/other_user}",
    "gists_url": "https://api.github.com/users/Pomax/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Pomax/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Pomax/subscriptions",
    "organizations_url": "https://api.github.com/users/Pomax/orgs",
    "repos_url": "https://api.github.com/users/Pomax/repos",
    "events_url": "https://api.github.com/users/Pomax/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Pomax/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-03-23T17:23:53Z",
  "updated_at": "2015-03-23T20:41:11Z",
  "closed_at": "2015-03-23T19:49:02Z",
  "author_association": "NONE",
  "body": "Right now something like this is going by pretty much uncaught until it causes terrible breakage:\n\n```\nvar Link = Collection.link; // oh no, I meant \".Link\", not \".link\"! Link is now \"undefined\"\nvar Thing = React.createClass({\n...\nrender: function() { return <Link/>; }\n...\n});\n```\n\nSimilarly, the following will \"work\" until an undef'd mixin is actually used:\n\n```\nvar Mixin = \nvar Thing = React.createClass({\n...\nmixins: [\n  Collection.minkeyMixim; // Crap, another typo! Mixin is now \"undefined\"\n],\n...\n});\n```\n\nThe mixins issue I suspect is something that createClass can trivially test before accepting the component definition (check for an `obj.mixins`, if extant, check that every element in it resolves to an object (rather than `false`, `undefined`, `null`, \"a string\", etc), the bad element situation might also be doable inside createClass, checking that all the elements that are used inside of an element in fact exist before letting the createClass call succeed. I suspect it can, but less sure than the mixin check.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
