{
  "url": "https://api.github.com/repos/facebook/react/issues/1388",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/1388/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/1388/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/1388/events",
  "html_url": "https://github.com/facebook/react/issues/1388",
  "id": 31194859,
  "node_id": "MDU6SXNzdWUzMTE5NDg1OQ==",
  "number": 1388,
  "title": "Problem with shouldComponentUpdate",
  "user": {
    "login": "zackify",
    "id": 449136,
    "node_id": "MDQ6VXNlcjQ0OTEzNg==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/449136?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zackify",
    "html_url": "https://github.com/zackify",
    "followers_url": "https://api.github.com/users/zackify/followers",
    "following_url": "https://api.github.com/users/zackify/following{/other_user}",
    "gists_url": "https://api.github.com/users/zackify/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zackify/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zackify/subscriptions",
    "organizations_url": "https://api.github.com/users/zackify/orgs",
    "repos_url": "https://api.github.com/users/zackify/repos",
    "events_url": "https://api.github.com/users/zackify/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zackify/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2014-04-09T21:11:17Z",
  "updated_at": "2014-04-09T21:52:05Z",
  "closed_at": "2014-04-09T21:52:05Z",
  "author_association": "NONE",
  "body": "I am using `shouldComponentUpdate` to do an ajax request that gets some html and updates the state. Here's what it looks like:\n\n```\n  shouldComponentUpdate: function(nextProps, nextState) {\n      if(this.state.twitter.url == nextState.twitter.url)console.log('dont update')\n        else console.log('update')\n      var self = this\n      var url = this.state.twitter.url\n      $.ajax({\n        url: \"https://api.twitter.com/1/statuses/oembed.json?url=\"+url,\n        dataType: 'jsonp',\n        type: 'get',\n        success: function(data) {\n          self.setState({twitter: {html: data.html} })\n        }\n      });\n      return true\n  },\n```\n\nNow this works, but as you can see from my little test at the top, I was comparing the next state and current state to see if the ajax request is needed to be fired. The problem is, nextState and this.state are equal. Even doing `console.log(this.state.twitter.url,nextState.twitter.url)` will show that it is returning the same variable for each state, which shouldn't happen as I update it. In my update section I'm simply calling an update function which lives inside a mixin and is inside another component that has the top level component's state passed as a prop. I'm wondering if setting the state from the mixin has to do with this problem? I am just wondering what's going on here because I only want that ajax request fired if the twitter url has changed, not when other things have. You can see the current file here: https://gist.github.com/zackify/10316523\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
