{
  "url": "https://api.github.com/repos/facebook/react/issues/6725",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6725/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6725/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6725/events",
  "html_url": "https://github.com/facebook/react/issues/6725",
  "id": 153626279,
  "node_id": "MDU6SXNzdWUxNTM2MjYyNzk=",
  "number": 6725,
  "title": "componentDidUpdate running before render flushes",
  "user": {
    "login": "whitegrey",
    "id": 5146500,
    "node_id": "MDQ6VXNlcjUxNDY1MDA=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/5146500?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/whitegrey",
    "html_url": "https://github.com/whitegrey",
    "followers_url": "https://api.github.com/users/whitegrey/followers",
    "following_url": "https://api.github.com/users/whitegrey/following{/other_user}",
    "gists_url": "https://api.github.com/users/whitegrey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/whitegrey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/whitegrey/subscriptions",
    "organizations_url": "https://api.github.com/users/whitegrey/orgs",
    "repos_url": "https://api.github.com/users/whitegrey/repos",
    "events_url": "https://api.github.com/users/whitegrey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/whitegrey/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2016-05-08T00:27:02Z",
  "updated_at": "2016-08-02T19:15:20Z",
  "closed_at": "2016-08-02T19:15:20Z",
  "author_association": "NONE",
  "body": "I've been trying to write a simple transition component for React Router that looks like this:\n\n```\nvar TransitionDaemon = React.createClass({\n    getInitialState: function(){\n        return {\n            stage: 'active'\n        }\n    },\n    componentWillReceiveProps: function(nextProps){\n        var nextPath = nextProps.path.replace(/\\//g, '');\n        var currentPath = this.props.path.replace(/\\//g, '');\n\n        if (nextPath != currentPath)\n            this.setState({stage: 'hidden'})\n\n    },\n    componentDidUpdate: function(prevProps){\n        var prevPath = prevProps.path.replace(/\\//g, '');\n        var currentPath = this.props.path.replace(/\\//g, '');\n\n        if (prevPath != currentPath)\n            this.setState({stage:'active'});\n\n    },\n    render: function(){\n        var transitionHelper = ['transitionHelper', this.state.stage];\n        return (\n            <div className={transitionHelper.join(' ')}>\n                {this.props.children}\n            </div>\n        )\n    }\n})\n\n```\n\nThe idea is to fade in each new child component through CSS by changing the class between Active and Hidden.\n\nI've noticed for small child components, componentDidUpdate will run before the new DOM is flushed, resulting in no transition at all. A work around seems to be to put the setState under componentDidUpdate in a setTimeOut(()=>{ this.setState({stage:'active'}); }, 1)\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
