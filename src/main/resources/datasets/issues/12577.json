{
  "url": "https://api.github.com/repos/facebook/react/issues/12577",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12577/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12577/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12577/events",
  "html_url": "https://github.com/facebook/react/issues/12577",
  "id": 312290215,
  "node_id": "MDU6SXNzdWUzMTIyOTAyMTU=",
  "number": 12577,
  "title": "a question about getDerivedStateFromProps and previous props",
  "user": {
    "login": "cvlmtg",
    "id": 6401008,
    "node_id": "MDQ6VXNlcjY0MDEwMDg=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/6401008?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cvlmtg",
    "html_url": "https://github.com/cvlmtg",
    "followers_url": "https://api.github.com/users/cvlmtg/followers",
    "following_url": "https://api.github.com/users/cvlmtg/following{/other_user}",
    "gists_url": "https://api.github.com/users/cvlmtg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cvlmtg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cvlmtg/subscriptions",
    "organizations_url": "https://api.github.com/users/cvlmtg/orgs",
    "repos_url": "https://api.github.com/users/cvlmtg/repos",
    "events_url": "https://api.github.com/users/cvlmtg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cvlmtg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-04-08T09:37:08Z",
  "updated_at": "2018-04-09T13:17:25Z",
  "closed_at": "2018-04-08T11:30:42Z",
  "author_association": "NONE",
  "body": "I've read the article on [Update on Async Rendering](https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props) and I have a little doubt about `getDerivedStateFromProps`, i.e. why it does't receive prevProps as one of its arguments?\r\n\r\nThere are situations where it is useful to compare prevProps with nextProps, and what the article suggests (i.e. *You may notice in the example above that props.currentRow is mirrored in state*) VERY IMHO is wrong for a couple of reasons. The first one is that it breaks the single source of truth rule (and we also have the inconvenience of keeping props.currentRow and state.lastRow in sync), and the second one I think is summarized here: https://reactjs.org/docs/thinking-in-react.html i.e. *The key here is DRY: Donâ€™t Repeat Yourself. Figure out the absolute minimal representation of the state your application needs and compute everything else you need on-demand*. This is a suggestion I've basically seen since the dawn of react, so copying a prop to the state just to have it around when I need it looks a bit wrong to me. So my suggestion would be to add `prevProps` as an argument to `getDerivedStateFromProps`.",
  "closed_by": {
    "login": "jquense",
    "id": 339286,
    "node_id": "MDQ6VXNlcjMzOTI4Ng==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/339286?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jquense",
    "html_url": "https://github.com/jquense",
    "followers_url": "https://api.github.com/users/jquense/followers",
    "following_url": "https://api.github.com/users/jquense/following{/other_user}",
    "gists_url": "https://api.github.com/users/jquense/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jquense/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jquense/subscriptions",
    "organizations_url": "https://api.github.com/users/jquense/orgs",
    "repos_url": "https://api.github.com/users/jquense/repos",
    "events_url": "https://api.github.com/users/jquense/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jquense/received_events",
    "type": "User",
    "site_admin": false
  }
}
