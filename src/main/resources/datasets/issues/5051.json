{
  "url": "https://api.github.com/repos/facebook/react/issues/5051",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5051/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5051/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5051/events",
  "html_url": "https://github.com/facebook/react/issues/5051",
  "id": 109702163,
  "node_id": "MDU6SXNzdWUxMDk3MDIxNjM=",
  "number": 5051,
  "title": "LinkedStateMixin: Default value for link state",
  "user": {
    "login": "lafka",
    "id": 287792,
    "node_id": "MDQ6VXNlcjI4Nzc5Mg==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/287792?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lafka",
    "html_url": "https://github.com/lafka",
    "followers_url": "https://api.github.com/users/lafka/followers",
    "following_url": "https://api.github.com/users/lafka/following{/other_user}",
    "gists_url": "https://api.github.com/users/lafka/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lafka/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lafka/subscriptions",
    "organizations_url": "https://api.github.com/users/lafka/orgs",
    "repos_url": "https://api.github.com/users/lafka/repos",
    "events_url": "https://api.github.com/users/lafka/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lafka/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2015-10-04T20:18:56Z",
  "updated_at": "2015-10-06T21:22:38Z",
  "closed_at": "2015-10-06T21:22:38Z",
  "author_association": "NONE",
  "body": "Using default values for `valueLink` can be set with the `defaultValue` property. But since `defaultValue` properties is only at initialization time you can't derive it dynamically (ie from a API call).\n\nWould it be a possibility to have a second parameter for a default value added to `LinkedStateMixin.linkState`, that way the below code could be supported.\n\n``` jsx\n// assume mixin is applied\nclass Foo extends React.Component {\n  componentDidMount() {\n    setTimeout(() => this.setState({defaultVal: 'async-default'}), 1)\n  }\n\n  render() {\n    return (\n     <input\n        defaultValue=\"pre-async-default\"\n        valueLink={this.linkState('bar', this.state.defaultVal)}\n        />\n    )\n  }\n}\n```\n\nThe actual patch should be quite trivial, however I'm not sure if this will create a new reactLink on every change to `defaultValue` regardless of the the linked value actually existing, someone more familiar with React can probably fill in on that point.\n\n``` diff\n    *\n    * @param {string} key state key to update. Note: you may want to use keyOf()\n    * if you're using Google Closure Compiler advanced mode.\n+   * @param {*} defaultValue default value to use in case this.state[key] is undefined\n    * @return {ReactLink} ReactLink instance linking to the state.\n    */\n-  linkState: function(key) {\n+  linkState: function(key, defaultValue) {\n     return new ReactLink(\n-      this.state[key],\n+      undefined === this.state[key] ? this.state[key] : defaultValue,\n       ReactStateSetters.createStateKeySetter(this, key)\n     );\n   }\n\n```\n\nI'm not sure of `LinkedStateMixin`'s future plans so this might not be interesting. I can definitely wrap my own class like `react-lensed-state`.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
