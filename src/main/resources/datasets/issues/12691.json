{
  "url": "https://api.github.com/repos/facebook/react/issues/12691",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12691/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12691/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12691/events",
  "html_url": "https://github.com/facebook/react/issues/12691",
  "id": 317796098,
  "node_id": "MDU6SXNzdWUzMTc3OTYwOTg=",
  "number": 12691,
  "title": "It's possible to do unlimited recursive rendering with an HOC",
  "user": {
    "login": "sergeysolovev",
    "id": 5831301,
    "node_id": "MDQ6VXNlcjU4MzEzMDE=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/5831301?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sergeysolovev",
    "html_url": "https://github.com/sergeysolovev",
    "followers_url": "https://api.github.com/users/sergeysolovev/followers",
    "following_url": "https://api.github.com/users/sergeysolovev/following{/other_user}",
    "gists_url": "https://api.github.com/users/sergeysolovev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sergeysolovev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sergeysolovev/subscriptions",
    "organizations_url": "https://api.github.com/users/sergeysolovev/orgs",
    "repos_url": "https://api.github.com/users/sergeysolovev/repos",
    "events_url": "https://api.github.com/users/sergeysolovev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sergeysolovev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-04-25T21:13:28Z",
  "updated_at": "2018-04-26T18:54:58Z",
  "closed_at": "2018-04-26T18:54:58Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nI would consider it a feature ðŸ˜ˆ \r\n\r\n**What is the current behavior?**\r\n\r\nReact does not put any limits on recursive rendering, using higher-order components. However it does so for calling `this.setState(...)`\r\n\r\nIt reproduces pretty easy with a pair of a Container and an HOC:\r\nhttps://github.com/sergeysolovev/react-bomb/blob/master/src/index.js\r\n\r\nI wouldn't try this on CodeSandbox or JSFiddle (I did). Here is the code:\r\n\r\n```javascript\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Accepts a component as a prop and renders it\r\n// passing the props through. In a real life scenario\r\n// usually does something more than that\r\nconst Container = props => {\r\n  const { component: Component } = props;\r\n  return <Component {...props} />;\r\n};\r\n\r\n// An HOC-version of Container\r\nconst withContainer = WrappedComponent => props => (\r\n  <Container component={WrappedComponent} {...props} />\r\n);\r\n\r\n// Though it looks a bit artificially here,\r\n// it's pretty common to use something like `compose`\r\n// which does the same thing but looks more innocent\r\nconst Bomb = withContainer(withContainer(() => null));\r\n\r\nclass Detonator extends React.Component {\r\n  state = {\r\n    wentOff: false\r\n  };\r\n  goOff = () => this.setState({ wentOff: true });\r\n  render = () =>\r\n    this.state.wentOff ? (\r\n      <React.Fragment>\r\n        <Bomb /> Oooppps... This text probably wont be rendered\r\n      </React.Fragment>\r\n    ) : (\r\n      <button onClick={this.goOff}>Lets see</button>\r\n    );\r\n}\r\n\r\nReactDOM.render(<Detonator />, document.getElementById(\"root\"));\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect to have some limit on such kind of recursion, because it's blazing fast (like React's supposed to be), eating lots of RAM in short time and a bit difficult and annoying to stop.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReproduces on Chrome 65. I've done it for React 16.3.1 and 16.3.2\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
