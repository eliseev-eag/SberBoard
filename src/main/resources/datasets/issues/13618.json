{
  "url": "https://api.github.com/repos/facebook/react/issues/13618",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13618/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13618/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13618/events",
  "html_url": "https://github.com/facebook/react/pull/13618",
  "id": 359085086,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0NjYxNDIy",
  "number": 13618,
  "title": "Do not bind topLevelType to dispatch",
  "user": {
    "login": "nhunzaker",
    "id": 590904,
    "node_id": "MDQ6VXNlcjU5MDkwNA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/590904?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nhunzaker",
    "html_url": "https://github.com/nhunzaker",
    "followers_url": "https://api.github.com/users/nhunzaker/followers",
    "following_url": "https://api.github.com/users/nhunzaker/following{/other_user}",
    "gists_url": "https://api.github.com/users/nhunzaker/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nhunzaker/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nhunzaker/subscriptions",
    "organizations_url": "https://api.github.com/users/nhunzaker/orgs",
    "repos_url": "https://api.github.com/users/nhunzaker/repos",
    "events_url": "https://api.github.com/users/nhunzaker/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nhunzaker/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-09-11T14:54:17Z",
  "updated_at": "2018-09-14T23:38:56Z",
  "closed_at": "2018-09-14T23:08:37Z",
  "author_association": "COLLABORATOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/13618",
    "html_url": "https://github.com/facebook/react/pull/13618",
    "diff_url": "https://github.com/facebook/react/pull/13618.diff",
    "patch_url": "https://github.com/facebook/react/pull/13618.patch"
  },
  "body": "This PR is exploratory, but it's been on my mind a long time and I wanted to get others' thoughts.\r\n\r\nA previous change (https://github.com/facebook/react/pull/12629) made it such that all top level event types correspond to their associated native event string values. That means we don't need to bind that event name into `dispatchEvent`, letting all event listener code use either the standard dispatch function, or the variant for interactive updates.\r\n\r\n### Why\r\n\r\nMy primary motivation with this PR isn't to necessarily merge this, but to talk about a few event system things.\r\n\r\n#### Why drop bind()\r\n\r\nDropping this `.bind()` is attractive to me because I believe we could eventually remove the logic in`ReactDOMBrowserEventEmitter` to track what events have already attached:\r\n\r\nhttps://github.com/facebook/react/blob/f6fb03edffcc5918ad2f37ed45bdc7c0c3b3d199/packages/react-dom/src/events/ReactBrowserEventEmitter.js#L95-L103\r\n\r\nhttps://github.com/facebook/react/blob/f6fb03edffcc5918ad2f37ed45bdc7c0c3b3d199/packages/react-dom/src/events/ReactBrowserEventEmitter.js#L130-L135\r\n\r\nWhen working on the scroll-jank PR (https://github.com/facebook/react/pull/9333), tracking needs to happen per-element for touch, wheel, and scroll events. That means saving state on each DOM node, and doing a lot of property access.\r\n\r\n#### Could it be faster?\r\n\r\nI'm curious about the performance characteristics of naively attaching the same event. It could avoid a lot of DOM storage and property access (event listener attachment tracking) if we start to attach listeners locally, since `addEventListener` is idempotent:\r\n\r\n```javascript\r\nlet button = document.createElement('button')\r\nlet callback = () => console.log(\"click!\")\r\n\r\nbutton.addEventListener('click', callback)\r\nbutton.addEventListener('click', callback)\r\n\r\nbutton.click()\r\n```\r\n\r\n### Challenges\r\n\r\nWe can't remove event listener tracking because SelectEventPlugin depends on this tracking to see if it should fire:\r\n\r\nhttps://github.com/facebook/react/blob/f6fb03edffcc5918ad2f37ed45bdc7c0c3b3d199/packages/react-dom/src/events/SelectEventPlugin.js#L173-L177\r\n\r\nBut we might be able to come up with another way to determine when SelectEventPlugin should fire. Maybe, **instead of enumerating all plugins at dispatch time, they could be eagerly applied on mount**. Then we also wouldn't have to run through all event plugins on every dispatch because the event plugins would have the context to know that their behavior was specifically applied.\r\n\r\n---\r\n\r\nStill, it's an interesting series of changes to me, and I wanted to get the thoughts of others.",
  "closed_by": {
    "login": "nhunzaker",
    "id": 590904,
    "node_id": "MDQ6VXNlcjU5MDkwNA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/590904?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nhunzaker",
    "html_url": "https://github.com/nhunzaker",
    "followers_url": "https://api.github.com/users/nhunzaker/followers",
    "following_url": "https://api.github.com/users/nhunzaker/following{/other_user}",
    "gists_url": "https://api.github.com/users/nhunzaker/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nhunzaker/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nhunzaker/subscriptions",
    "organizations_url": "https://api.github.com/users/nhunzaker/orgs",
    "repos_url": "https://api.github.com/users/nhunzaker/repos",
    "events_url": "https://api.github.com/users/nhunzaker/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nhunzaker/received_events",
    "type": "User",
    "site_admin": false
  }
}
