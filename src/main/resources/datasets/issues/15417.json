{
  "url": "https://api.github.com/repos/facebook/react/issues/15417",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15417/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15417/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15417/events",
  "html_url": "https://github.com/facebook/react/issues/15417",
  "id": 433133470,
  "node_id": "MDU6SXNzdWU0MzMxMzM0NzA=",
  "number": 15417,
  "title": "ESLint Plugin React Hooks throws false negative / forces bad design",
  "user": {
    "login": "janhesters",
    "id": 31096420,
    "node_id": "MDQ6VXNlcjMxMDk2NDIw",
    "avatar_url": "https://avatars0.githubusercontent.com/u/31096420?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/janhesters",
    "html_url": "https://github.com/janhesters",
    "followers_url": "https://api.github.com/users/janhesters/followers",
    "following_url": "https://api.github.com/users/janhesters/following{/other_user}",
    "gists_url": "https://api.github.com/users/janhesters/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/janhesters/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/janhesters/subscriptions",
    "organizations_url": "https://api.github.com/users/janhesters/orgs",
    "repos_url": "https://api.github.com/users/janhesters/repos",
    "events_url": "https://api.github.com/users/janhesters/events{/privacy}",
    "received_events_url": "https://api.github.com/users/janhesters/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-04-15T07:28:40Z",
  "updated_at": "2019-04-15T12:44:19Z",
  "closed_at": "2019-04-15T11:32:50Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n*feature*\r\n\r\n**What is the current behavior?**\r\n**TLDR:** If you use `useMemo` and pass a function to a child component from its parent component, `eslint-plugin-react-hooks` will yell at you if you leave out that function in the dependencies. But since it's a new function in every render, adding it to the `useMemo` dependencies defeats the purpose of `useMemo`.\r\n\r\nHere is my case where I encountered the problem. I'm building an app that renders a table of contacts. All contacts are editable on the fly, which is why every cell of this table is an input.\r\n\r\nHere is the code for the container component that calls its styled presentational component:\r\n\r\n```js\r\nfunction ContactCell({\r\n  cell: { name },\r\n  value: original,\r\n  searchValue,\r\n  changeContact,\r\n  contactId,\r\n  removeContactChange\r\n}) {\r\n  const [value, setValue] = useState(original);\r\n  function handleChange(e) {\r\n    setValue(e.target.value);\r\n    const change = { id: contactId, value: e.target.value, key: name };\r\n    if (e.target.value === original) {\r\n      removeContactChange(change);\r\n    } else {\r\n      changeContact(change);\r\n    }\r\n  }\r\n  const matched =\r\n    searchValue && original.toLowerCase().includes(searchValue.toLowerCase());\r\n  const component = useMemo(\r\n    () => (\r\n      <Styled\r\n        name={name}\r\n        onChange={handleChange}\r\n        value={value}\r\n        matched={matched}\r\n      />\r\n    ),\r\n    // in this line the plugin complains that handleChange is not a dependency.\r\n    [name, value, matched]\r\n  );\r\n  return <>{component}</>;\r\n}\r\n```\r\n\r\nIn another part of the app users can search for contacts using a `searchValue`. I use `useMemo` here to avoid all cells being re-rendered whenever the `searchValue` changes and only re-render if they are matched or the value changes.\r\n\r\nNow if I were to include `handleChange`, all contact cells would re-render if the `searchValue` changes, since `handleChange` is new in every render.\r\n\r\n**What is the expected behavior?**\r\nMaybe the linter plugin recognizes functions declared in the scope of the component and allows you to leave them out?\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact 16.8.6 in Google Chrome on MacOS",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
