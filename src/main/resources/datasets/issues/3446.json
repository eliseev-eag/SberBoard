{
  "url": "https://api.github.com/repos/facebook/react/issues/3446",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3446/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3446/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3446/events",
  "html_url": "https://github.com/facebook/react/issues/3446",
  "id": 62555090,
  "node_id": "MDU6SXNzdWU2MjU1NTA5MA==",
  "number": 3446,
  "title": "Checkbox behavior inexplicable when preventDefault() is used",
  "user": {
    "login": "tigergrid",
    "id": 10409656,
    "node_id": "MDQ6VXNlcjEwNDA5NjU2",
    "avatar_url": "https://avatars3.githubusercontent.com/u/10409656?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tigergrid",
    "html_url": "https://github.com/tigergrid",
    "followers_url": "https://api.github.com/users/tigergrid/followers",
    "following_url": "https://api.github.com/users/tigergrid/following{/other_user}",
    "gists_url": "https://api.github.com/users/tigergrid/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tigergrid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tigergrid/subscriptions",
    "organizations_url": "https://api.github.com/users/tigergrid/orgs",
    "repos_url": "https://api.github.com/users/tigergrid/repos",
    "events_url": "https://api.github.com/users/tigergrid/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tigergrid/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2015-03-18T01:12:24Z",
  "updated_at": "2015-03-18T20:10:04Z",
  "closed_at": "2015-03-18T20:10:04Z",
  "author_association": "NONE",
  "body": "```\nvar React = require('react'),\n    Backbone = require('backbone'),\n    Flux = require('flux'),\n    dispatcher = new Flux.Dispatcher();\n\nvar storeListeningMixin = {\n  componentDidMount: function () {\n    if (this.props.store && this.onStoreChanged) {\n      this.props.store.on('change:emit', this.onStoreChanged, this);\n    }\n  },\n  componentWillUnmount: function () {\n    if (this.props.store && this.onStoreChanged) {\n      this.props.store.off('change:emit', this.onStoreChanged);\n    }\n  }\n};\n\nvar dispatchingMixin = {\n  componentWillMount: function () {\n    this.dispatch = function (payload) {\n      dispatcher.dispatch(payload);\n    };\n  }\n};\n\nfunction register(store) {\n  store.dispatcher = dispatcher;\n  store.dispatchId = dispatcher.register(store.onDispatch.bind(store));\n}\n\nfunction unregister(store) {\n  delete store.dispatcher;\n  dispatcher.unregister(store.dispatchId);\n}\n\n\nvar Store = Backbone.Model.extend({\n  checked: [false, false],\n  onDispatch: function (payload) {\n    if (payload.actionType === 'ha') {\n      console.log('dispatch received for checkbox' + payload.ind + '.');\n      this.checked[payload.ind] = !this.checked[payload.ind];\n      this.trigger('change:emit');\n    }\n  }\n});\n\nvar store = new Store();\n\nvar Checkboxa = React.createClass({\n    mixins: [dispatchingMixin],\n    onChange: function(e) {\n      console.log('dispatching...');\n      e.preventDefault();  // This makes the checkbox behave weirdly - if removed things are normal\n      this.dispatch({actionType: 'ha', ind: this.props.ind});\n    },\n    render: function() {\n      var checked = this.props.store.checked[this.props.ind];\n      console.log('checkbox rendering, should be checked: ' + checked);\n      return (\n        <li><input type=\"checkbox\" checked={checked} key={this.props.ind}\n             onChange={this.onChange}/><span>{this.props.ind}</span></li>\n      );\n    }\n});\n\nvar CheckboxaList = React.createClass({\n  mixins: [storeListeningMixin],\n  onStoreChanged: function() {\n    this.forceUpdate();\n  },\n  render: function() {\n    return (\n      <ul>\n        <Checkboxa ind={0} key={0} store={this.props.store} />\n        <Checkboxa ind={1} key={1} store={this.props.store} />\n      </ul>\n    );\n  }\n});\n\nregister(store);\n\nReact.render(\n  <CheckboxaList store={store}/>,\n  document.getElementById('renderArea')\n);\n```\n\nNotice how clicking the checkbox does not make React render it according to the checked state, but clicking the other checkbox causes the checkbox to re-render correctly.\nIn theory the preventDefault() happened when the component was dispatching and shouldn't affect the rendering?  In any case the component shouldn't be rendered incorrectly?\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
