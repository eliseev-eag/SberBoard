{
  "url": "https://api.github.com/repos/facebook/react/issues/12485",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12485/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12485/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12485/events",
  "html_url": "https://github.com/facebook/react/issues/12485",
  "id": 309871911,
  "node_id": "MDU6SXNzdWUzMDk4NzE5MTE=",
  "number": 12485,
  "title": "Error still logged to console when caught by error boundary in testing",
  "user": {
    "login": "leighhalliday",
    "id": 603921,
    "node_id": "MDQ6VXNlcjYwMzkyMQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/603921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leighhalliday",
    "html_url": "https://github.com/leighhalliday",
    "followers_url": "https://api.github.com/users/leighhalliday/followers",
    "following_url": "https://api.github.com/users/leighhalliday/following{/other_user}",
    "gists_url": "https://api.github.com/users/leighhalliday/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leighhalliday/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leighhalliday/subscriptions",
    "organizations_url": "https://api.github.com/users/leighhalliday/orgs",
    "repos_url": "https://api.github.com/users/leighhalliday/repos",
    "events_url": "https://api.github.com/users/leighhalliday/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leighhalliday/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-03-29T19:15:13Z",
  "updated_at": "2018-04-01T01:11:43Z",
  "closed_at": "2018-04-01T01:11:42Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nI'm not quite sure if feature/bug... I have an error boundary, and I want to test that it works correctly, but it produces a big `console.error` and there doesn't seem a great way to get around it.\r\n\r\n**What is the current behavior?**\r\n\r\nWhen an error is captured by the error boundary, it still logs to console during tests, making it look like something failed but it is expected (because I am testing error boundary) in this case.\r\n\r\n```\r\n    console.error node_modules/react-dom/cjs/react-dom.development.js:9747\r\n      The above error occurred in the <Child> component:\r\n          in Child (at ErrorBoundary.test.jsx:20)\r\n          in ErrorBoundary (created by WrapperComponent)\r\n          in WrapperComponent\r\n\r\n      React will try to recreate this component tree from scratch using the error boundary you provided, ErrorBoundary.\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nError  Boundary:\r\n```jsx\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  static propTypes = {\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.node,\r\n      PropTypes.arrayOf(PropTypes.node)\r\n    ]).isRequired,\r\n    render: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    hasError: false,\r\n    error: null,\r\n    errorInfo: null\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ hasError: true, error, errorInfo });\r\n\r\n    // if we have Bugsnag in this environment, we can notify our error tracker\r\n    if (window.Bugsnag) {\r\n      window.Bugsnag.notify(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.render(this.state.error, this.state.errorInfo);\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n```\r\n\r\nErrorBoundary.test.jsx\r\n```jsx\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\n\r\nconst Child = () => {\r\n  throw \"error\";\r\n};\r\n\r\nit(\"catches error and renders message\", () => {\r\n  const wrapper = mount(\r\n    <ErrorBoundary render={() => <div>Error has occurred</div>}>\r\n      <Child />\r\n    </ErrorBoundary>\r\n  );\r\n\r\n  expect(wrapper.text()).toEqual(\"Error has occurred\");\r\n});\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nI'm not sure exactly... here is a way I can sort of temporarily pause `console.error` logging during the course of the test, but it seems messy. How should error boundaries be tested?\r\n\r\nHere is a *hacky* solution:\r\n```jsx\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\n\r\nconst Child = () => {\r\n  throw \"error\";\r\n};\r\n\r\nconst pauseErrorLogging = codeToRun => {\r\n  const logger = console.error;\r\n  console.error = () => {};\r\n\r\n  codeToRun();\r\n\r\n  console.error = logger;\r\n};\r\n\r\nit(\"catches error and renders message\", () => {\r\n  pauseErrorLogging(() => {\r\n    const wrapper = mount(\r\n      <ErrorBoundary render={() => <div>Error has occurred</div>}>\r\n        <Child />\r\n      </ErrorBoundary>\r\n    );\r\n\r\n    expect(wrapper.text()).toEqual(\"Error has occurred\");\r\n  });\r\n});\r\n```\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.2 (with enzyme 3.3)\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
