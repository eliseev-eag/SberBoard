{
  "url": "https://api.github.com/repos/facebook/react/issues/10513",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10513/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10513/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10513/events",
  "html_url": "https://github.com/facebook/react/issues/10513",
  "id": 252120158,
  "node_id": "MDU6SXNzdWUyNTIxMjAxNTg=",
  "number": 10513,
  "title": "Reliable way to measure painted dom elements.",
  "user": {
    "login": "lucasowens",
    "id": 12615318,
    "node_id": "MDQ6VXNlcjEyNjE1MzE4",
    "avatar_url": "https://avatars3.githubusercontent.com/u/12615318?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lucasowens",
    "html_url": "https://github.com/lucasowens",
    "followers_url": "https://api.github.com/users/lucasowens/followers",
    "following_url": "https://api.github.com/users/lucasowens/following{/other_user}",
    "gists_url": "https://api.github.com/users/lucasowens/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lucasowens/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lucasowens/subscriptions",
    "organizations_url": "https://api.github.com/users/lucasowens/orgs",
    "repos_url": "https://api.github.com/users/lucasowens/repos",
    "events_url": "https://api.github.com/users/lucasowens/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lucasowens/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-08-22T23:46:25Z",
  "updated_at": "2017-08-30T18:41:47Z",
  "closed_at": "2017-08-30T18:41:47Z",
  "author_association": "NONE",
  "body": "I apologize as I know this is a frequent question but I am struggling to find the proper way to accomplish what I am trying to do. \r\n\r\nI am creating a menu that has a simple animated underline that transition to the selected element in a list. This requires knowing the width of each element and positioning the underline div below the selected element on click.\r\n\r\nI am currently getting the width in componentDidMount by way of refs and findDOMNode. This works, but on initial load i get a slightly incorrect measurement. When refreshing it is correct, every time i open the page in a new tab I see the incorrect behavior. \r\n\r\nHere is my componentDidMount code:\r\n\r\n    componentDidMount() {\r\n                this.tabWidths = this.tabs.map((t) => {\r\n                    return ReactDOM.findDOMNode(this.refs[t.ref]).clientWidth;\r\n                });\r\n\r\n                this.setState({\r\n                    distanceFromOrigin: this.tabWidths.map((e, i, a) => {\r\n                        if (i === 0) { return 0; }\r\n\r\n                        return this.tabWidths.reduce((sum, value, index, array) => {\r\n                            if (index < i) { return sum + value; }\r\n\r\n                            return sum + 0;\r\n                        });\r\n                    })\r\n                });\r\n\r\n                this.setState({ underlineStyle: this.styleGenerator(0) });\r\n    }\r\n\r\nAm I doing something fundamentally wrong here or is there no good way to know when the dom is fully painted to do measurements for things like this?\r\n\r\nSo far the only way I am able to get this to work is by nesting this within a requestAnimationFrame nested within a settimeout of 0. This just seems wrong.\r\n\r\nthanks for any help!\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "jquense",
    "id": 339286,
    "node_id": "MDQ6VXNlcjMzOTI4Ng==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/339286?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jquense",
    "html_url": "https://github.com/jquense",
    "followers_url": "https://api.github.com/users/jquense/followers",
    "following_url": "https://api.github.com/users/jquense/following{/other_user}",
    "gists_url": "https://api.github.com/users/jquense/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jquense/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jquense/subscriptions",
    "organizations_url": "https://api.github.com/users/jquense/orgs",
    "repos_url": "https://api.github.com/users/jquense/repos",
    "events_url": "https://api.github.com/users/jquense/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jquense/received_events",
    "type": "User",
    "site_admin": false
  }
}
