{
  "url": "https://api.github.com/repos/facebook/react/issues/5459",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5459/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5459/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5459/events",
  "html_url": "https://github.com/facebook/react/issues/5459",
  "id": 116598377,
  "node_id": "MDU6SXNzdWUxMTY1OTgzNzc=",
  "number": 5459,
  "title": "What if setState passed the component state to the provided callback?",
  "user": {
    "login": "nhunzaker",
    "id": 590904,
    "node_id": "MDQ6VXNlcjU5MDkwNA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/590904?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nhunzaker",
    "html_url": "https://github.com/nhunzaker",
    "followers_url": "https://api.github.com/users/nhunzaker/followers",
    "following_url": "https://api.github.com/users/nhunzaker/following{/other_user}",
    "gists_url": "https://api.github.com/users/nhunzaker/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nhunzaker/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nhunzaker/subscriptions",
    "organizations_url": "https://api.github.com/users/nhunzaker/orgs",
    "repos_url": "https://api.github.com/users/nhunzaker/repos",
    "events_url": "https://api.github.com/users/nhunzaker/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nhunzaker/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2015-11-12T17:26:24Z",
  "updated_at": "2015-11-13T19:21:14Z",
  "closed_at": "2015-11-13T19:21:14Z",
  "author_association": "COLLABORATOR",
  "body": "I apologize if this has been discussed before, however I was unable to dig anything up. I'm proposing the following:\n\n``` javascript\nvar Parent = React.createClass({\n    onUpdate(state) {\n        // state was passed into this function when it was called by \n        // setState in the <Child /> component\n        console.log(state) // { clicked: true }\n    },\n    render() {\n        return (<Child onUpdate={ this.onUpdate } />)\n    }\n})\n\nvar Child = React.createClass({\n    onClick() {\n        this.setState({ clicked: true }, this.props.onUpdate)\n    },\n    render() {\n        return <button onClick={ this.onClick }>Click me</button>\n    }\n})\n```\n\nFor a more concrete example, this came up in the following PR on ReactRouter:\n\nhttps://github.com/rackt/react-router/pull/2507\n\nAn `onUpdate` prop can be passed to a Router component, which it will invoke when ever it updates itself with the new Route state. Instead of forwarding along the state in the callback provided to `this.setState`, it must be intentionally provided like `this.setState(state, () => this.props.onUpdate && this.props.onUpdate(state))`\n\nI'm happy with a firm \"no\" here, but when I investigated to see what it would look like to add this to React it seems like part of the trouble is a that there isn't a great way to \"enqueued\" callbacks with specific parameters in the queue of callbacks managed by a component's `updater` property. I may have this totally wrong, I am still learning quite a bit about how queued updates happen. \n\nAt any rate, I thought there might be some good conversation around it.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
