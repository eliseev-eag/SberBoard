{
  "url": "https://api.github.com/repos/facebook/react/issues/14529",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14529/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14529/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14529/events",
  "html_url": "https://github.com/facebook/react/issues/14529",
  "id": 395950366,
  "node_id": "MDU6SXNzdWUzOTU5NTAzNjY=",
  "number": 14529,
  "title": "Hooks should not only be allowed inside the body of a function component.",
  "user": {
    "login": "VincentLanglet",
    "id": 9052536,
    "node_id": "MDQ6VXNlcjkwNTI1MzY=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/9052536?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/VincentLanglet",
    "html_url": "https://github.com/VincentLanglet",
    "followers_url": "https://api.github.com/users/VincentLanglet/followers",
    "following_url": "https://api.github.com/users/VincentLanglet/following{/other_user}",
    "gists_url": "https://api.github.com/users/VincentLanglet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/VincentLanglet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/VincentLanglet/subscriptions",
    "organizations_url": "https://api.github.com/users/VincentLanglet/orgs",
    "repos_url": "https://api.github.com/users/VincentLanglet/repos",
    "events_url": "https://api.github.com/users/VincentLanglet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/VincentLanglet/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-01-04T14:46:58Z",
  "updated_at": "2019-01-24T14:48:34Z",
  "closed_at": "2019-01-05T12:26:47Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n*feature*\r\n\r\n**What is the current behavior?**\r\nUsing hooks in class component return the `Hooks can only be called inside the body of a function component.` error message\r\n\r\n**What is the expected behavior?**\r\nI'd like to be able to use hooks in functional component AND in class component.\r\n\r\nActually in our team we declare all our component as class component. Since we have a lot a new developper incoming, and some of them are react beginners, we wanted to offer a homogeneous codebase, with code generator (using plop). Is it a bad practice ? Because we can't use hooks, the way they are actually implemented.\r\n\r\nOf course, we can use lifecycle and state without hooks. But if we want to use a hooks developed by another libraries, like https://react.i18next.com/experimental/using-with-hooks, we can't.\r\n\r\nI even asking myself, will class component will be deprecated ? ðŸ˜² ",
  "closed_by": {
    "login": "VincentLanglet",
    "id": 9052536,
    "node_id": "MDQ6VXNlcjkwNTI1MzY=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/9052536?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/VincentLanglet",
    "html_url": "https://github.com/VincentLanglet",
    "followers_url": "https://api.github.com/users/VincentLanglet/followers",
    "following_url": "https://api.github.com/users/VincentLanglet/following{/other_user}",
    "gists_url": "https://api.github.com/users/VincentLanglet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/VincentLanglet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/VincentLanglet/subscriptions",
    "organizations_url": "https://api.github.com/users/VincentLanglet/orgs",
    "repos_url": "https://api.github.com/users/VincentLanglet/repos",
    "events_url": "https://api.github.com/users/VincentLanglet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/VincentLanglet/received_events",
    "type": "User",
    "site_admin": false
  }
}
