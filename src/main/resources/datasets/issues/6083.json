{
  "url": "https://api.github.com/repos/facebook/react/issues/6083",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6083/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6083/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6083/events",
  "html_url": "https://github.com/facebook/react/issues/6083",
  "id": 135284700,
  "node_id": "MDU6SXNzdWUxMzUyODQ3MDA=",
  "number": 6083,
  "title": "Calling renderToString twice, second time shouldn't fire lifecycle events...",
  "user": {
    "login": "olalonde",
    "id": 416585,
    "node_id": "MDQ6VXNlcjQxNjU4NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/416585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/olalonde",
    "html_url": "https://github.com/olalonde",
    "followers_url": "https://api.github.com/users/olalonde/followers",
    "following_url": "https://api.github.com/users/olalonde/following{/other_user}",
    "gists_url": "https://api.github.com/users/olalonde/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/olalonde/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/olalonde/subscriptions",
    "organizations_url": "https://api.github.com/users/olalonde/orgs",
    "repos_url": "https://api.github.com/users/olalonde/repos",
    "events_url": "https://api.github.com/users/olalonde/events{/privacy}",
    "received_events_url": "https://api.github.com/users/olalonde/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-02-22T00:59:07Z",
  "updated_at": "2016-02-22T16:17:07Z",
  "closed_at": "2016-02-22T16:17:07Z",
  "author_association": "NONE",
  "body": "I'm trying to implement server side rendering with react/redux. My components use `componentWillMount` to start fetching data from a REST API and I use a simple counter in my redux store to see how many fetching requests are pending. I then have this code server side:\n\n``` javascript\n  ReactDOM.renderToString(rootEle)\n\n  store.subscribe(() => {\n    const state = store.getState()\n    if (state.wait === 0) {\n      const html = ReactDOM.renderToString(rootEle)\n      res.render(html)\n    }\n  })\n```\n\nwhich would work except for the fact that the second `ReactDOM.renderToString(rootEle)` fires all the componentWillMount events again, which increase the wait counter, which results in an infinite loop. So ideally, I was wondering if there was a way to call   `const something = ReactDOM.render(rootEle)`, wait a few seconds for my wait counter to go down to zero and `res.render(something.toString())`.\n\n**Edit:** As a temporary fix, I'm unsubscribing from the redux store when I reach wait === 0:\n\n``` javascript\n  ReactDOM.renderToString(rootEle)\n\n  const unsubscribe = store.subscribe(() => {\n    const state = store.getState()\n    if (state.wait === 0) {\n      unsubscribe()\n      const html = ReactDOM.renderToString(rootEle)\n      res.send(html)\n    }\n  })\n```\n\nthough it still does a bunch of useless async calls because that second renderToString calls the componentWillMount methods again.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
