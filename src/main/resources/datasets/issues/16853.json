{
  "url": "https://api.github.com/repos/facebook/react/issues/16853",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16853/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16853/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16853/events",
  "html_url": "https://github.com/facebook/react/pull/16853",
  "id": 496814472,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MzIwMDY5OTA3",
  "number": 16853,
  "title": "[eslint-plugin-react-hooks] Fix cyclic caching for loops containing aâ€¦",
  "user": {
    "login": "M-Izadmehr",
    "id": 28848972,
    "node_id": "MDQ6VXNlcjI4ODQ4OTcy",
    "avatar_url": "https://avatars0.githubusercontent.com/u/28848972?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/M-Izadmehr",
    "html_url": "https://github.com/M-Izadmehr",
    "followers_url": "https://api.github.com/users/M-Izadmehr/followers",
    "following_url": "https://api.github.com/users/M-Izadmehr/following{/other_user}",
    "gists_url": "https://api.github.com/users/M-Izadmehr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/M-Izadmehr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/M-Izadmehr/subscriptions",
    "organizations_url": "https://api.github.com/users/M-Izadmehr/orgs",
    "repos_url": "https://api.github.com/users/M-Izadmehr/repos",
    "events_url": "https://api.github.com/users/M-Izadmehr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/M-Izadmehr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-09-22T18:23:33Z",
  "updated_at": "2019-10-03T14:30:44Z",
  "closed_at": null,
  "author_association": "NONE",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/16853",
    "html_url": "https://github.com/facebook/react/pull/16853",
    "diff_url": "https://github.com/facebook/react/pull/16853.diff",
    "patch_url": "https://github.com/facebook/react/pull/16853.patch"
  },
  "body": "This MR Fixes a bug (#16832) in the `eslint-plugin-react-hooks`, where caching of cycles is performed wrong in some cases.\r\n\r\n**Example:** https://codesandbox.io/s/exciting-bhabha-mqj7q\r\n\r\n**Description**\r\nIf the user uses an `if` statement inside a `for ... of obj` statement, and uses a correct hook afterwards, the eslint shows an *error* that:\r\n`React Hook \"${hook}\" is called conditionally. React Hooks must be called in the exact same order in every component render.`\r\n\r\n**Reports**\r\nI guess that it is already known issue because, inside the [ESLintRulesOfHooks.js - L562](https://github.com/facebook/react/blob/master/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js#L562), it is already known that in some cases caching of cyclic paths in code path, might result in the wrong errors.\r\n\r\nAlso (#16832) reports this case too.\r\n\r\n**Reason**\r\nEslint uses `CodePathSegment` which is similar to doubly linked list. Based on the `CodePathSegment` AST different types of cyclic segments might happen. In the special case of [ForInStatement](https://eslint.org/docs/developer-guide/code-path-analysis#forinstatement) there are two paths from obj identifier to the next segment. In such a graph, in order to traverse all the paths from start to end, we need to not only remember the current segment, but also the whole path. \r\n\r\nThe current code uses a simple caching just by name of segments (and not the list of segment history) as a result, whenever it faces a cycle, it breaks the cycle by returning 0. As a result, there might be several conditions, where the segment might have cyclic and not cyclic paths to end. In the current code, if the first path is cyclic all the non-cyclic ones are thrown away. And depending on the starting point and endpoint of AST, we might have different results.\r\n\r\nFor example for the demo code, the result of  [RulesOfHooks.js - L404](https://github.com/facebook/react/blob/master/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js#L291), the value of all `allPathsFromStartToEnd` is calculated as `2` instead of `3`\r\n\r\n**Solution**\r\nWe need caching of responses and also saving cyclic paths for later logic, In the new code, I added a different caching mechanism, which also remembers the path history too. The effect of the performance is still negligible because even for [the most difficult test](https://github.com/facebook/react/blob/master/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js#L293) including `1099511627776` paths from start to end of the code, it only increases the time about 0.3s on MacBookPro.",
  "closed_by": null
}
