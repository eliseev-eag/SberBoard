{
  "url": "https://api.github.com/repos/facebook/react/issues/12320",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12320/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12320/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12320/events",
  "html_url": "https://github.com/facebook/react/issues/12320",
  "id": 301783716,
  "node_id": "MDU6SXNzdWUzMDE3ODM3MTY=",
  "number": 12320,
  "title": "filter JSON not working",
  "user": {
    "login": "ghost",
    "id": 10137,
    "node_id": "MDQ6VXNlcjEwMTM3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ghost",
    "html_url": "https://github.com/ghost",
    "followers_url": "https://api.github.com/users/ghost/followers",
    "following_url": "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
    "organizations_url": "https://api.github.com/users/ghost/orgs",
    "repos_url": "https://api.github.com/users/ghost/repos",
    "events_url": "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ghost/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-03-02T14:28:36Z",
  "updated_at": "2018-03-02T14:52:26Z",
  "closed_at": "2018-03-02T14:48:32Z",
  "author_association": "NONE",
  "body": "**How to filter data from one JSON call using http.get?**,\r\n\r\nconsole says: _TypeError: Cannot read property 'toLowerCase' of undefined_\r\n\r\n```\r\nimport React, { Component } from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// import data from './datos.json';\r\n\r\n// filter\r\nfunction searchingData(product) {\r\n  return function(x){\r\n    // return x.first.toLowerCase().includes(product.toLowerCase()) || !product;\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        items : [],\r\n        product: ''\r\n    };\r\n    // You should bind this object to componentWillMount method, other setState was not working\r\n    this.componentWillMount = this.componentWillMount.bind(this);\r\n  }\r\n  \r\n  componentWillMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(res => res.json())\r\n      .then( data => this.setState({ items : data }) );\r\n  }\r\n\r\n  SearchWord(event) {\r\n    this.setState({\r\n      product: event.target.value\r\n    })\r\n  }\r\n\r\n  // VIEW\r\n  render() {\r\n    \r\n    // const items = this.state.items; \r\n    const {items, product} = this.state;\r\n\r\n    return (\r\n      <Router> \r\n        <div className=\"App\">  \r\n\r\n          {/* SHOW JSON */}\r\n\r\n          {/* filter */}\r\n          <input type=\"text\" placeholder=\"SEARCH DATA\" onChange={this.componentWillMount} value=\"{product}\" /> \r\n\r\n          <ul>\r\n            {\r\n              items.filter(searchingData(product)).map(item =>\r\n                <li key={item.title}>\r\n                    {item.title}\r\n                </li>\r\n            )}\r\n          </ul>        \r\n\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n```",
  "closed_by": {
    "login": "jquense",
    "id": 339286,
    "node_id": "MDQ6VXNlcjMzOTI4Ng==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/339286?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jquense",
    "html_url": "https://github.com/jquense",
    "followers_url": "https://api.github.com/users/jquense/followers",
    "following_url": "https://api.github.com/users/jquense/following{/other_user}",
    "gists_url": "https://api.github.com/users/jquense/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jquense/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jquense/subscriptions",
    "organizations_url": "https://api.github.com/users/jquense/orgs",
    "repos_url": "https://api.github.com/users/jquense/repos",
    "events_url": "https://api.github.com/users/jquense/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jquense/received_events",
    "type": "User",
    "site_admin": false
  }
}
