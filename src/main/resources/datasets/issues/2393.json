{
  "url": "https://api.github.com/repos/facebook/react/issues/2393",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2393/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2393/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2393/events",
  "html_url": "https://github.com/facebook/react/issues/2393",
  "id": 46442065,
  "node_id": "MDU6SXNzdWU0NjQ0MjA2NQ==",
  "number": 2393,
  "title": "Implement Shallow Testing",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 30,
  "created_at": "2014-10-21T20:41:24Z",
  "updated_at": "2017-10-02T00:01:58Z",
  "closed_at": "2017-10-02T00:01:58Z",
  "author_association": "MEMBER",
  "body": "We need a way to test the output of a single level React component without resolving it all the way down to the bottom layer (whatever that is).\n\nI'm thinking something like this:\n\n``` javascript\nvar shallowRenderer = ReactTestUtils.createRenderer();\nshallowRenderer.render(<SomeComponent />);\nshallowRenderer.attachRef('myRefName', someMock);\n\nvar result = shallowRenderer.getRenderOutput();\nexpect(result.type).toBe('div');\nexpect(result.props.children).toEqual([\n  <span className=\"child1\" />,\n  <span className=\"child2\" />\n]);\n\nshallowRenderer.render(<SomeComponent aNew=\"Prop\" />);\n\nvar updatedResult = shallowRenderer.getRenderOutput();\nexpect(updatedResult.type).toBe('a');\n\nupdatedResult.props.onClick(mockEvent);\n\nvar updatedResultCausedByClick = shallowRenderer.getRenderOutput();\nexpect(updatedResult.props.className).toBe('was-clicked');\n\nvar instance = shallowRenderer.getMountedInstance();\ninstance.customFunction();\n\nvar updatedResultCausedByCustomFunction = shallowRenderer.getRenderOutput();\nexpect(updatedResultCausedByCustomFunction.props.className).toBe('custom');\n```\n\nBasically, this fix needs to go through the entire life-cycle of ReactCompositeComponent. It just needs to bail out whenever it would've continued rendering.\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
