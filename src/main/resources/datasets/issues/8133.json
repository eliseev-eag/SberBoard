{
  "url": "https://api.github.com/repos/facebook/react/issues/8133",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8133/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8133/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8133/events",
  "html_url": "https://github.com/facebook/react/pull/8133",
  "id": 186014098,
  "node_id": "MDExOlB1bGxSZXF1ZXN0OTE0NDY0NDI=",
  "number": 8133,
  "title": "[Fiber] Error boundaries should handle errors independently",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-10-28T20:27:31Z",
  "updated_at": "2016-10-28T21:58:54Z",
  "closed_at": "2016-10-28T21:58:54Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/8133",
    "html_url": "https://github.com/facebook/react/pull/8133",
    "diff_url": "https://github.com/facebook/react/pull/8133.diff",
    "patch_url": "https://github.com/facebook/react/pull/8133.patch"
  },
  "body": "Since error boundaries are \"atomic\" in Fiber, and errors in \"did\" lifecycles and \"willUnmount\" only surface after committing, we can end up in a situation where two independent boundaries should receive two independent errors from several components with broken lifecycle hooks.\n\nThis PR adds support for this and removes some unnecessary recursion.\n\nIt also \"fixes\" (I'm not sure it's a fix though) a problem: rethrowing errors makes some roots forever skip updates. You can search for \"FIXME\":\n\n``` js\n      // We need to make sure any future root can get scheduled despite these errors.\n      // Currently after throwing, nothing gets scheduled because these fields are set.\n      // FIXME: this is likely a wrong fix! It's still better than ignoring updates though.\n      nextScheduledRoot = null;\n      lastScheduledRoot = null;\n```\n\nIf I don't those fields, this test fails:\n\n``` js\n    var container = document.createElement('div');\n    expect(() => {\n      ReactDOM.render(<BrokenRender />, container);\n    }).toThrow('Hello');\n\n    container = document.createElement('div');\n    expect(() => {\n      ReactDOM.render(<BrokenComponentWillMount />, container);\n    }).toThrow('Hello');\n\n    container = document.createElement('div');\n    expect(() => {\n      ReactDOM.render(<BrokenComponentDidMount />, container);\n    }).toThrow('Hello');\n```\n\nIt fails because second and third requests to `render` are completely ignored since scheduler thinks they're already scheduled. I don't understand the scheduler well enough to propose a better fix.\n",
  "closed_by": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  }
}
