{
  "url": "https://api.github.com/repos/facebook/react/issues/12592",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12592/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12592/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12592/events",
  "html_url": "https://github.com/facebook/react/issues/12592",
  "id": 312940522,
  "node_id": "MDU6SXNzdWUzMTI5NDA1MjI=",
  "number": 12592,
  "title": "Add unicityKey to save react from rendering subpart of the DOM when it hasn't changed",
  "user": {
    "login": "bebeun",
    "id": 11339074,
    "node_id": "MDQ6VXNlcjExMzM5MDc0",
    "avatar_url": "https://avatars2.githubusercontent.com/u/11339074?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bebeun",
    "html_url": "https://github.com/bebeun",
    "followers_url": "https://api.github.com/users/bebeun/followers",
    "following_url": "https://api.github.com/users/bebeun/following{/other_user}",
    "gists_url": "https://api.github.com/users/bebeun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bebeun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bebeun/subscriptions",
    "organizations_url": "https://api.github.com/users/bebeun/orgs",
    "repos_url": "https://api.github.com/users/bebeun/repos",
    "events_url": "https://api.github.com/users/bebeun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bebeun/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-04-10T14:10:48Z",
  "updated_at": "2018-04-10T14:26:28Z",
  "closed_at": "2018-04-10T14:26:28Z",
  "author_association": "NONE",
  "body": "==> New feature proposal\r\n\r\nToday, if we want to save react from re rendering a sub part of a parent component1, we have no other choice but to create a component2 nested in component1 and implement shouldComponentUpdate for component2.\r\n\r\nIt is very useful. But in my case, my apps are very little likely to be written with multiple nested components since every DOM part is unique. Splitting my app into components would be very verbose.\r\nSo I only have a main component for a page with an inline DOM in the render function. But at the same time, depending on my app state, there are big DOM nodes I could save from rerendering.\r\n\r\nMy idea is to be able to use a kind of \"unicityKey\" that would tell react \"Okay, the unicityKey has not changed\", no need to go any deeper in this node, it is unchanged.\r\nFor example : \r\n\r\n    <div unicityKey={this.state.stuff} key={\"divNumber3\"} >\r\n        ...\r\n    </div>\r\nwould be the inline version of \r\n\r\n    <Component2  unicityKey={this.state.time} key={\"divNumber3\"} />`\r\n\r\nwith \r\n\r\n    class Component2 extends React.Component{  \r\n\r\n      shouldComponentUpdate(nextProps, nextState) {\r\n\r\n        return this.props.unicityKey != this.nextProps.unicityKey;  \r\n\r\n      }  \r\n\r\n      render() {\r\n\r\n          return (\r\n\r\n            <div>...</div>    \r\n                              \r\n          );\r\n\r\n        } \r\n\r\n    };\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
