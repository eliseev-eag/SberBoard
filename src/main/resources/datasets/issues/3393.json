{
  "url": "https://api.github.com/repos/facebook/react/issues/3393",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3393/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3393/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3393/events",
  "html_url": "https://github.com/facebook/react/issues/3393",
  "id": 60883286,
  "node_id": "MDU6SXNzdWU2MDg4MzI4Ng==",
  "number": 3393,
  "title": "Backwards-compatible Form attributes",
  "user": {
    "login": "cmgriffing",
    "id": 1195435,
    "node_id": "MDQ6VXNlcjExOTU0MzU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1195435?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cmgriffing",
    "html_url": "https://github.com/cmgriffing",
    "followers_url": "https://api.github.com/users/cmgriffing/followers",
    "following_url": "https://api.github.com/users/cmgriffing/following{/other_user}",
    "gists_url": "https://api.github.com/users/cmgriffing/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cmgriffing/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cmgriffing/subscriptions",
    "organizations_url": "https://api.github.com/users/cmgriffing/orgs",
    "repos_url": "https://api.github.com/users/cmgriffing/repos",
    "events_url": "https://api.github.com/users/cmgriffing/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cmgriffing/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2015-03-12T19:26:55Z",
  "updated_at": "2015-03-12T19:46:46Z",
  "closed_at": "2015-03-12T19:46:46Z",
  "author_association": "NONE",
  "body": "It would be good to be able to set an html-standard action and target for a form element. In my basic testing and research, this isn't currently possible.\n\nFor users with JS disabled, this would allow a truly isomorphic approach to using libraries like Fluxible.\n\nBasically, the app would use an \"isServer\" flag to render the form with the necessary html attributes on the server.\n\nThen, when the app is bootstrapped on the client, an \"isClient\" flag could render the form with xhr actions attached and the html attributes removed.\n\nI realize that most first-world users will likely have JS enabled. However, third-world users would benefit from being able to have JS turned off to cut down on bandwidth used, since it is likely that every MB counts.\n",
  "closed_by": {
    "login": "cmgriffing",
    "id": 1195435,
    "node_id": "MDQ6VXNlcjExOTU0MzU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1195435?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cmgriffing",
    "html_url": "https://github.com/cmgriffing",
    "followers_url": "https://api.github.com/users/cmgriffing/followers",
    "following_url": "https://api.github.com/users/cmgriffing/following{/other_user}",
    "gists_url": "https://api.github.com/users/cmgriffing/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cmgriffing/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cmgriffing/subscriptions",
    "organizations_url": "https://api.github.com/users/cmgriffing/orgs",
    "repos_url": "https://api.github.com/users/cmgriffing/repos",
    "events_url": "https://api.github.com/users/cmgriffing/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cmgriffing/received_events",
    "type": "User",
    "site_admin": false
  }
}
