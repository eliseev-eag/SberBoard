{
  "url": "https://api.github.com/repos/facebook/react/issues/14007",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14007/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14007/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14007/events",
  "html_url": "https://github.com/facebook/react/issues/14007",
  "id": 374727278,
  "node_id": "MDU6SXNzdWUzNzQ3MjcyNzg=",
  "number": 14007,
  "title": "Promises with Hooks as proposed",
  "user": {
    "login": "wesleycho",
    "id": 1703387,
    "node_id": "MDQ6VXNlcjE3MDMzODc=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1703387?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wesleycho",
    "html_url": "https://github.com/wesleycho",
    "followers_url": "https://api.github.com/users/wesleycho/followers",
    "following_url": "https://api.github.com/users/wesleycho/following{/other_user}",
    "gists_url": "https://api.github.com/users/wesleycho/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wesleycho/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wesleycho/subscriptions",
    "organizations_url": "https://api.github.com/users/wesleycho/orgs",
    "repos_url": "https://api.github.com/users/wesleycho/repos",
    "events_url": "https://api.github.com/users/wesleycho/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wesleycho/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-10-28T07:45:33Z",
  "updated_at": "2018-10-28T07:54:23Z",
  "closed_at": "2018-10-28T07:54:22Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature request? This is more to kickstart a discussion.\r\n\r\n**What is the current behavior?**\r\n\r\nWith the current proposal, with any promise-based function call, `useEffect` must be used something like so\r\n```js\r\nfunction MyComponent(props) {\r\n  const [state, setState] = useState(0);\r\n  let unmounted = false;\r\n  useEffect(() => {\r\n    myXhrRequest()\r\n      .then(data => {\r\n        if (!unmounted) {\r\n          setState(data);\r\n        }\r\n      });\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  });\r\n  ...\r\n}\r\n```\r\n\r\nThis is a fairly awkward pattern for promises, as one needs to add an extra check for mounted state potentially quite divorced from the unmount logic. It should be noted that for subscription-based patterns like with rxjs this is fine, but for promises this stinks and is a bit confusing - this would also get repetitive if there are multiple requests involved.\r\n\r\nIdeally the `useEffect` should make it easier to clean up asynchronous code without imposing on the pattern a user would to carry out async behavior. One manner that could remove the need for the confusing return function is to provide a `isMounted` helper function as an argument for the function passed into useEffect that returns whether the current component is mounted. It does not solve the verbosity completely, which might be outside the scope of React, but it removes the need for extra boilerplate that arguably hurts the readability.\r\n\r\nWith this proposal, the `useEffect` part could be rewritten like this\r\n```js\r\n  useEffect(({ isMounted }) => {\r\n    myXhrRequest()\r\n      .then(data => {\r\n        if (isMounted()) {\r\n          setState(data);\r\n        }\r\n      });\r\n  });\r\n```\r\n\r\nJust some thoughts anyhow, I would understand if this proposal is rejected.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
