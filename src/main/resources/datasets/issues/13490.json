{
  "url": "https://api.github.com/repos/facebook/react/issues/13490",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13490/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13490/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13490/events",
  "html_url": "https://github.com/facebook/react/issues/13490",
  "id": 354128604,
  "node_id": "MDU6SXNzdWUzNTQxMjg2MDQ=",
  "number": 13490,
  "title": "Consider keeping legacy context API for non-state usages",
  "user": {
    "login": "kobiburnley",
    "id": 7372363,
    "node_id": "MDQ6VXNlcjczNzIzNjM=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/7372363?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kobiburnley",
    "html_url": "https://github.com/kobiburnley",
    "followers_url": "https://api.github.com/users/kobiburnley/followers",
    "following_url": "https://api.github.com/users/kobiburnley/following{/other_user}",
    "gists_url": "https://api.github.com/users/kobiburnley/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kobiburnley/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kobiburnley/subscriptions",
    "organizations_url": "https://api.github.com/users/kobiburnley/orgs",
    "repos_url": "https://api.github.com/users/kobiburnley/repos",
    "events_url": "https://api.github.com/users/kobiburnley/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kobiburnley/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2018-08-26T20:59:00Z",
  "updated_at": "2018-08-29T15:32:42Z",
  "closed_at": "2018-08-27T13:11:41Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?** Feature request / question\r\n\r\nAccording to React docs, there are 2 ways to avoid passing props through many levels:\r\n1. (New) context API\r\n2. Composition (Inversion of control)\r\n\r\nWhen using the new context API, a consumer component must know, and explicitly import, a context.\r\nThis raises a quite big disadvantage comparing to the legacy context API:\r\nSuch component can't be reusable with different contexts (unless making a prop only version of this component, and wrapping it with another one that uses the context directly). \r\nIn fact, it means that a component can't be \"contextual\" and reusable (by different contexts) at the same time.\r\n\r\nUsing composition in many cases feels wrong for solving this, quoting the docs:\r\n_However, this isnâ€™t the right choice in every case: moving more complexity higher in the tree makes those higher-level components more complicated and forces the lower-level components to be more flexible than you may want._\r\n\r\nExample of a component I struggle to understand why it should now import a context:\r\n```JavaScript\r\nimport * as React from \"react\"\r\nimport * as propsTypes from \"prop-types\"\r\n\r\nexport class Link extends React.PureComponent {\r\n  static contextTypes = {\r\n    navTo: propsTypes.any\r\n  }\r\n  \r\n  handleClick = (e) => {\r\n    e.preventDefault()\r\n    const {path} = this.props\r\n    this.context.navTo(path)\r\n  }\r\n\r\n  render() {\r\n    const {path, ...props} = this.props\r\n    return <a href={path} onClick={this.handleClick} {...props} />\r\n  }\r\n}\r\n```\r\n\r\nIf it was already discussed or answered, I apologize, couldn't find any related issues.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
