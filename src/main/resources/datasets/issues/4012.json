{
  "url": "https://api.github.com/repos/facebook/react/issues/4012",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4012/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4012/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4012/events",
  "html_url": "https://github.com/facebook/react/issues/4012",
  "id": 84301994,
  "node_id": "MDU6SXNzdWU4NDMwMTk5NA==",
  "number": 4012,
  "title": "Injection of `ReactCompositeComponent` implementation",
  "user": {
    "login": "mridgway",
    "id": 191142,
    "node_id": "MDQ6VXNlcjE5MTE0Mg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/191142?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mridgway",
    "html_url": "https://github.com/mridgway",
    "followers_url": "https://api.github.com/users/mridgway/followers",
    "following_url": "https://api.github.com/users/mridgway/following{/other_user}",
    "gists_url": "https://api.github.com/users/mridgway/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mridgway/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mridgway/subscriptions",
    "organizations_url": "https://api.github.com/users/mridgway/orgs",
    "repos_url": "https://api.github.com/users/mridgway/repos",
    "events_url": "https://api.github.com/users/mridgway/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mridgway/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2015-06-03T01:40:59Z",
  "updated_at": "2016-03-03T21:10:20Z",
  "closed_at": "2016-03-03T21:10:20Z",
  "author_association": "CONTRIBUTOR",
  "body": "In researching a separate server implementation, I have found that being able to inject different component types in to `instantiateReactComponent` allows me to bypass much of the reconciliation logic that is not needed on the server. Via `ReactNativeComponent`, `instantiateReactComponent` most of the types are injectable with the exception of `ReactCompositeComponent`. \n\nI've also noticed that a lot of the component injection is spread in different two files: `ReactEmptyComponent` and `ReactNativeComponent`. Neither of these seem like a good place to add CompositeComponent injection.\n\nThese injection containers also contain a default implementation for many of their methods which could bloat package sizes if the defaults are overridden as they would likely be for the server.\n\nI would propose to have a `ReactComponentFactory` that contains the `instantiateReactComponent` method and provides the injection for each type of component. Defaults implementations would be provided only by `ReactDefaultInjection`, which would likely also have a derivative `ReactServerDefaultInject`.\n\nThis would also allow removal of this circular dependency wrapper: https://github.com/facebook/react/blob/master/src/renderers/shared/reconciler/instantiateReactComponent.js#L24\n",
  "closed_by": {
    "login": "mridgway",
    "id": 191142,
    "node_id": "MDQ6VXNlcjE5MTE0Mg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/191142?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mridgway",
    "html_url": "https://github.com/mridgway",
    "followers_url": "https://api.github.com/users/mridgway/followers",
    "following_url": "https://api.github.com/users/mridgway/following{/other_user}",
    "gists_url": "https://api.github.com/users/mridgway/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mridgway/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mridgway/subscriptions",
    "organizations_url": "https://api.github.com/users/mridgway/orgs",
    "repos_url": "https://api.github.com/users/mridgway/repos",
    "events_url": "https://api.github.com/users/mridgway/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mridgway/received_events",
    "type": "User",
    "site_admin": false
  }
}
