{
  "url": "https://api.github.com/repos/facebook/react/issues/7074",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7074/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7074/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7074/events",
  "html_url": "https://github.com/facebook/react/issues/7074",
  "id": 161048314,
  "node_id": "MDU6SXNzdWUxNjEwNDgzMTQ=",
  "number": 7074,
  "title": "document.documentElement === null causes TypeError during loading of react",
  "user": {
    "login": "rsms",
    "id": 47046,
    "node_id": "MDQ6VXNlcjQ3MDQ2",
    "avatar_url": "https://avatars1.githubusercontent.com/u/47046?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rsms",
    "html_url": "https://github.com/rsms",
    "followers_url": "https://api.github.com/users/rsms/followers",
    "following_url": "https://api.github.com/users/rsms/following{/other_user}",
    "gists_url": "https://api.github.com/users/rsms/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rsms/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rsms/subscriptions",
    "organizations_url": "https://api.github.com/users/rsms/orgs",
    "repos_url": "https://api.github.com/users/rsms/repos",
    "events_url": "https://api.github.com/users/rsms/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rsms/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2016-06-18T23:28:05Z",
  "updated_at": "2017-10-04T00:40:58Z",
  "closed_at": "2017-10-04T00:40:58Z",
  "author_association": "NONE",
  "body": "[bug]\n\n**Behavior**\n\nTo reproduce:\n- Load react before the HTML document has loaded.\n\nIn my case I load react into a Chromium web view (CEF 3.2743.1432.g66425de_macosx64) just after the \"window\" object is ready. There's a natural race condition here where the HTML document might or might not have been parsed yet, meaning that `document.documentElement === null` in some cases.\n\nWhen `document.documentElement` is null, the test `('textContent' in document.documentElement)` in [src/renderers/dom/client/utils/setTextContent.js](https://github.com/facebook/react/blob/40f6d3eacad563c67bea0aa1c2220de6239ece43/src/renderers/dom/client/utils/setTextContent.js#L41) causes an exception to be thrown:\n\n``` js\nUncaught TypeError: Cannot use 'in' operator to search for 'textContent' in null\n```\n\n**What is the expected behavior?**\n\nThat react gets loaded without errors independently of the HTML document load state. I expect to control when the HTML document is accessed (i.e. not implicitly by React during module loading.)\n\n_Possible fix:_ The code in [setTextContent.js](https://github.com/facebook/react/blob/40f6d3eacad563c67bea0aa1c2220de6239ece43/src/renderers/dom/client/utils/setTextContent.js#L41) should check `document.documentElement` before attempting to perform `in` on the object.\n\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\n- macOS 10.11.5 (15F34)\n- Chromium Embedded Framework 3.2743.1432.g66425de_macosx64\n- https://fb.me/react-15.1.0.min.js (also confirmed with https://fb.me/react-15.0.2.min.js)\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
