{
  "url": "https://api.github.com/repos/facebook/react/issues/1691",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/1691/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/1691/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/1691/events",
  "html_url": "https://github.com/facebook/react/issues/1691",
  "id": 35717821,
  "node_id": "MDU6SXNzdWUzNTcxNzgyMQ==",
  "number": 1691,
  "title": "Events propagate to nested components after stopPropagation()",
  "user": {
    "login": "lrowe",
    "id": 290859,
    "node_id": "MDQ6VXNlcjI5MDg1OQ==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/290859?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lrowe",
    "html_url": "https://github.com/lrowe",
    "followers_url": "https://api.github.com/users/lrowe/followers",
    "following_url": "https://api.github.com/users/lrowe/following{/other_user}",
    "gists_url": "https://api.github.com/users/lrowe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lrowe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lrowe/subscriptions",
    "organizations_url": "https://api.github.com/users/lrowe/orgs",
    "repos_url": "https://api.github.com/users/lrowe/repos",
    "events_url": "https://api.github.com/users/lrowe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lrowe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2014-06-14T00:56:47Z",
  "updated_at": "2017-10-01T23:14:45Z",
  "closed_at": "2017-10-01T23:14:45Z",
  "author_association": "CONTRIBUTOR",
  "body": "We're using react-bootstrap modals in a site with full page rendering, so we have nested React rendering. As of d853c8568ed870340984b8a86281158f888c8593 events are propagated to ancestors, but calls to `event.stopPropagation()` on the inner component hierarchy are not respected by the outer component hierarchy.\n\nComplicating matters, the SyntheticEvent is created afresh for dispatch to each component hierarchy and there is no stoppedPropagation equivalent to `nativeEvent.defaultPrevented` to be called in the SyntheticEvent constructor. So even if `forEachEventDispatch` (EventPluginUtils.js) checked `event.isPropagationStopped()` in the single callback case, it would still return false.\n\nTracking the propagationStopped status through a return value of `ReactEventEmitter.handleTopLevel` looks tricky too given `EventPluginHub.extractEvents` may map a single nativeEvent to multiple synthetic events.\n\nThe easiest fix may just be to set a custom property on the nativeEvent object in `SyntheticEvent.stopPropagation` to check in the constructor, then check `event.isPropagationStopped()` in the single callback case of `forEachEventDispatch`.\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
