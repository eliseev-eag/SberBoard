{
  "url": "https://api.github.com/repos/facebook/react/issues/10878",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10878/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10878/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10878/events",
  "html_url": "https://github.com/facebook/react/issues/10878",
  "id": 261018867,
  "node_id": "MDU6SXNzdWUyNjEwMTg4Njc=",
  "number": 10878,
  "title": "Detect when reconciliation has completed",
  "user": {
    "login": "dakom",
    "id": 6406986,
    "node_id": "MDQ6VXNlcjY0MDY5ODY=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6406986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dakom",
    "html_url": "https://github.com/dakom",
    "followers_url": "https://api.github.com/users/dakom/followers",
    "following_url": "https://api.github.com/users/dakom/following{/other_user}",
    "gists_url": "https://api.github.com/users/dakom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dakom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dakom/subscriptions",
    "organizations_url": "https://api.github.com/users/dakom/orgs",
    "repos_url": "https://api.github.com/users/dakom/repos",
    "events_url": "https://api.github.com/users/dakom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dakom/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2017-09-27T15:30:28Z",
  "updated_at": "2017-09-27T18:46:47Z",
  "closed_at": "2017-09-27T18:46:47Z",
  "author_association": "NONE",
  "body": "Reading up on the Fiber architecture and Renderers in general - I'm not quite sure how to tell when reconciliation has completed. This is particularly important when rendering animation or targeting something other than the DOM\r\n\r\nLet's consider, for example, a \"ticker\" root node that pushes changes on its children by setting state every requestAnimationFrame. If React has not finished reconciliation, this can quickly cascade into a mountain of pending updates. Therefore a reasonable strategy would be to \"skip frames\" (not set state) until reconciliation has definitively finished.\r\n\r\nNaively, I tried doing this on a practical level by simply waiting for `componentDidUpdate()` on the root node and using that as a gate - assuming that it will not be called until all the children finished their render cycles (the children ultimately update canvas in `componentWillReceiveProps()` - and render `null` though I'm not sure if that's relevant)\r\n\r\nI'm not sure if this is successful or not. Is there a simple way to measure?\r\n\r\nMore practically - and ideally even for a scenario where the children set there own state, is there a way to tell whether the tree as a whole has finished all reconciliation, or perhaps even from a particular node down?",
  "closed_by": {
    "login": "dakom",
    "id": 6406986,
    "node_id": "MDQ6VXNlcjY0MDY5ODY=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6406986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dakom",
    "html_url": "https://github.com/dakom",
    "followers_url": "https://api.github.com/users/dakom/followers",
    "following_url": "https://api.github.com/users/dakom/following{/other_user}",
    "gists_url": "https://api.github.com/users/dakom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dakom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dakom/subscriptions",
    "organizations_url": "https://api.github.com/users/dakom/orgs",
    "repos_url": "https://api.github.com/users/dakom/repos",
    "events_url": "https://api.github.com/users/dakom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dakom/received_events",
    "type": "User",
    "site_admin": false
  }
}
