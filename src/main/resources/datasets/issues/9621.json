{
  "url": "https://api.github.com/repos/facebook/react/issues/9621",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9621/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9621/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9621/events",
  "html_url": "https://github.com/facebook/react/issues/9621",
  "id": 226876895,
  "node_id": "MDU6SXNzdWUyMjY4NzY4OTU=",
  "number": 9621,
  "title": "Proper Explanation for ref vs controlled input and use case for state variable in react ?",
  "user": {
    "login": "nikhilgoyal104",
    "id": 20395920,
    "node_id": "MDQ6VXNlcjIwMzk1OTIw",
    "avatar_url": "https://avatars3.githubusercontent.com/u/20395920?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nikhilgoyal104",
    "html_url": "https://github.com/nikhilgoyal104",
    "followers_url": "https://api.github.com/users/nikhilgoyal104/followers",
    "following_url": "https://api.github.com/users/nikhilgoyal104/following{/other_user}",
    "gists_url": "https://api.github.com/users/nikhilgoyal104/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nikhilgoyal104/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nikhilgoyal104/subscriptions",
    "organizations_url": "https://api.github.com/users/nikhilgoyal104/orgs",
    "repos_url": "https://api.github.com/users/nikhilgoyal104/repos",
    "events_url": "https://api.github.com/users/nikhilgoyal104/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nikhilgoyal104/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-05-07T17:14:14Z",
  "updated_at": "2018-09-29T16:51:15Z",
  "closed_at": "2017-10-04T19:41:59Z",
  "author_association": "NONE",
  "body": "I went through the docs of react, about controlled and uncontrolled components. I have created a simple use case where I want to enforce the user to enter only uppercase values in the input field.\r\n1. In the first case I have used 'ref' with 'onChange' to achieve this and a global object's property to capture the dom node.\r\n\r\nHere's the code for that -\r\n\r\nhttps://jsfiddle.net/69z2wepo/78064/\r\n\r\n2. In the second case I have used 'value' property and state with 'onChange'. \r\n\r\nHere's the code for that -\r\n\r\nhttps://jsfiddle.net/69z2wepo/78066/\r\n\r\nThe docs says\r\n\r\n> With a controlled component, every state mutation will have an associated handler function. This makes it straightforward to modify or validate user input. For example, if we wanted to enforce that names are written with all uppercase letters, we could write handleChange as:\r\n`handleChange(event) {\r\n  this.setState({ value: event.target.value.toUpperCase() } );\r\n}`\r\n\r\n\r\nWell I can validate the user input even when I am not using state, and not syncing the value prop with state as done in the first example above. \r\n 1. So definitely validating user input can be done without using state at all ? \r\n 2. Can you explain why one approach is better than the other ? \r\n 3. What exactly the 'single source of truth' means and why it is so important ? \r\nIn both the cases I am using a global variable of the component which is an object and can be accessed throughout the component.\r\n\r\n 4. Also why should I unnecessarily use value = { this.state.input } in example 2, because that would call render on every keystroke, whereas in case 1 render is called only once. So isn't performance in case 1 better than 2 ?\r\n\r\nAlso from the docs:\r\n\r\n> To write an uncontrolled component, instead of writing an event handler for every state update, you can use a ref to get form values from the DOM.\r\n\r\nWell I need to write an event handler like 'onChange' even when using 'ref' to validate user input at run time as done in case 1. So using event handler with 'ref' is normal ?\r\n\r\nUse case for state variable -- From my understanding the only case where I have no other option than to use state variable is when I need to update the view dynamically. Because this.setState() calls render every time it is run . \r\nHere's the code for that -\r\n\r\nhttps://jsfiddle.net/69z2wepo/78068/\r\n\r\nI will be grateful if someone could clarify on all the three examples and enhance my understanding of the above concepts.\r\n\r\n\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
