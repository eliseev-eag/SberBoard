{
  "url": "https://api.github.com/repos/facebook/react/issues/11849",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/11849/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/11849/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/11849/events",
  "html_url": "https://github.com/facebook/react/pull/11849",
  "id": 281974833,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MTU4MjYzNjc2",
  "number": 11849,
  "title": "Add test exercising public API to test BeforeInputEventPlugin + FallbackCompositionState",
  "user": {
    "login": "GordyD",
    "id": 966511,
    "node_id": "MDQ6VXNlcjk2NjUxMQ==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/966511?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GordyD",
    "html_url": "https://github.com/GordyD",
    "followers_url": "https://api.github.com/users/GordyD/followers",
    "following_url": "https://api.github.com/users/GordyD/following{/other_user}",
    "gists_url": "https://api.github.com/users/GordyD/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GordyD/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GordyD/subscriptions",
    "organizations_url": "https://api.github.com/users/GordyD/orgs",
    "repos_url": "https://api.github.com/users/GordyD/repos",
    "events_url": "https://api.github.com/users/GordyD/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GordyD/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-12-14T04:01:29Z",
  "updated_at": "2018-02-22T18:27:43Z",
  "closed_at": "2018-02-22T18:27:37Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/11849",
    "html_url": "https://github.com/facebook/react/pull/11849",
    "diff_url": "https://github.com/facebook/react/pull/11849.diff",
    "patch_url": "https://github.com/facebook/react/pull/11849.patch"
  },
  "body": "Part of the effort to refactor tests to use the Public API #11299 \r\n\r\n- I've adopted a similar approach to the existing test for BeforeInputEventPlugin\r\n - These tests simulate events and then assert the event handler for onBeforeInput is fired or not fired based on the test conditions\r\n - The test scenarios are tested against IE11, Webkite and Presto environment simulations\r\n - I've encorporated what I understand to be the functionality in the FallbackCompositionState test\r\n\r\nThere are a few more test cases to add. However, the main reason I'm putting this diff up is to:\r\n - get feedback on approach\r\n - get community support on resolving a failing test I'm encountering when testing the expected behavior of the compositionend fallback behavior on a contenteditable - right now I avoid running these test cases by avoiding the failing tests when simulating an environment which relies on the fallback state`testContentEditableComponent(environments[2], scenarios.splice(0, 5));`",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
