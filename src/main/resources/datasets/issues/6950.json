{
  "url": "https://api.github.com/repos/facebook/react/issues/6950",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6950/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6950/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6950/events",
  "html_url": "https://github.com/facebook/react/issues/6950",
  "id": 158110762,
  "node_id": "MDU6SXNzdWUxNTgxMTA3NjI=",
  "number": 6950,
  "title": "Using React 15, under IE, dangerouslySetInnerHTML doesn't work on any SVG tag",
  "user": {
    "login": "lgra",
    "id": 885940,
    "node_id": "MDQ6VXNlcjg4NTk0MA==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/885940?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lgra",
    "html_url": "https://github.com/lgra",
    "followers_url": "https://api.github.com/users/lgra/followers",
    "following_url": "https://api.github.com/users/lgra/following{/other_user}",
    "gists_url": "https://api.github.com/users/lgra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lgra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lgra/subscriptions",
    "organizations_url": "https://api.github.com/users/lgra/orgs",
    "repos_url": "https://api.github.com/users/lgra/repos",
    "events_url": "https://api.github.com/users/lgra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lgra/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 52079258,
      "node_id": "MDU6TGFiZWw1MjA3OTI1OA==",
      "url": "https://api.github.com/repos/facebook/react/labels/Difficulty:%20starter",
      "name": "Difficulty: starter",
      "color": "94ce52",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2016-06-02T10:40:58Z",
  "updated_at": "2016-06-09T08:53:07Z",
  "closed_at": "2016-06-08T17:00:03Z",
  "author_association": "NONE",
  "body": "Hi,\n\nSince React15, DOM reconciliation produce deep DOM manipulation instead of setting innerHTML of higher level html DOM node. Every DOM mutation is done exactly where it has to be done, either for HTML element or SVG element.\nAs a side effect, when you use dangerouslySetInnerHTML on any SVG element, React create the SVG element using document.createElementNS then set the innerHTML element of the new element. That's pretty cool on any recent browser, except IE. IE11 doesn't support innerHTML on any SVG tag. There is no script error as assigning an unknown property is always allowed on any Object. But nothing is added in the DOM tree.\n\nfor example, this stateless component produce an empty svg on IE:\n\n```\nvar Icon = ({svg}) => {\n  return (\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\" style={{width: \"128px\", height: \"128px\", fill: \"red\"}}>\n      <title>a red icon</title>\n      <g dangerouslySetInnerHTML={{__html: svg}}/>\n    </svg>\n  )\n}\n\nvar svgPath = '<path d=\"M207.436,50v98.074h98.136V50H207.436z M364.429,148.074H462V50h-97.571V148.074z M148.578,148.074V50H50v98.074H148.578z M50,206.932h412V462H50V206.932z\"/>'\n\nReactDOM.render(\n  <Icon svg={svgPath} />,\n  document.body\n)\n```\n\n[here is a codepen demonstrating this issue](http://codepen.io/lgra/pen/OXPgoQ)\n\nThe goal is to add a string containing a literal SVG path (svgPath in the code) into a g tag wrapper inside a svg generic React component.\n\nThe first red icon is created using React15.\nThe second green icon is created using direct DOM manipulation and setting innerHTML on a g tag.\nThe third blue icon is created using direct DOM manipulation, without using the innerHTML on a g tag.\n\nAvery modern browser is able to display the 3 icons, except Internet Explorer (any version), which is only capable to display the blue one.\n\nThe blue one use a hack to not use innerHTML directly on the g tag.\n- embed the literal SVG path between svg literal tag\n- create a temporary div tag\n- set the innerHTML of this div tag\n- loop on any div.svg.childNodes and append them to the g tag.\n\n```\nvar ieDivWrapper = document.createElement(\"div\")\nieDivWrapper.innerHTML = \"<svg>\" + svgPath + \"</svg>\"\nArray.prototype.forEach.call(ieDivWrapper.firstChild.childNodes, (child) => {\n  ieElemG.appendChild(child)\n})\n```\n\nHere is a way to know if the browser supports or not innerHTML on svg tag:\n\n```\nvar svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")\nvar supportInnerHtml = svg.innerHTML !== undefined && !svg.hasOwnProperty(\"innerHTML\")\n```\n\nA way to avoid this issue with current React 15 in a statefull component is to embed the hack describe here in the componentDidMount and eventually the componentDidUpdate methods.\nConsidering the exemple provided here, this statefull version is working:\n\n```\nclass IconIE extends React.Component {\n  static propTypes = {\n    svg: React.PropTypes.string.isRequired\n  };\n  setInnerSvg() {\n    var ieDivWrapper = document.createElement(\"div\")\n    ieDivWrapper.innerHTML = \"<svg>\" + this.props.svg + \"</svg>\"\n    Array.prototype.forEach.call(ieDivWrapper.firstChild.childNodes, (child) => {\n      this.refs.itemG.appendChild(child)\n    })\n  }\n  componentDidMount() {\n    this.setInnerSvg()\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.svg !== this.props.svg) {\n      this.setInnerSvg()\n    }\n  }\n  render() {\n    return (\n      <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\" style={{width: \"128px\", height: \"128px\", fill: \"blue\"}}>\n        <title>a blue icon</title>\n        <g ref=\"itemG\" dangerouslySetInnerHTML={{__html: \"\"}}/>\n      </svg>\n    )\n  }\n}\n\nReactDOM.render(\n  <IconIE svg={svgPath} />,\n  document.getElementById('PATCHEDcontainer')\n)\n```\n\n[and the codepen.io](http://codepen.io/lgra/pen/KMwEMo)\n\nPlease notes that it's partially a regression, as dangerouslySetInnerHTML on an svg tag was working before React15 at the initial render (the svgPath string was added to the virtual DOM string, the whole virtual DOM generated by the render method was added to the real DOM using innerHTML of one of the the parents node). It was not working on a props update, except setting a key props on the high level svg tag, forcing react to use innerHTML of its parent (I was doing that without knowing why. Now, I do know).\n\nRegards.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
