{
  "url": "https://api.github.com/repos/facebook/react/issues/15006",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15006/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15006/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15006/events",
  "html_url": "https://github.com/facebook/react/issues/15006",
  "id": 416579679,
  "node_id": "MDU6SXNzdWU0MTY1Nzk2Nzk=",
  "number": 15006,
  "title": "useEffect memory leak when setting state in fetch promise",
  "user": {
    "login": "ryansaam",
    "id": 38289731,
    "node_id": "MDQ6VXNlcjM4Mjg5NzMx",
    "avatar_url": "https://avatars3.githubusercontent.com/u/38289731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ryansaam",
    "html_url": "https://github.com/ryansaam",
    "followers_url": "https://api.github.com/users/ryansaam/followers",
    "following_url": "https://api.github.com/users/ryansaam/following{/other_user}",
    "gists_url": "https://api.github.com/users/ryansaam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ryansaam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ryansaam/subscriptions",
    "organizations_url": "https://api.github.com/users/ryansaam/orgs",
    "repos_url": "https://api.github.com/users/ryansaam/repos",
    "events_url": "https://api.github.com/users/ryansaam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ryansaam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2019-03-03T23:23:36Z",
  "updated_at": "2019-04-22T17:41:30Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nReporting a possible bug\r\n\r\n**What is the current behavior?**\r\nMy app renders fine with no errors but I can't seem to figure out why I keep getting this warning:\r\n\r\nindex.js:1446 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n    in ArtistProfile (at App.js:51)\r\n    in component (created by Route)\r\n\r\napi-calls.js (Here's a link):\r\nhttps://github.com/ryansaam/litphum/blob/master/src/api-calls.js\r\n\r\nApp.js\r\n```javascript\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      user: {},\r\n      spotifyAPI: {}\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (user_token) {\r\n      sessionStorage.setItem('access_token', user_token)\r\n      this.setState({\r\n        spotifyAPI: new spotifyAPI( user_token )\r\n      })\r\n    } else if (sessionStorage.getItem('access_token')) {\r\n      this.setState({\r\n        spotifyAPI: new spotifyAPI( sessionStorage.getItem('access_token') )\r\n      })\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.spotifyAPI !== prevState.spotifyAPI)\r\n      this.state.spotifyAPI.getUserProfile()\r\n      .then(data => this.setState({user: data}))\r\n  }\r\n  \r\n  render() {\r\n    const { user, spotifyAPI } = this.state\r\n    const token = sessionStorage.getItem('access_token')\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n            { (spotifyAPI.user_token && user)\r\n            ? (<div className=\"logged-in\">\r\n                <div style={{width: \"250px\", height: \"100%\", position: \"relative\", float: \"left\"}} >\r\n                  <Nav image={user.images ? user.images[0].url : null} user={user} />\r\n                </div>\r\n                <main id=\"main\">\r\n                  <Route path={`/${user.type}/${user.id}`} exact component={() => <Home spotifyAPI={spotifyAPI} />} />\r\n                  <Route path=\"/artist/\" component={() => <ArtistProfile spotifyAPI={spotifyAPI} />} />\r\n                </main>\r\n              </div>) \r\n            : <div onClick={() => window.location = \"http://localhost:8888/login\"} >log in</div>\r\n            }\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\nArtistProfile.js\r\n```javascript\r\nconst  ArtistProfile = props => {\r\n  const [artistData, setArtistData] = useState(null)\r\n  const { getArtist, getArtistAlbums, getArtistTopTracks } = props.spotifyAPI\r\n\r\n  useEffect(() => {\r\n    const id = window.location.pathname.split(\"/\").pop()\r\n    const ac = new AbortController()\r\n    console.log(id)\r\n    Promise.all([\r\n      getArtist(id, ac),\r\n      getArtistAlbums(id, [\"album\"],\"US\", 10, 0, ac),\r\n      getArtistTopTracks(id, \"US\", ac)\r\n    ])\r\n    .then(response => {\r\n      setArtistData({\r\n        artist: response[0],\r\n        artistAlbums: response[1],\r\n        artistTopTracks: response[2]\r\n      })\r\n    })\r\n    .catch(ex => console.error(ex))\r\n    return () => ac.abort()\r\n  }, [])\r\n  console.log(artistData)\r\n  return (\r\n    <div>\r\n      <ArtistProfileContainer>\r\n        <AlbumContainer>\r\n          {artistData ? artistData.artistAlbums.items.map(album => {\r\n            return (\r\n              <AlbumTag\r\n                image={album.images[0].url}\r\n                name={album.name}\r\n                artists={album.artists}\r\n                key={album.id}\r\n              />\r\n            )\r\n          })\r\n          : null}\r\n        </AlbumContainer>\r\n      </ArtistProfileContainer>\r\n    </div>\r\n  )\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\nIf you can see in ArtistProfile.js I am using a clean up function that aborts when the component does unmount. The fetch would be aborted and state shouldn't update but for some reason I am still getting this memory leak warning.\r\n\r\nWhat I am expecting is for the warning to no longer throw because am using a clean up function that aborts the fetch.\r\n\r\nLink to repo: https://github.com/ryansaam/litphum\r\n\r\n- Files mentioned\r\n    App.js: https://github.com/ryansaam/litphum/blob/master/src/App.js\r\n    ArtistProfile.js: https://github.com/ryansaam/litphum/blob/master/src/components/ArtistProfile.js\r\n    api-calls.js: https://github.com/ryansaam/litphum/blob/master/src/api-calls.js\r\n\r\nMy stackoverflow question: https://stackoverflow.com/questions/54954385/react-useeffect-causing-cant-perform-a-react-state-update-on-an-unmounted-comp/54964237#54964237\r\n\r\n\r\n**Which versions of React, and which browser**\r\nReact 16.8.2\r\nLatest version of Chrome\r\n",
  "closed_by": {
    "login": "ryansaam",
    "id": 38289731,
    "node_id": "MDQ6VXNlcjM4Mjg5NzMx",
    "avatar_url": "https://avatars3.githubusercontent.com/u/38289731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ryansaam",
    "html_url": "https://github.com/ryansaam",
    "followers_url": "https://api.github.com/users/ryansaam/followers",
    "following_url": "https://api.github.com/users/ryansaam/following{/other_user}",
    "gists_url": "https://api.github.com/users/ryansaam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ryansaam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ryansaam/subscriptions",
    "organizations_url": "https://api.github.com/users/ryansaam/orgs",
    "repos_url": "https://api.github.com/users/ryansaam/repos",
    "events_url": "https://api.github.com/users/ryansaam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ryansaam/received_events",
    "type": "User",
    "site_admin": false
  }
}
