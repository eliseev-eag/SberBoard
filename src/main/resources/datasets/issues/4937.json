{
  "url": "https://api.github.com/repos/facebook/react/issues/4937",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4937/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4937/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4937/events",
  "html_url": "https://github.com/facebook/react/issues/4937",
  "id": 107761454,
  "node_id": "MDU6SXNzdWUxMDc3NjE0NTQ=",
  "number": 4937,
  "title": "ES6 Classes don't bring anything to the table.",
  "user": {
    "login": "igl",
    "id": 293519,
    "node_id": "MDQ6VXNlcjI5MzUxOQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/293519?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/igl",
    "html_url": "https://github.com/igl",
    "followers_url": "https://api.github.com/users/igl/followers",
    "following_url": "https://api.github.com/users/igl/following{/other_user}",
    "gists_url": "https://api.github.com/users/igl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/igl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/igl/subscriptions",
    "organizations_url": "https://api.github.com/users/igl/orgs",
    "repos_url": "https://api.github.com/users/igl/repos",
    "events_url": "https://api.github.com/users/igl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/igl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-09-22T17:27:56Z",
  "updated_at": "2015-09-22T20:33:59Z",
  "closed_at": "2015-09-22T17:29:45Z",
  "author_association": "NONE",
  "body": "I see there are 0 advantages over `createClass` only disadvantages. Why was this implemented already? I hate doing .bind and dealing with constructors and Foo extends Bar extends extends Baz extends Base. Mixins are nice the way they are. I can mix-in trait-like objects and don't have to deal with constructors messing things up. This is a huge step backwards into the backbone era. This is brainwashing another generations of pre-java noobs to think side effect sputtering class hierarchies are somehow \"better\"\n_rant over_\n",
  "closed_by": {
    "login": "igl",
    "id": 293519,
    "node_id": "MDQ6VXNlcjI5MzUxOQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/293519?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/igl",
    "html_url": "https://github.com/igl",
    "followers_url": "https://api.github.com/users/igl/followers",
    "following_url": "https://api.github.com/users/igl/following{/other_user}",
    "gists_url": "https://api.github.com/users/igl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/igl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/igl/subscriptions",
    "organizations_url": "https://api.github.com/users/igl/orgs",
    "repos_url": "https://api.github.com/users/igl/repos",
    "events_url": "https://api.github.com/users/igl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/igl/received_events",
    "type": "User",
    "site_admin": false
  }
}
