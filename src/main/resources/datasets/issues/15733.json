{
  "url": "https://api.github.com/repos/facebook/react/issues/15733",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15733/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15733/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15733/events",
  "html_url": "https://github.com/facebook/react/pull/15733",
  "id": 448352686,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjgyMTU4NjYw",
  "number": 15733,
  "title": "[Fresh] Generate signatures for Hooks",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-05-24T21:03:55Z",
  "updated_at": "2019-06-03T13:39:04Z",
  "closed_at": "2019-05-29T13:15:32Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/15733",
    "html_url": "https://github.com/facebook/react/pull/15733",
    "diff_url": "https://github.com/facebook/react/pull/15733.diff",
    "patch_url": "https://github.com/facebook/react/pull/15733.patch"
  },
  "body": "This adds support for editing components with Hooks.\r\n\r\nState preservation already works by default. The goal here is to _not_ preserve state in cases where it is known to lead to problems. Such as reordering or deleting Hooks. We want to detect when that happens and remount.\r\n\r\nThis is implemented by generating `__signature__` calls for functions that contains calls to Hooks:\r\n\r\n```js\r\nfunction ButtonV1() {\r\n  const [pressed, setPressed] = useState(false)\r\n}\r\n__signature__(ButtonV1, 'useState{[pressed, setPressed]}')\r\n\r\n// -----------\r\n// After edit\r\n// -----------\r\n\r\nfunction ButtonV1() {\r\n  const [hover, setHover] = useState(false)\r\n  const [pressed, setPressed] = useState(false)\r\n  // ...\r\n}\r\n__signature__(ButtonV1, 'useState{[hover, setHover]}\\nuseState{[pressed, setPressed]}')\r\n```\r\n\r\nIf a signature changes, the Fresh runtime will tell React to remount that component type.\r\n\r\nThe signature contains names of all Hooks. Hooks that have a left hand side like `const [foo, setFoo]` have its source embedded in the signature. This catches renames (which often indicate invasive edits like changing state variable type).\r\n\r\nIf you use custom Hooks, we add them as the last argument:\r\n\r\n```js\r\nimport useMyStuff from './useMyStuff'\r\n\r\nfunction Foo() {\r\n  const stuff = useMyStuff()\r\n}\r\n__signature__(\r\n  Foo,\r\n  'useMyStuff{stuff}',\r\n  () => [useMyStuff] // <--- references, not strings!\r\n);\r\n```\r\n\r\nThis lets us recurse into each custom Hook when comparing signatures, so that if `useMyStuff` itself gets edited, we can remount the components using it.\r\n\r\nThe last argument is lazily evaluated (a function) for two reasons:\r\n\r\n1. The reference might not be valid at the definition time because the Hook itself could be declared later in the file.\r\n2. In React Native, we'll want to avoid triggering inline requires at module init time to avoid differences with production behavior.\r\n\r\nThe PR is easier to [read without whitespace](https://github.com/facebook/react/pull/15733/files?w=1) because some logic moved. You might also want to check commits separately.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
