{
  "url": "https://api.github.com/repos/facebook/react/issues/16334",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16334/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16334/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16334/events",
  "html_url": "https://github.com/facebook/react/pull/16334",
  "id": 478961852,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MzA1OTY5NDc3",
  "number": 16334,
  "title": "[Flare] Rework the responder dispatching/batching mechanism",
  "user": {
    "login": "trueadm",
    "id": 1519870,
    "node_id": "MDQ6VXNlcjE1MTk4NzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1519870?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trueadm",
    "html_url": "https://github.com/trueadm",
    "followers_url": "https://api.github.com/users/trueadm/followers",
    "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
    "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
    "organizations_url": "https://api.github.com/users/trueadm/orgs",
    "repos_url": "https://api.github.com/users/trueadm/repos",
    "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trueadm/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    },
    {
      "id": 1296748300,
      "node_id": "MDU6TGFiZWwxMjk2NzQ4MzAw",
      "url": "https://api.github.com/repos/facebook/react/labels/React%20Flare",
      "name": "React Flare",
      "color": "63f2ff",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-08-09T12:29:10Z",
  "updated_at": "2019-08-19T18:22:51Z",
  "closed_at": "2019-08-19T18:22:47Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/16334",
    "html_url": "https://github.com/facebook/react/pull/16334",
    "diff_url": "https://github.com/facebook/react/pull/16334.diff",
    "patch_url": "https://github.com/facebook/react/pull/16334.patch"
  },
  "body": "We want to change the event system so it is possible to handle and manage ownership/propagation of event responders as we process the fiber tree. In order to do this, we need to change how the current event responder system works so that events that are queued to dispatch happen after the processing of each individual responder, rather than at the end.\r\n\r\nPreviously, we built up an array of all user events that needed to be dispatched, along with their priority and dispatched them all together. This made it impossible for user events to have effects that make it possible to control propagation and ownership though, as by this stage, we've already processed the responders. To illustrate this:\r\n\r\n```\r\nResponder A\r\n  ->\r\n    Responder B\r\n      ->\r\n        Responder C\r\n```\r\n\r\n*Old Model:*\r\n\r\nIf a native event happens and Responder C gets activated, we then bubble to Responder B and then to Responder A. Along the way, each responder might `dispatchEvent`, so we'd store the user events in an array. Once all Responders A, B, C have been handled we then flush all the events we've collected.\r\n\r\n*New Model:*\r\n\r\nIf a native event happens and Responder C gets activated, we then bubble to Responder B and then to Responder A. Along the way, each responder might `dispatchEvent`, if so, we now dispatch the user events at that point, rather than having to queue them up to flush at the end. We are able to do this by wrapping the entire event process in `batchedEventUpdates` and having a dedicated event that sets a flag for when we're in the process of executing a user event. The priority logic from before remains unchanged because of these tweaks.\r\n\r\nI also removed the global ownership model, as this new mechanism allows for a much more refined approach that simply globally saying a responder is the only owner. It also conflicts with how this new mechanism works.",
  "closed_by": {
    "login": "trueadm",
    "id": 1519870,
    "node_id": "MDQ6VXNlcjE1MTk4NzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1519870?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trueadm",
    "html_url": "https://github.com/trueadm",
    "followers_url": "https://api.github.com/users/trueadm/followers",
    "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
    "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
    "organizations_url": "https://api.github.com/users/trueadm/orgs",
    "repos_url": "https://api.github.com/users/trueadm/repos",
    "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trueadm/received_events",
    "type": "User",
    "site_admin": false
  }
}
