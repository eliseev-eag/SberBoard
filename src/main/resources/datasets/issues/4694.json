{
  "url": "https://api.github.com/repos/facebook/react/issues/4694",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4694/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4694/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4694/events",
  "html_url": "https://github.com/facebook/react/issues/4694",
  "id": 102671964,
  "node_id": "MDU6SXNzdWUxMDI2NzE5NjQ=",
  "number": 4694,
  "title": "Take `children` off `props`",
  "user": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2015-08-23T23:37:44Z",
  "updated_at": "2015-08-24T22:14:02Z",
  "closed_at": "2015-08-24T20:08:57Z",
  "author_association": "CONTRIBUTOR",
  "body": "- Having `children` on props is not only a bit awkward/random as per prior conversations with @jordwalke (ie. why is the prop \"children\" special cased?).  Not a deciding factor, but certainly a bit irksume from a theoretical computer science perspective.  `element.children` feels cleaner than `element.props.children`.\n- The current API is a bit ambiguous with regards to the result of `React.createElement('div', {children: ...}, ...);`, since children is now specified with two potentially conflicting values.  Imagine that the third argument is `null` or `[]` or just a different value.  I don't actually know what would happen off the top of my head, especially in the null case (is the null treated like undefined or does the third argument override the second?)\n- Having `children` on props means that the props object saved in the ReactElement can't be hoisted up by an intelligent runtime, which would otherwise be possible for runtimes/transpilers that can see that the non-child props don't depend on that particular render.  This could save thousands of allocations per render.\n- **Most importantly:** String compares are expensive.  Because children occurs in props, it means we need to do an additional string compare for each property we iterate over, since we need to handle the children prop as a special case.\n\nThis is mostly an RFC issue, it's something to consider before doing inline elements.  cc @sebmarkbage \n",
  "closed_by": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  }
}
