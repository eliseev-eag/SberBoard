{
  "url": "https://api.github.com/repos/facebook/react/issues/2928",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2928/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2928/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2928/events",
  "html_url": "https://github.com/facebook/react/issues/2928",
  "id": 55356040,
  "node_id": "MDU6SXNzdWU1NTM1NjA0MA==",
  "number": 2928,
  "title": "Properties of Rx / Observable React-like Experiments",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2015-01-24T02:40:06Z",
  "updated_at": "2017-10-02T00:17:14Z",
  "closed_at": "2017-10-02T00:17:14Z",
  "author_association": "MEMBER",
  "body": "This issue will be used to track some properties / features that are available in some experimental frameworks that build everything around Rx / Observable streams, but with liftable component boundaries.\n\nI've identified a few that already overlap well with existing projects:\n- [ ] Error Propagation / Boundaries (Errors propagate up the hierarchy.) https://github.com/facebook/react/issues/2461\n- [ ] Completion Propagation (A signal to tell that a component will no longer change. Can be used for memory cleanup/collapsing, async server-side rendering, transition groups that clean up exit animations.)\n- [ ] \"Prerendering\" or \"Lifting\" Components (That then become opaque to their containers.)\n  https://github.com/reactjs/react-future/tree/master/04%20-%20Layout\n- [ ] Async Reconciliation. (Any component can block the entire UI as waiting for data. Useful for server-side rendering or calling out to asynchronous, but fast APIs on the client, )\n\nThese features will probably be built in an optimized imperative style into the core but expose the same capabilities as if it was built as Observables.\n\nIt is a non-goal of this particular task to provide a similar API surface area to Observables but to track the capabilities exposed by such frameworks. It should be possible to experiment with alternative APIs that heavily rely on Observable semantics on top of these features.\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
