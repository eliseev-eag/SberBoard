{
  "url": "https://api.github.com/repos/facebook/react/issues/12596",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12596/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12596/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12596/events",
  "html_url": "https://github.com/facebook/react/issues/12596",
  "id": 312980151,
  "node_id": "MDU6SXNzdWUzMTI5ODAxNTE=",
  "number": 12596,
  "title": "[Question] Context provider state initialisation.",
  "user": {
    "login": "leonaves",
    "id": 1926652,
    "node_id": "MDQ6VXNlcjE5MjY2NTI=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1926652?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leonaves",
    "html_url": "https://github.com/leonaves",
    "followers_url": "https://api.github.com/users/leonaves/followers",
    "following_url": "https://api.github.com/users/leonaves/following{/other_user}",
    "gists_url": "https://api.github.com/users/leonaves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leonaves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leonaves/subscriptions",
    "organizations_url": "https://api.github.com/users/leonaves/orgs",
    "repos_url": "https://api.github.com/users/leonaves/repos",
    "events_url": "https://api.github.com/users/leonaves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leonaves/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 22,
  "created_at": "2018-04-10T15:40:31Z",
  "updated_at": "2018-11-13T14:59:41Z",
  "closed_at": "2018-08-02T19:34:49Z",
  "author_association": "NONE",
  "body": "Consider a component wrapping a context provider:\r\n\r\n```js\r\nclass ValueWrapper extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n      setValue: this.setValue,\r\n    };\r\n  }\r\n\r\n  setValue = (value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render = () => (\r\n    <Context.Provider value={this.state}>\r\n      {this.props.children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n```\r\n\r\nA consumer then might want to set a default value when it is first mounted. The only way I can see to do this using the new API is to check for an existing value on first render:\r\n\r\n```js\r\nclass ValueUpdater extends React.Component {\r\n  state = {\r\n    inputValue: 0,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  render = () => (\r\n    <Context.Consumer>\r\n      {({ value, setValue }) => {\r\n        if (!value) {\r\n          setValue(this.state.inputValue);\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            <input type=\"text\" value={value} onChange={handleInputChange}/>\r\n            <button onClick={() => setValue(this.state.inputValue)}>Update value</button>\r\n          </div>\r\n        );\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n};\r\n```\r\n\r\nBut this seems to break the golden rule of updating state in the render method (`setValue(this.state.inputValue)`), as this would immediately cause a re-render. Ideally I would be able to call the `setValue` from the context in the `componentDidMount` method of the `ValueUpdater` component, but with context as a render prop, that's not possible, as far as I can tell. The docs suggest passing props down to another component:\r\n\r\n```js\r\n  render = () => (\r\n    <Context.Consumer>\r\n      {({ value, setValue }) => (\r\n          <ValueUpdaterInput setValue={ setValue } value={ value } />\r\n      )}\r\n    </Context.Consumer>\r\n  )\r\n```\r\n\r\nBut if I tried to do the initialisation in the `ValueUpdaterInput` component's `componentDidMount` method, it would be called on every render, surely, as `ValueUpdaterInput` would be re-rendered each time?\r\n\r\nIs there a better pattern than this, or am I trying to use context inappropriately?",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
