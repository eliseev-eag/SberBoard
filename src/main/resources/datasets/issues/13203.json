{
  "url": "https://api.github.com/repos/facebook/react/issues/13203",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13203/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13203/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13203/events",
  "html_url": "https://github.com/facebook/react/issues/13203",
  "id": 340961732,
  "node_id": "MDU6SXNzdWUzNDA5NjE3MzI=",
  "number": 13203,
  "title": "Deep react state with only context API",
  "user": {
    "login": "dakom",
    "id": 6406986,
    "node_id": "MDQ6VXNlcjY0MDY5ODY=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6406986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dakom",
    "html_url": "https://github.com/dakom",
    "followers_url": "https://api.github.com/users/dakom/followers",
    "following_url": "https://api.github.com/users/dakom/following{/other_user}",
    "gists_url": "https://api.github.com/users/dakom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dakom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dakom/subscriptions",
    "organizations_url": "https://api.github.com/users/dakom/orgs",
    "repos_url": "https://api.github.com/users/dakom/repos",
    "events_url": "https://api.github.com/users/dakom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dakom/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-07-13T10:12:33Z",
  "updated_at": "2018-07-15T08:18:25Z",
  "closed_at": "2018-07-15T08:18:25Z",
  "author_association": "NONE",
  "body": "I'm considering a total rewrite of a decent-sized application and I've got this idea brewing, but I'm wondering if it'll scale or if there's any changes I should make at the planning stage:\r\n\r\nhttps://codesandbox.io/s/1rj55k32zq\r\n\r\nSpecifically does having different contexts offer any advantage in a case like this, where both are Provided at the same root, but Consumed at far different frequencies? In other words, should I just consolidate the `AppUpdater` into `AppState` even though `Buttons` isn't interested in State in terms of rendering?\r\n\r\nAlso, though this has less to do with Context, my concern is that keeping all the app state at the top level will cause unnecessary renders...\r\n\r\nI guess this comes back to the age-old question of Redux connectors vs. efficiency of PureComponents - but I don't think my app is at the scale where it really needs that sort of optimization of Redux, and I think I can use PureComponents in key areas for speed gains if it really comes to that... would be nice if there's hard data available somewhere about when to consider an alternative, even if very rough.",
  "closed_by": {
    "login": "dakom",
    "id": 6406986,
    "node_id": "MDQ6VXNlcjY0MDY5ODY=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6406986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dakom",
    "html_url": "https://github.com/dakom",
    "followers_url": "https://api.github.com/users/dakom/followers",
    "following_url": "https://api.github.com/users/dakom/following{/other_user}",
    "gists_url": "https://api.github.com/users/dakom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dakom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dakom/subscriptions",
    "organizations_url": "https://api.github.com/users/dakom/orgs",
    "repos_url": "https://api.github.com/users/dakom/repos",
    "events_url": "https://api.github.com/users/dakom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dakom/received_events",
    "type": "User",
    "site_admin": false
  }
}
