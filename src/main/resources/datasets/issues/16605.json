{
  "url": "https://api.github.com/repos/facebook/react/issues/16605",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16605/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16605/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16605/events",
  "html_url": "https://github.com/facebook/react/issues/16605",
  "id": 486730933,
  "node_id": "MDU6SXNzdWU0ODY3MzA5MzM=",
  "number": 16605,
  "title": "logCapturedError ate our error message",
  "user": {
    "login": "Jack-Works",
    "id": 5390719,
    "node_id": "MDQ6VXNlcjUzOTA3MTk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/5390719?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jack-Works",
    "html_url": "https://github.com/Jack-Works",
    "followers_url": "https://api.github.com/users/Jack-Works/followers",
    "following_url": "https://api.github.com/users/Jack-Works/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jack-Works/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jack-Works/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jack-Works/subscriptions",
    "organizations_url": "https://api.github.com/users/Jack-Works/orgs",
    "repos_url": "https://api.github.com/users/Jack-Works/repos",
    "events_url": "https://api.github.com/users/Jack-Works/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jack-Works/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-08-29T04:30:07Z",
  "updated_at": "2019-09-12T02:38:04Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?** **Bug**\r\n\r\n**What is the current behavior?** \r\n![image](https://user-images.githubusercontent.com/5390719/63910087-ee455f00-ca57-11e9-941a-f934d1525f01.png)\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nOur application is run in a very complicated environment. It's hard to do that.\r\n\r\n**What is the expected behavior?**\r\nI change the bundled file, add `console.error(error)` in `logCapturedError`\r\n\r\nAnd the correct error and it's stack is printed.\r\n\r\n![image](https://user-images.githubusercontent.com/5390719/63910242-7461a580-ca58-11e9-9bb8-9e1f8f58c10e.png)\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nI'm debugging in Firefox Developement Edition. And the code is running in the WebExtension environment. Please consider if the following code is correct in Firefox\r\n```\r\n// Browsers support silencing uncaught errors by calling\r\n    // `preventDefault()` in window `error` handler.\r\n    // We record this information as an expando on the error.\r\n\r\n    if (error != null && error._suppressLogging) {\r\n      if (errorBoundaryFound && willRetry) {\r\n        // The error is recoverable and was silenced.\r\n        // Ignore it and don't print the stack addendum.\r\n        // This is handy for testing error boundaries without noise.\r\n        return;\r\n      }\r\n      // The error is fatal. Since the silencing might have\r\n      // been accidental, we'll surface it anyway.\r\n      // However, the browser would have silenced the original error\r\n      // so we'll print it first, and then print the stack addendum.\r\n      console.error(error);\r\n      // For a more detailed description of this block, see:\r\n      // https://github.com/facebook/react/pull/13384\r\n    }\r\n```",
  "closed_by": null
}
