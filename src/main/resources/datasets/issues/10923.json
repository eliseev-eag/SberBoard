{
  "url": "https://api.github.com/repos/facebook/react/issues/10923",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10923/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10923/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10923/events",
  "html_url": "https://github.com/facebook/react/issues/10923",
  "id": 261393419,
  "node_id": "MDU6SXNzdWUyNjEzOTM0MTk=",
  "number": 10923,
  "title": "How to prevent React from modifying elements manipulated by external code?  ",
  "user": {
    "login": "giratikanon",
    "id": 333527,
    "node_id": "MDQ6VXNlcjMzMzUyNw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/333527?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/giratikanon",
    "html_url": "https://github.com/giratikanon",
    "followers_url": "https://api.github.com/users/giratikanon/followers",
    "following_url": "https://api.github.com/users/giratikanon/following{/other_user}",
    "gists_url": "https://api.github.com/users/giratikanon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/giratikanon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/giratikanon/subscriptions",
    "organizations_url": "https://api.github.com/users/giratikanon/orgs",
    "repos_url": "https://api.github.com/users/giratikanon/repos",
    "events_url": "https://api.github.com/users/giratikanon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/giratikanon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710332294,
      "node_id": "MDU6TGFiZWw3MTAzMzIyOTQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Server%20Rendering",
      "name": "Component: Server Rendering",
      "color": "d4c5f9",
      "default": false
    },
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2017-09-28T17:07:31Z",
  "updated_at": "2019-09-11T11:55:54Z",
  "closed_at": "2019-09-05T09:39:03Z",
  "author_association": "NONE",
  "body": "The New York Times is [rebuilding its website](https://open.nytimes.com/react-relay-and-graphql-under-the-hood-of-the-times-website-redesign-22fb62ea9764) using React. Currently, it’s an isomorphic app that has both server- and client-side renders. \r\n\r\n**Our question: What's the best way to include a non-React interactive graphic — maps, charts and other visualizations created by custom code — within a fully React page?**\r\n\r\nOur ideal scenario: \r\n\r\n* Server-side React renders the initial HTML for a graphic, using `dangerouslySetInnerHTML`, as part of a React page\r\n* Client-side React never touches those elements again, even during component mounting\r\n\r\nWe thought React 16 might solve this with `hydrate` method, but it still removes nodes that it doesn't expect, such as nodes generated by D3 or other client-side code. None of the options in [Integrating with Other Libraries](https://facebook.github.io/react/docs/integrating-with-other-libraries.html) seem to be an exact match either.\r\n\r\nThe classic use case is a graphic with a D3 map. The server-side HTML includes text and a placeholder <div> for the map, as well as the map JS. On page load, the map is immediately drawn by D3 but gets erased when React mounts client-side. The D3 nodes aren’t included in the server-side output, because they often vary based on viewport, device, etc.\r\n\r\nHere’s a [trivial example](https://jsfiddle.net/6zdhrych/), showing React 16’s `hydrate` removing client-created nodes after one second. On mobile devices, loading the React library and potentially other dependencies could take some seconds.\r\n\r\nThe simplest solution I can think of is a `shouldComponentMount` function, where we could return false. The rest of the React components on the page would mount, but leave the interactive graphic part alone. There are probably other solutions.\r\n \r\nConstraints:\r\n\r\n* We need to use dangerouslySetInnerHTML, because we need to deploy graphics outside of site releases\r\n* We need to render the initial HTML server-side for performance and simplicity\r\n* We can’t use iFrames for everything, as they’re not flexible enough\r\n* We can’t re-render or reattach elements, as that causes many problems — CSS animations restart, media playback is interrupted, input cursors and text selections are lost, etc.\r\n\r\nAny guidance is appreciated.\r\n\r\ncc @gaearon @leeb \r\n",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
