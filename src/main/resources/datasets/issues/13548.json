{
  "url": "https://api.github.com/repos/facebook/react/issues/13548",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13548/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13548/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13548/events",
  "html_url": "https://github.com/facebook/react/issues/13548",
  "id": 356606464,
  "node_id": "MDU6SXNzdWUzNTY2MDY0NjQ=",
  "number": 13548,
  "title": "When old and new Context are used simultaneously unexpected render can occur on Component ",
  "user": {
    "login": "istarkov",
    "id": 5077042,
    "node_id": "MDQ6VXNlcjUwNzcwNDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/5077042?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/istarkov",
    "html_url": "https://github.com/istarkov",
    "followers_url": "https://api.github.com/users/istarkov/followers",
    "following_url": "https://api.github.com/users/istarkov/following{/other_user}",
    "gists_url": "https://api.github.com/users/istarkov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/istarkov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/istarkov/subscriptions",
    "organizations_url": "https://api.github.com/users/istarkov/orgs",
    "repos_url": "https://api.github.com/users/istarkov/repos",
    "events_url": "https://api.github.com/users/istarkov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/istarkov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-09-03T22:14:12Z",
  "updated_at": "2018-09-03T22:52:21Z",
  "closed_at": "2018-09-03T22:51:55Z",
  "author_association": "CONTRIBUTOR",
  "body": "**Bug**\r\n\r\n**What is the current behavior?**\r\n\r\nWhen old and new Context are used simultaneously unexpected render can occur on Component \r\n\r\n**Demo**\r\n\r\nhttps://codesandbox.io/s/rw12v4jm7n\r\n\r\nClick Ok button, see log `I must not be called on button click `\r\n\r\n**What is the expected behavior?**\r\n\r\nWhen Ok button is clicked `Blabla` component must not be called, as it's parent is Pure component not called. So there is no visible reason in such call.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.4.2\r\n\r\n**Source**\r\n\r\n<details>\r\n<summary>Expand to see source</summary>\r\n\r\n```javascript\r\nimport * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst { Provider, Consumer } = React.createContext({});\r\n\r\nclass OldContext extends React.Component {\r\n  static childContextTypes = {\r\n    a: PropTypes.number\r\n  };\r\n\r\n  getChildContext() {\r\n    return {\r\n      a: 1\r\n    };\r\n  }\r\n  render() {\r\n    return React.Children.only(this.props.children);\r\n  }\r\n}\r\n\r\nclass StateProvider extends React.Component {\r\n  state = {\r\n    value: 0\r\n  };\r\n\r\n  onChange = value => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      props: { children },\r\n      state: { value },\r\n      onChange\r\n    } = this;\r\n\r\n    return <Provider value={{ value, onChange }}>{children}</Provider>;\r\n  }\r\n}\r\n\r\nconst Blabla = () => {\r\n  console.log(\"I must not be called on button click\");\r\n  return (\r\n    <Consumer>\r\n      {({ value, onChange }) => (\r\n        <div>\r\n          <div>{value}</div>\r\n          <button onClick={() => onChange(value + 1)}>ok</button>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nclass Pure extends React.PureComponent {\r\n  render() {\r\n    console.log(\"Pure render\");\r\n    return <Blabla />;\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StateProvider>\r\n    <Consumer>\r\n      {v => (\r\n        <OldContext theme={{ value: v.value }}>\r\n          <Pure />\r\n        </OldContext>\r\n      )}\r\n    </Consumer>\r\n  </StateProvider>,\r\n  rootElement\r\n);\r\n```\r\n</details>\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
