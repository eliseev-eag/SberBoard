{
  "url": "https://api.github.com/repos/facebook/react/issues/12152",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12152/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12152/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12152/events",
  "html_url": "https://github.com/facebook/react/issues/12152",
  "id": 294239608,
  "node_id": "MDU6SXNzdWUyOTQyMzk2MDg=",
  "number": 12152,
  "title": "Umbrella: 16.3 and 16.4 releases",
  "user": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 74359453,
      "node_id": "MDU6TGFiZWw3NDM1OTQ1Mw==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Release",
      "name": "Type: Release",
      "color": "00D8EA",
      "default": false
    },
    {
      "id": 710615342,
      "node_id": "MDU6TGFiZWw3MTA2MTUzNDI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Umbrella",
      "name": "Type: Umbrella",
      "color": "5319e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2018-02-04T22:57:38Z",
  "updated_at": "2018-05-15T16:36:37Z",
  "closed_at": "2018-05-15T16:36:37Z",
  "author_association": "MEMBER",
  "body": "## 16.3\r\n\r\n- [x] New context API\r\n  - [x] Add context API to test renderer https://github.com/facebook/react/issues/12150\r\n  - [ ] Add context API to shallow renderer (if it even makes sense?)\r\n  - [x] Mark private fields as private https://github.com/facebook/react/issues/12203\r\n  - [x] Context consumer/provider should bailout if props did not change https://github.com/facebook/react/issues/12218\r\n- [x] `getDerivedStateFromProps`\r\n  - [ ] Looks like the wording of [this warning](https://cdn-images-1.medium.com/max/1600/1*Wv-6Yyg7Wd5gIIBu2IKH7w.png) might need to be updated to reflect it actually *won't work* and not just a recommendation\r\n- [x] `UNSAFE`-prefixed versions of `componentWillMount` and `componentWillUpdate`\r\n- [x] `StrictMode`\r\n  - [x] Fires deprecation warnings for `componentWillMount`, `componentWillUpdate`, `componentWillReceiveProps`.\r\n- [x] `unstable_AsyncMode`\r\n  - [x] Enables async-by-default updates.\r\n  - [x] Also enables strict mode.\r\n- Changes related to async mode:\r\n  - Update scheduling:\r\n    - [x] Interactive updates\r\n      - Async, expires within ~1 second. If a subsequent interactive event is fired before an earlier one has flushed, the earlier one is synchronously flushed before processing the incoming one.\r\n      - Used for any event that is the result of a discrete user interaction. In other words, interactive events are events that cannot be debounced without affecting the terminal state. So a click event is interactive, but a scroll event is not.\r\n    - [x] Controlled updates\r\n      - Sync-ish. Effectively the same as using `unstable_batchedUpdates` in synchronous mode. Updates are flushed before React yields back to the browser.\r\n      - Used for controlled components, where the state of the DOM must always be in sync with React's internal state.\r\n    - [x] Deferred updates\r\n      - Default for updates outside a React lifecycle or event handler: `setTimeout`, promise handlers, etc.\r\n  - [x] `unstable_createRoot`\r\n    - Only useful for pre-rendering via `createBatch`. Not quite ready to make this API stable.\r\n    - Also enables async-mode for all children and the root.\r\n  - [x] `unstable_flushControlled`\r\n    - Only useful for things like Draft that need to wrap event handlers.\r\n  - [ ] Confirm `unstable_deferredUpdates` et al work when nested inside a lifecycle or other priority-changing function.\r\n- [x] Expose persistent mode via `react-reconciler`\r\n  - Use a separate entry point: `react-reconciler/persistent`, PR: https://github.com/facebook/react/pull/12156\r\n- [x] Fix fragment support in test renderer https://github.com/facebook/react/pull/12154\r\n- [x] Revert the deprecation of injecting custom event plugins (@necolas will do that) because we're not ready to commit to providing another migration path for RNW\r\n\r\n## 16.4\r\n- [ ] Deprecate `componentWillMount`, `componentWillUpdate`, and `componentWillReceiveProps`, even outside strict mode.\r\n  - They will keep working, but with a warning. You can add the `UNSAFE_` prefix if you want to keep using them.\r\n- [ ] Deprecate legacy context API (?)\r\n  - Possible migration strategy: implement the legacy API on top of the new API and extract it into a separate package, like `create-react-class` and `prop-types`.\r\n- [ ] Revert deprecation of injecting event plugins\r\n\r\n## A Far Future Major Version\r\n- Remove deprecated APIs\r\n  - [ ] Legacy context API (assuming we deprecate this in 16.x minor)\r\n  - [ ] `componentWillReceiveProps`, `componentWillUpdate`, `componentWillMount`\r\n- [ ] Strict mode everywhere\r\n  - Presumably we'll have added more warnings to strict mode by this point\r\n\r\n## Chose not to include in 16.3, but may include in 16.4 or beyond:\r\n  - New component API. We're holding off on this until we're closer to \"feature complete,\" a phrase which here means \"having implemented async rendering and bytecode compilation.\"\r\n  - Static version of `render` method. It would take lots of effort to migrate, mostly because of class instance methods used as event handlers. The migration effort may not be worth it if we eventually introduce a new component API that replaces classes.\r\n  - Stable version of `unstable_batchedUpdates`. We really should have made this stable a while ago, as it's clearly useful in synchronous mode. However, in asynchronous mode, it's effectively a no-op, so it would be weird to ask everyone to migrate to a new API, only to remove it in an upcoming release.\r\n  - Stable version of `unstable_AsyncMode`. It's probably ready to be used in production, in a limited capacity, but we're holding off until we've tested it more internally. Tentative plan is to make this stable in 16.4.\r\n  - Automatically opt error boundary children into strict mode. Technically, they should be strict mode resilient, but in many apps, this would effectively opt *all* components into strict mode, since the recommendation is to always have an error boundary at the top of the tree.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
