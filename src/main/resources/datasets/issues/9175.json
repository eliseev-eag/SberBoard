{
  "url": "https://api.github.com/repos/facebook/react/issues/9175",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9175/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9175/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9175/events",
  "html_url": "https://github.com/facebook/react/issues/9175",
  "id": 214154326,
  "node_id": "MDU6SXNzdWUyMTQxNTQzMjY=",
  "number": 9175,
  "title": "Simulate.click doesn't call click handler, if click handler passed via state in component",
  "user": {
    "login": "AlexandrTuniev",
    "id": 7453199,
    "node_id": "MDQ6VXNlcjc0NTMxOTk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/7453199?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AlexandrTuniev",
    "html_url": "https://github.com/AlexandrTuniev",
    "followers_url": "https://api.github.com/users/AlexandrTuniev/followers",
    "following_url": "https://api.github.com/users/AlexandrTuniev/following{/other_user}",
    "gists_url": "https://api.github.com/users/AlexandrTuniev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AlexandrTuniev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AlexandrTuniev/subscriptions",
    "organizations_url": "https://api.github.com/users/AlexandrTuniev/orgs",
    "repos_url": "https://api.github.com/users/AlexandrTuniev/repos",
    "events_url": "https://api.github.com/users/AlexandrTuniev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AlexandrTuniev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2017-03-14T17:49:35Z",
  "updated_at": "2017-03-27T08:44:03Z",
  "closed_at": "2017-03-27T08:44:03Z",
  "author_association": "NONE",
  "body": "Hi,\r\nWe have component like this \r\n```\r\nimport React, { PropTypes } from 'react';\r\nimport Drawer from 'material-ui/Drawer';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport injectTapEventPlugin from 'react-tap-event-plugin';\r\nimport { List, ListItem } from 'material-ui/List';\r\nimport Divider from 'material-ui/Divider';\r\nimport Settings from 'material-ui/svg-icons/action/settings';\r\nimport HelpOutline from 'material-ui/svg-icons/action/help-outline';\r\nimport SpeakerNotes from 'material-ui/svg-icons/action/speaker-notes';\r\nimport ExitToApp from 'material-ui/svg-icons/action/exit-to-app';\r\nimport Close from 'material-ui/svg-icons/navigation/close';\r\nimport Badge from 'material-ui/Badge';\r\n\r\nimport RightMenuButton from '../right-menu-button';\r\n\r\nrequire('./style.css');\r\n\r\ninjectTapEventPlugin();\r\n\r\nconst badgeStyle = {\r\n  top: -10,\r\n  right: -10,\r\n  width: 20,\r\n  height: 20,\r\n  backgroundColor: '#4286f4',\r\n};\r\n\r\nclass RightMenu extends React.Component {\r\n\r\n  constructor(...props) {\r\n    super(...props);\r\n    this.state = {\r\n      open: false,\r\n      directionLeft: true,\r\n    };\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState({\r\n      width: props.width,\r\n      directionLeftToRight: props.directionLeftToRight,\r\n      onConfigClick: props.onConfigClick,\r\n      onHelpClick: props.onHelpClick,\r\n      onNotificationsClick: props.onNotificationsClick,\r\n      onSignOutClick: props.onSignOutClick,\r\n    });\r\n  }\r\n\r\n  handleToggle() {\r\n    this.setState({ open: !this.state.open });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n  }\r\n\r\n  render() {\r\n    const closeButtonStyle = this.state.directionLeftToRight ? { float: 'left' } : { float: 'right' };\r\n    return (\r\n      <MuiThemeProvider>\r\n        <div>\r\n          <RightMenuButton\r\n            value=\"4\"\r\n            onClick={() => this.setState({ open: true })}\r\n          />\r\n          <Drawer\r\n            docked={false}\r\n            width={this.state.width}\r\n            open={this.state.open}\r\n            onRequestChange={open => this.setState({ open })}\r\n            openSecondary={this.state.directionLeftToRight}\r\n          >\r\n            <Close\r\n              style={closeButtonStyle}\r\n              className=\"machine-ui-profile-close-button\"\r\n              onClick={() => this.setState({ open: false })}\r\n            />\r\n            <div className=\"machine-ui-profile-placeholder\" />\r\n            <List style={{ paddingRight: 0, paddingLeft: 0, paddingTop: 0, paddingBottom: 0 }}>\r\n              <ListItem\r\n                primaryText=\"Configuration\"\r\n                leftIcon={<Settings />}\r\n                onClick={this.state.onConfigClick}\r\n              />\r\n              <Divider />\r\n              <ListItem\r\n                primaryText=\"Help\"\r\n                leftIcon={<HelpOutline />}\r\n                onClick={this.state.onHelpClick}\r\n              />\r\n              <Divider />\r\n              <ListItem\r\n                primaryText=\"Notifications\"\r\n                leftIcon={\r\n                  <Badge\r\n                    style={{ paddingRight: 0, paddingLeft: 0, paddingTop: 0, paddingBottom: 4 }}\r\n                    badgeContent={4}\r\n                    secondary\r\n                    badgeStyle={badgeStyle}\r\n                  >\r\n                    <SpeakerNotes style={{ color: 'gray' }} />\r\n                  </Badge>\r\n                }\r\n                onClick={this.state.onNotificationsClick}\r\n              />\r\n              <Divider />\r\n              <ListItem\r\n                primaryText=\"Sign out\"\r\n                leftIcon={<ExitToApp />}\r\n                onClick={this.state.onSignOutClick}\r\n              />\r\n            </List>\r\n          </Drawer>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nRightMenu.defaultProps = {\r\n  width: 400,\r\n  directionLeftToRight: false,\r\n  onConfigClick: null,\r\n  onHelpClick: null,\r\n  onNotificationsClick: null,\r\n  onSignOutClick: null,\r\n};\r\n\r\nRightMenu.propTypes = {\r\n  width: PropTypes.number,\r\n  directionLeftToRight: PropTypes.bool,\r\n  onConfigClick: PropTypes.func,\r\n  onHelpClick: PropTypes.func,\r\n  onNotificationsClick: PropTypes.func,\r\n  onSignOutClick: PropTypes.func,\r\n};\r\nexport default RightMenu;\r\n```\r\n\r\nAnd I'm trying implement unit test for it,  and have this codes for testing\r\n```\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TestUtils from 'react-addons-test-utils';\r\nimport { ListItem } from 'material-ui/List';\r\n\r\nimport RightMenu from '../src/components/right-menu';\r\n\r\ndescribe('RightMenu', () => {\r\n  let onConfigClickHandler;\r\n  let onHelpClickHadler;\r\n  let onNotificationsClickHadler;\r\n  let onSignOutClickHadler;\r\n  let view;\r\n  let menuItems;\r\n  let configButton\r\n  beforeEach(()=> {\r\n    onConfigClickHandler = jest.fn();\r\n    onHelpClickHadler = jest.fn();\r\n    onNotificationsClickHadler = jest.fn();\r\n    onSignOutClickHadler = jest.fn();\r\n    view = TestUtils.renderIntoDocument(<RightMenu onConfigClick={onConfigClickHandler}\r\n                                                   onHelpClick={onHelpClickHadler}\r\n                                                   onNotificationsClick={onNotificationsClickHadler}\r\n                                                   onSignOutClick={onSignOutClickHadler} />);\r\n  });\r\n\r\n  it('should call click handler when clicked', () => {\r\n    menuItems = TestUtils.scryRenderedComponentsWithType(view, ListItem);\r\n    configButton = ReactDOM.findDOMNode(menuItems[0]).children[0];\r\n\r\n    expect(configButton.textContent).toContain('Configuration');\r\n    TestUtils.Simulate.click(configButton);\r\n    expect(onConfigClickHandler).toBeCalled();\r\n  });\r\n});\r\n```\r\n\r\nHowever test fails, but if I change in a component the way I passed handler FROM\r\n```\r\n<ListItem\r\n      primaryText=\"Help\"\r\n      leftIcon={<HelpOutline />}\r\n      onClick={this.state.onHelpClick}\r\n />\r\n```\r\nTO \r\n```\r\n<ListItem\r\n      primaryText=\"Help\"\r\n      leftIcon={<HelpOutline />}\r\n      onClick={**this.props.onHelpClick**}\r\n />\r\n```\r\nIt starts work, and handler called as expected, can anyone explain  why it not works , thanks in advance!",
  "closed_by": {
    "login": "AlexandrTuniev",
    "id": 7453199,
    "node_id": "MDQ6VXNlcjc0NTMxOTk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/7453199?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AlexandrTuniev",
    "html_url": "https://github.com/AlexandrTuniev",
    "followers_url": "https://api.github.com/users/AlexandrTuniev/followers",
    "following_url": "https://api.github.com/users/AlexandrTuniev/following{/other_user}",
    "gists_url": "https://api.github.com/users/AlexandrTuniev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AlexandrTuniev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AlexandrTuniev/subscriptions",
    "organizations_url": "https://api.github.com/users/AlexandrTuniev/orgs",
    "repos_url": "https://api.github.com/users/AlexandrTuniev/repos",
    "events_url": "https://api.github.com/users/AlexandrTuniev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AlexandrTuniev/received_events",
    "type": "User",
    "site_admin": false
  }
}
