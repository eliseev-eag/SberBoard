{
  "url": "https://api.github.com/repos/facebook/react/issues/16734",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16734/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16734/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16734/events",
  "html_url": "https://github.com/facebook/react/issues/16734",
  "id": 491794348,
  "node_id": "MDU6SXNzdWU0OTE3OTQzNDg=",
  "number": 16734,
  "title": "Calling window.print() can cause React to crash under specific conditions",
  "user": {
    "login": "mwszekely",
    "id": 19625841,
    "node_id": "MDQ6VXNlcjE5NjI1ODQx",
    "avatar_url": "https://avatars2.githubusercontent.com/u/19625841?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mwszekely",
    "html_url": "https://github.com/mwszekely",
    "followers_url": "https://api.github.com/users/mwszekely/followers",
    "following_url": "https://api.github.com/users/mwszekely/following{/other_user}",
    "gists_url": "https://api.github.com/users/mwszekely/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mwszekely/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mwszekely/subscriptions",
    "organizations_url": "https://api.github.com/users/mwszekely/orgs",
    "repos_url": "https://api.github.com/users/mwszekely/repos",
    "events_url": "https://api.github.com/users/mwszekely/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mwszekely/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929151,
      "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
      "name": "Type: Bug",
      "color": "b60205",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-09-10T17:05:25Z",
  "updated_at": "2019-09-28T01:29:36Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nReport a bug.\r\n\r\n**What is the current behavior?**\r\nProgrammatically calling window.print() can cause React to report strange errors before crashing under certain circumstances.  The trigger *seems to be* a call to print() that results in a React state change somewhere (which, in Chrome, seems to happen because the print preview it shows can cause media query events, which can be hooked up to calls to a setState function).  This does not always happen, however--as shown in the example if the code is not called from in a setTimeout it doesn't seem to crash.  In addition, if the user initiates printing instead (e.g. via CTRL+P), React never crashes.\r\n\r\nThe two errors I've seen happen as a result of this are `Failed to execute 'handleEvent' on 'EventListener': The provided callback is no longer runnable` (needs \"Pause on caught exceptions\" in Chrome's DevTools to catch), and after a few of those they're followed by `Maximum update depth exceeded` (even though the setState function is only called once).  Once this happens, there's a good chance the tab become completely unresponsive after the print dialog is closed.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**\r\n\r\nA minimal example can be found here: https://codesandbox.io/s/immutable-snowflake-06cj2 . There are no external dependencies. The code is commented with instructions to reproduce the behavior.\r\n\r\nI've also included a copy of the code here for completeness' sake:\r\n\r\n```jsx\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Custom hook to match media queries.\r\n// The setMatch call in this function is at the bottom of the error stack.\r\nfunction useMediaQuery(query) {\r\n\r\n  const [match, setMatch] = React.useState(() => window.matchMedia(query).matches);\r\n\r\n  React.useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n\r\n    /*************************************************************/\r\n    /* If this function is not called, the crash does not occur. */\r\n    /* When window.print is called, this effect is run as a      */\r\n    /* consequence. However React handles it causes errors and   */\r\n    /* other strange behavior. Because Firefox handles printing  */\r\n    /* differently, it does not crash.                           */\r\n    /* While this is an example of using setState in useEffect,  */\r\n    /* it is only run once before the error is thrown anyway.    */\r\n    /*************************************************************/\r\n    const handleMatch = () => setMatch(queryList.matches);\r\n    handleMatch();\r\n\r\n    // Bookkeeping, not relevant to the crash.\r\n    queryList.addListener(handleMatch);\r\n    return () => queryList.removeListener(handleMatch);\r\n  }, [query]);\r\n\r\n  return match;\r\n}\r\n\r\n\r\nexport function App() {\r\n  // This is the simplist media query that will cause a crash\r\n  // But anything will work as long as it's different during printing.\r\n  // For example, \"(max-width: 1260px)\" also works if the window\r\n  // is wide enough.\r\n  let isPrint = useMediaQuery(\"print\");\r\n\r\n  return (\r\n    <div>\r\n      <p style={{ fontWeight: 'bold' }}>Important: Only Chrome crashes; Firefox (and likely others) are safe.</p>\r\n      <p>(You may need to open this page in its own window instead of the Code Sandbox split-screen.)</p>\r\n\r\n      <button onClick={() => setTimeout(window.print, 100)}>Crashes</button>\r\n      <button onClick={asyncPrint}>Crashes</button>\r\n      <button onClick={() => window.print()}>Does not crash</button>\r\n      <button onClick={syncPrint}>Does not crash</button>\r\n      <p>(Note that pressing CTRL+P never crashes)</p>\r\n      <p>If you click the button to call window.print(), React will behave strangely. Once the print preview is about to show, suddenly an error <code>\"Failed to execute 'handleEvent' on 'EventListener': The provided callback is no longer runnable\"</code> will be thrown. After that happens a few times, a <code>\"Maximum update depth exceeded\"</code> error will be thrown, even though the setState function is only called once.</p>\r\n      <p>(Printing with CTRL+P won't crash, clicking the button to print will)</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction syncPrint() { window.print(); }\r\nfunction asyncPrint() { setTimeout(window.print, 100); }\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n```\r\n\r\n**What is the expected behavior?**\r\nReact should not throw errors after calling window.print(), even if doing so causes state changes.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nThis is the latest release (16.9.0).  I am unsure if other versions of React are affected.\r\nThe behavior was tested using Chrome 76 on Windows 10.  This behavior _will not happen_ in Firefox and likely other browsers as well, probably due to the unique way Chrome handles printing and print previews.\r\n\r\n\r\n\r\n",
  "closed_by": null
}
