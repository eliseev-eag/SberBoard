{
  "url": "https://api.github.com/repos/facebook/react/issues/10016",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10016/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10016/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10016/events",
  "html_url": "https://github.com/facebook/react/issues/10016",
  "id": 237418343,
  "node_id": "MDU6SXNzdWUyMzc0MTgzNDM=",
  "number": 10016,
  "title": "Feature Request: Need ability to debug checksum mismatch in production environment",
  "user": {
    "login": "lingyan",
    "id": 1414235,
    "node_id": "MDQ6VXNlcjE0MTQyMzU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1414235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lingyan",
    "html_url": "https://github.com/lingyan",
    "followers_url": "https://api.github.com/users/lingyan/followers",
    "following_url": "https://api.github.com/users/lingyan/following{/other_user}",
    "gists_url": "https://api.github.com/users/lingyan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lingyan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lingyan/subscriptions",
    "organizations_url": "https://api.github.com/users/lingyan/orgs",
    "repos_url": "https://api.github.com/users/lingyan/repos",
    "events_url": "https://api.github.com/users/lingyan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lingyan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-06-21T05:26:05Z",
  "updated_at": "2017-07-11T10:36:02Z",
  "closed_at": "2017-07-11T10:36:02Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nCurrently, if checksum mismatch happens when mounting React tree on server rendered markup, we can only get markup difference in dev environment.  Reality is, mismatches happen more in production env, where there are much bigger variety of user contexts that can trigger the mismatch.  It is very hard to reproduce the mismatch scenarios in dev environment, without knowing where the markup difference is.\r\n\r\n**What is the expected behavior?**\r\n\r\nWhat I'm proposing is to provide apps a way to obtain the markup difference even in production environment, so that the diffs can be reported back to developers for debugging mismatch root cause.\r\n\r\nFiber would probably change how checksum works.  But before it is ready, we still need ability to debug this issue in production env.\r\n\r\nI was trying something like this: https://github.com/lingyan/react/compare/master...reportMarkupDiff  It works but probably is not the best approach.  The idea is simple though:\r\n* provide a way for application to control which react tree to report markup diff upon checksum mismatch, as application might only care about mismatch in a subset of the React trees mounted and there would be concerns with [markup normalization](https://github.com/facebook/react/blob/34927ea04f0f4c7cd0b5a5989071a7b78d08b793/src/renderers/dom/stack/client/ReactMount.js#L691-L707) cost:\r\n   *  I am using a data attribute on container node, but it is not the best approach, since container can also be document node.\r\n   * I thought about two alternative ways but neither of them is perfect:\r\n        * add `reportMarkupDiff` option to `ReactDom.render()` signature\r\n        * add a prop like `reportMarkupDiff` to the element being rendered\r\n* allow application to collect the markup diff even in production environment:\r\n   * I'm setting the markup difference as the value of the same data attribute on the container node\r\n\r\nPlease share your thoughts and ideas.  I am up for raising a PR to implement the most ideal approach. Thanks!\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
