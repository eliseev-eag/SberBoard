{
  "url": "https://api.github.com/repos/facebook/react/issues/3138",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3138/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3138/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3138/events",
  "html_url": "https://github.com/facebook/react/issues/3138",
  "id": 57630890,
  "node_id": "MDU6SXNzdWU1NzYzMDg5MA==",
  "number": 3138,
  "title": "Feature request: Allow className to take an array",
  "user": {
    "login": "trotzig",
    "id": 578277,
    "node_id": "MDQ6VXNlcjU3ODI3Nw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/578277?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trotzig",
    "html_url": "https://github.com/trotzig",
    "followers_url": "https://api.github.com/users/trotzig/followers",
    "following_url": "https://api.github.com/users/trotzig/following{/other_user}",
    "gists_url": "https://api.github.com/users/trotzig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trotzig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trotzig/subscriptions",
    "organizations_url": "https://api.github.com/users/trotzig/orgs",
    "repos_url": "https://api.github.com/users/trotzig/repos",
    "events_url": "https://api.github.com/users/trotzig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trotzig/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2015-02-13T17:50:40Z",
  "updated_at": "2019-08-21T15:16:04Z",
  "closed_at": "2015-02-13T20:14:12Z",
  "author_association": "NONE",
  "body": "I often use components that both have an internal `className` as well as an optional `className` passed in as a prop. The way I've been implementing this is either through (A) a local array that I construct and serialize into the `className` prop, or (B) through using `React.addons.classSet`.\n\nA:\n\n``` jsx\nvar classNames = ['my-component'];\nif (this.props.className) {\n  classNames.push(this.props.className);\n}\nreturn <MyComponent className={classNames.join(' ')} />;\n```\n\nB:\n\n``` jsx\nvar classes = {\n  'my-component': true\n};\nif (this.props.className) {\n  classes[this.props.className] = true;\n}\nreturn <MyComponent className={React.addons.classSet(classes)} />;\n```\n\nA is slightly less verbose, but harder to use if you have modifier classes as well (e.g. `my-component--is-selected`).\n\nI'm suggesting allowing the className to be a string _or_ an array. And if it is an array, React internals would compact and serialize the className array into a className string.  \n\n``` jsx\nreturn <MyComponent className={['my-component', this.props.className]} />;\n```\n\nIf this is a good idea, I could make an attempt at a PR.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
