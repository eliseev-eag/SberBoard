{
  "url": "https://api.github.com/repos/facebook/react/issues/6956",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6956/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6956/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6956/events",
  "html_url": "https://github.com/facebook/react/issues/6956",
  "id": 158367651,
  "node_id": "MDU6SXNzdWUxNTgzNjc2NTE=",
  "number": 6956,
  "title": "Context updates are unavoidable",
  "user": {
    "login": "markboyall",
    "id": 17589164,
    "node_id": "MDQ6VXNlcjE3NTg5MTY0",
    "avatar_url": "https://avatars2.githubusercontent.com/u/17589164?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markboyall",
    "html_url": "https://github.com/markboyall",
    "followers_url": "https://api.github.com/users/markboyall/followers",
    "following_url": "https://api.github.com/users/markboyall/following{/other_user}",
    "gists_url": "https://api.github.com/users/markboyall/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markboyall/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markboyall/subscriptions",
    "organizations_url": "https://api.github.com/users/markboyall/orgs",
    "repos_url": "https://api.github.com/users/markboyall/repos",
    "events_url": "https://api.github.com/users/markboyall/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markboyall/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-06-03T13:30:38Z",
  "updated_at": "2016-06-03T17:35:28Z",
  "closed_at": "2016-06-03T17:35:28Z",
  "author_association": "NONE",
  "body": "See http://jsfiddle.net/9dn3ky4j/\n\nBasically, when a component supplies getChildContext, there's nothing to check and see if the context has actually changed or not - not even a ===. As long as you have a getChildContext, then it's always a new context. The problem with this is that when you re-render a React Redux context provider, this triggers the update of every single connected component, because even though they return a triple-equals ReactElement from render(), it's re-rendered because the context has changed.\n\nArguably this is partially a React-Redux issue because they are always returning a new object from getChildContext, but there doesn't seem to be any mechanism in React at the moment for checking if contexts are the same or not.\n\nI suggest that React should provide a mechanism like shouldContextUpdate, === or shallow comparison on context objects, or even just changing getChildContext to be like, tryGetUpdatedContext (return null for no change) to check if they have actually changed.\n\nWe've worked around this issue by simply making the context provider the root object and then never re-rendering it, and forceUpdating the child, but this is a bit of a nasty.\n\nThis also relates to caching ReactElements between components. We have icons that are a React element, and we use the same element (global constant) in every case to represent the icon - it doesn't use any context. It would be nice if we could tell React to ignore context changes when deciding whether or not to update these elements.\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
