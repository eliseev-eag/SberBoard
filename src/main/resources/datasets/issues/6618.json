{
  "url": "https://api.github.com/repos/facebook/react/issues/6618",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6618/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6618/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6618/events",
  "html_url": "https://github.com/facebook/react/pull/6618",
  "id": 151023852,
  "node_id": "MDExOlB1bGxSZXF1ZXN0Njc4MTcxMDE=",
  "number": 6618,
  "title": "Validate server markup against the DOM rather than string checksum",
  "user": {
    "login": "aickin",
    "id": 44199,
    "node_id": "MDQ6VXNlcjQ0MTk5",
    "avatar_url": "https://avatars1.githubusercontent.com/u/44199?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aickin",
    "html_url": "https://github.com/aickin",
    "followers_url": "https://api.github.com/users/aickin/followers",
    "following_url": "https://api.github.com/users/aickin/following{/other_user}",
    "gists_url": "https://api.github.com/users/aickin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aickin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aickin/subscriptions",
    "organizations_url": "https://api.github.com/users/aickin/orgs",
    "repos_url": "https://api.github.com/users/aickin/repos",
    "events_url": "https://api.github.com/users/aickin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aickin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 65,
  "created_at": "2016-04-26T02:19:28Z",
  "updated_at": "2017-06-26T05:15:10Z",
  "closed_at": "2017-06-25T20:54:42Z",
  "author_association": "COLLABORATOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/6618",
    "html_url": "https://github.com/facebook/react/pull/6618",
    "diff_url": "https://github.com/facebook/react/pull/6618.diff",
    "patch_url": "https://github.com/facebook/react/pull/6618.patch"
  },
  "body": "**Goal**: this PR intends to implement [step 1](https://github.com/facebook/react/issues/6420#issuecomment-213135763) of the [proposal to pull apart server DOM rendering from client DOM rendering and enable server streaming](https://github.com/facebook/react/issues/6420). Instead of a string checksum, this PR walks the server-generated DOM to validate that the markup matches. This makes it somewhat more lenient than the current algorithm, which requires a character-for-character match. This in turn should eventually enable server renderers that are decoupled from the client code and as a result more performant.\n\n**Performance**: [at @sebmarkbage's suggestion](https://github.com/facebook/react/issues/6420#issuecomment-213604948), this PR only focuses on correctness, not performance. I have a fairly simple benchmark project with Selenium scripts, though, and I intend to run that tests in different browsers in the next few days. Any suggestions on areas of the PR that look suspect from a perf perspective would be welcome. I'm not super experienced in JS perf optimization.\n\n**Tests**: All existing unit tests pass, and I added about 90 or so more for the new code path.  I realize that might seem like overkill, but I found there were a surprising number of special cases and fiddly bits.\n\n**Notes**: The basic implementation strategy is to add an optional argument to `mountComponent`/`mountChildren` called ~~`nodesToReuse`~~ `nativeNodeToReuse`, which ~~are~~ is the node~~s~~ in the DOM that the component in question is supposed to attach to. ~~This argument can either be a single DOM node in the document (for `ReactDOMComponent` or `ReactDOMEmptyComponent`) or an array of DOM nodes in the case of `ReactDOMTextComponent`.~~ Note that this DOM node is the **first** node corresponding to the component. In the case of `ReactDOMComponent` or `ReactDOMEmptyComponent` which only produce one DOM node, it is the first and only DOM node, whereas with `ReactDOMTextComponent`, it is the first node of two or three. This optional argument made it pretty easy to isolate the PR's changes from the non-SSR client code path. Also, the `renderToString` code path should be completely unchanged.\n\nI'll go through the individual files in the PR and try to add comments where I think they make sense. Please feel free to ask any questions. Also: apologies if I broke any conventions or rules; this is my first PR to React. And if there's a more constructive way to present these changes, please don't hesitate to let me know. Thanks!\n\nTagging @jimfb, @goatslacker, @lelandrichardson, and @lencioni, all of whom have expressed interest in this PR.\n",
  "closed_by": {
    "login": "aickin",
    "id": 44199,
    "node_id": "MDQ6VXNlcjQ0MTk5",
    "avatar_url": "https://avatars1.githubusercontent.com/u/44199?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aickin",
    "html_url": "https://github.com/aickin",
    "followers_url": "https://api.github.com/users/aickin/followers",
    "following_url": "https://api.github.com/users/aickin/following{/other_user}",
    "gists_url": "https://api.github.com/users/aickin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aickin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aickin/subscriptions",
    "organizations_url": "https://api.github.com/users/aickin/orgs",
    "repos_url": "https://api.github.com/users/aickin/repos",
    "events_url": "https://api.github.com/users/aickin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aickin/received_events",
    "type": "User",
    "site_admin": false
  }
}
