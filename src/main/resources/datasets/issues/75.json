{
  "url": "https://api.github.com/repos/facebook/react/issues/75",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/75/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/75/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/75/events",
  "html_url": "https://github.com/facebook/react/pull/75",
  "id": 15318712,
  "node_id": "MDExOlB1bGxSZXF1ZXN0NjIwODI3Mw==",
  "number": 75,
  "title": "Add new textChange event: input + IE shim",
  "user": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2013-06-09T11:24:01Z",
  "updated_at": "2014-06-16T05:00:54Z",
  "closed_at": "2013-06-12T05:00:20Z",
  "author_association": "COLLABORATOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/75",
    "html_url": "https://github.com/facebook/react/pull/75",
    "diff_url": "https://github.com/facebook/react/pull/75.diff",
    "patch_url": "https://github.com/facebook/react/pull/75.patch"
  },
  "body": "IE8 doesn't support oninput and IE9 supports it badly but we can do almost a perfect shim by listening to a handful of different events (focus, blur, propertychange, selectionchange, keyup, keydown).\n\nThis always triggers event handlers during the browser's event loop (not later in a setTimeout) and after the value property has been updated.\n\nThe only case I know of where this doesn't fire the event immediately is if (in IE8) you modify the input value using JS and then the user does a key repeat, in which case we fire the event on the second keydown.\n## \n\nTest Plan:\nModify ballmer-peak example to add es5-shim and to use onTextChange instead of onInput. In IE8, IE9, and latest Chrome, make sure that the event is fired upon: \n- typing normally,\n- backspacing,\n- forward-deleting,\n- cutting,\n- pasting,\n- context-menu deleting,\n- dragging text to reorder characters.\n\nAfter modifying the example to change .value, make sure that the event is not fired as a result of the changes from JS (even when the input box is focused).\n## \n\nQuestions:\n- Does it make sense to pass on the native event? Since it could be one of seven different types, I'm not sure that application code would be able to do anything useful with it.\n- The propertychange event doesn't bubble so we can't just attach it to document with the other events but is it preferable to have it go through ReactEventTopLevelCallback like the other events even though we're the only ones who'll be interested? Doing so will get rid of the manual enqueueAbstractEvents/processAbstractEventQueue calls I have but I imagine it'll be slower and won't give any other advantages.\n- Is the IE9 sniffing code for isInputSupported reasonable? I don't know the preferred way here to handle situations like this.\n- IE loses the textarea cursor position when updating the textarea contents during the selectionchange event and having ReactInputSelection attempt to restore the contents doesn't seem to help so I've disabled the event on textarea for now. Ideas?\n",
  "closed_by": {
    "login": "yungsters",
    "id": 55161,
    "node_id": "MDQ6VXNlcjU1MTYx",
    "avatar_url": "https://avatars0.githubusercontent.com/u/55161?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yungsters",
    "html_url": "https://github.com/yungsters",
    "followers_url": "https://api.github.com/users/yungsters/followers",
    "following_url": "https://api.github.com/users/yungsters/following{/other_user}",
    "gists_url": "https://api.github.com/users/yungsters/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yungsters/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yungsters/subscriptions",
    "organizations_url": "https://api.github.com/users/yungsters/orgs",
    "repos_url": "https://api.github.com/users/yungsters/repos",
    "events_url": "https://api.github.com/users/yungsters/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yungsters/received_events",
    "type": "User",
    "site_admin": false
  }
}
