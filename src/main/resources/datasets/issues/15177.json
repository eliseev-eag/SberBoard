{
  "url": "https://api.github.com/repos/facebook/react/issues/15177",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15177/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15177/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15177/events",
  "html_url": "https://github.com/facebook/react/issues/15177",
  "id": 423676245,
  "node_id": "MDU6SXNzdWU0MjM2NzYyNDU=",
  "number": 15177,
  "title": "Allow state to be an object or an array",
  "user": {
    "login": "TomasHubelbauer",
    "id": 6831144,
    "node_id": "MDQ6VXNlcjY4MzExNDQ=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/6831144?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TomasHubelbauer",
    "html_url": "https://github.com/TomasHubelbauer",
    "followers_url": "https://api.github.com/users/TomasHubelbauer/followers",
    "following_url": "https://api.github.com/users/TomasHubelbauer/following{/other_user}",
    "gists_url": "https://api.github.com/users/TomasHubelbauer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TomasHubelbauer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TomasHubelbauer/subscriptions",
    "organizations_url": "https://api.github.com/users/TomasHubelbauer/orgs",
    "repos_url": "https://api.github.com/users/TomasHubelbauer/repos",
    "events_url": "https://api.github.com/users/TomasHubelbauer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TomasHubelbauer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-03-21T11:07:55Z",
  "updated_at": "2019-03-25T12:09:29Z",
  "closed_at": "2019-03-21T14:40:22Z",
  "author_association": "NONE",
  "body": "I would like to propose that React allows `state` to be an object or an array (or maybe even a simple value such as number or a string or a boolean). The reason I am proposing this is that I thought it was already possible (I think of `setState` sort of like patching a JSON and JSON allows top level arrays and simple values), but I found our the hard way it was not this morning.\r\n\r\nI can set the initial state just fine like this:\r\n\r\n```typescript\r\ntype MyComponentState = { value: string; }[];\r\nclass MyComponent extends Component<{}, MyComponentState> {\r\n  public readonly state: MyComponentState = [];\r\n}\r\n```\r\n\r\nHowever when I issue a state change such as this:\r\n\r\n```typescript\r\nthis.setState(state => [ ...state, { value: 'new' } ]);\r\n```\r\n\r\nThe `state` will then be an object with key `0`, not an array! This is not caught by the React TypeScript typings, nor by React itself (telling me I cannot do this in the constructor nor in `setState` as a runtime check - not even in the development bundle, which otherwise checks many things, event things like mounting to `body` etc.). So the only way to find out is to wonder why `this.state.map` is `undefined` in the `render` that follows the `setState` call merge.\r\n\r\nThanks for considering this!",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
