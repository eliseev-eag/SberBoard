{
  "url": "https://api.github.com/repos/facebook/react/issues/8262",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8262/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8262/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8262/events",
  "html_url": "https://github.com/facebook/react/issues/8262",
  "id": 188595536,
  "node_id": "MDU6SXNzdWUxODg1OTU1MzY=",
  "number": 8262,
  "title": "Need way to receive and pass down all context (regardless of contextTypes/childContextTypes)",
  "user": {
    "login": "moodysalem",
    "id": 7897876,
    "node_id": "MDQ6VXNlcjc4OTc4NzY=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7897876?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/moodysalem",
    "html_url": "https://github.com/moodysalem",
    "followers_url": "https://api.github.com/users/moodysalem/followers",
    "following_url": "https://api.github.com/users/moodysalem/following{/other_user}",
    "gists_url": "https://api.github.com/users/moodysalem/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/moodysalem/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/moodysalem/subscriptions",
    "organizations_url": "https://api.github.com/users/moodysalem/orgs",
    "repos_url": "https://api.github.com/users/moodysalem/repos",
    "events_url": "https://api.github.com/users/moodysalem/events{/privacy}",
    "received_events_url": "https://api.github.com/users/moodysalem/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2016-11-10T19:24:12Z",
  "updated_at": "2018-01-27T12:14:58Z",
  "closed_at": "2016-11-10T19:49:41Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\nA component can only access via this.context anything defined in childContextTypes of the parent and contextTypes of the child\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar (template: https://jsfiddle.net/reactjs/69z2wepo/).**\r\nN/A\r\n\r\n**What is the expected behavior?**\r\nWould like a way to take all the context available regardless of contextTypes and also pass down, via context, variables not defined in childContextTypes - similar to how propTypes only is for validation\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nv15.3.1\r\n\r\nUse case:\r\nI have a Portal component that renders its child into a div at the end of the body using ReactDOM-useful for fixed positioned components that you don't want to be in the stacking context of the parent. It works well until you have to pass down context because the context comes from an owner component not being rendered in the new HTML element\r\n\r\n```\r\nimport React, { Children, PureComponent, PropTypes } from 'react';\r\nimport { unmountComponentAtNode, render } from 'react-dom';\r\n\r\n// renders children at the end of the body\r\nexport default class Portal extends PureComponent {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._el = document.createElement('div');\r\n    document.body.appendChild(this._el);\r\n\r\n    this.renderIntoEl();\r\n  }\r\n\r\n  renderIntoEl = () => {\r\n    const { children } = this.props;\r\n    render(Children.only(children), this._el);\r\n  };\r\n\r\n  componentDidUpdate({ children }) {\r\n    if (children !== this.props.children) {\r\n      this.renderIntoEl();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    unmountComponentAtNode(this._el);\r\n    document.body.removeChild(this._el);\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n```\r\n\r\nI would like to be able to pass down all context available to Portal to the tree rendered in the body tag, something like this\r\n\r\n```\r\nimport React, { Children, PureComponent, PropTypes } from 'react';\r\nimport { unmountComponentAtNode, render } from 'react-dom';\r\n\r\nclass ContextProvider extends PureComponent {\r\n  static propTypes = {\r\n    context: PropTypes.object,\r\n    children: PropTypes.node.isRequired\r\n  };\r\n\r\n  getChildContext() {\r\n    return this.props.context;\r\n  }\r\n\r\n  render() {\r\n    return Children.only(this.props.children);\r\n  }\r\n}\r\n\r\n// renders children at the end of the body\r\nexport default class Portal extends PureComponent {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired\r\n  };\r\n\r\n  // we need to receive the context\r\n  static contextTypes = {};\r\n\r\n  componentDidMount() {\r\n    this._el = document.createElement('div');\r\n    document.body.appendChild(this._el);\r\n\r\n    this.renderIntoEl(this.props.children, this.context);\r\n  }\r\n\r\n  renderIntoEl = (children, context) => {\r\n    render(\r\n      <ContextProvider context={context}>\r\n        {Children.only(children)}\r\n      </ContextProvider>,\r\n      this._el\r\n    );\r\n  };\r\n\r\n  componentWillReceiveProps({ children }, nextContext) {\r\n    if (children !== this.props.children || nextContext !== this.context) {\r\n      this.renderIntoEl(children, nextContext);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    unmountComponentAtNode(this._el);\r\n    document.body.removeChild(this._el);\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n```\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
