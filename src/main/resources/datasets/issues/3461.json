{
  "url": "https://api.github.com/repos/facebook/react/issues/3461",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3461/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3461/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3461/events",
  "html_url": "https://github.com/facebook/react/issues/3461",
  "id": 62995414,
  "node_id": "MDU6SXNzdWU2Mjk5NTQxNA==",
  "number": 3461,
  "title": "More detail in communication documentation. Best practices for Grandparent <> Grandchild?",
  "user": {
    "login": "dey-dey",
    "id": 796926,
    "node_id": "MDQ6VXNlcjc5NjkyNg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/796926?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dey-dey",
    "html_url": "https://github.com/dey-dey",
    "followers_url": "https://api.github.com/users/dey-dey/followers",
    "following_url": "https://api.github.com/users/dey-dey/following{/other_user}",
    "gists_url": "https://api.github.com/users/dey-dey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dey-dey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dey-dey/subscriptions",
    "organizations_url": "https://api.github.com/users/dey-dey/orgs",
    "repos_url": "https://api.github.com/users/dey-dey/repos",
    "events_url": "https://api.github.com/users/dey-dey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dey-dey/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-03-19T14:00:47Z",
  "updated_at": "2015-04-07T20:14:44Z",
  "closed_at": "2015-04-07T20:14:44Z",
  "author_association": "NONE",
  "body": "http://facebook.github.io/react/tips/communicate-between-components.html\n\n'For communication between two components that don't have a parent-child relationship, you can set up your own global event system.'\n\nSo far I've really enjoyed React. It's conducive to modularize your components. However, as you modularize your components, it gets harder to communicate. A global event system doesn't scale and essentially couples components that shouldn't be coupled. A simple example, a faceted navigation sidebar containing two subviews. Some filters and a search bar, and a list of things:\n\nSibebarView\n| -- Filters\n|     | -- Search Input\n|     | -- Filter Button\n| -- List View\n\nIn essence, an event stream from your search input should update the list. By the advice above, it seems like you'd say create a singleton EventEmitter which the search input : \n\n```\n// search-input.js\nee.emit('search:update', input.value);\n\n// sidebar.js\nee.on('search:update', searchHandler);\n```\n\nAs you can see, this is a very specific event which the SidebarView has to know about. \n\nAlso let's say you have a global search input. Over time it seems like you have to be increasingly specific about event names. \n\nI have a feeling Flux is supposed alleviate this problem somehow, but if so is there any way we can give some more detail here and/or point people in the right direction? Seems like a common use case.\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
