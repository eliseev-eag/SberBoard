{
  "url": "https://api.github.com/repos/facebook/react/issues/4794",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4794/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4794/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4794/events",
  "html_url": "https://github.com/facebook/react/issues/4794",
  "id": 104927023,
  "node_id": "MDU6SXNzdWUxMDQ5MjcwMjM=",
  "number": 4794,
  "title": "PropTypes outside of React. Independent type checks module",
  "user": {
    "login": "aaronabramov",
    "id": 940133,
    "node_id": "MDQ6VXNlcjk0MDEzMw==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/940133?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aaronabramov",
    "html_url": "https://github.com/aaronabramov",
    "followers_url": "https://api.github.com/users/aaronabramov/followers",
    "following_url": "https://api.github.com/users/aaronabramov/following{/other_user}",
    "gists_url": "https://api.github.com/users/aaronabramov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aaronabramov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aaronabramov/subscriptions",
    "organizations_url": "https://api.github.com/users/aaronabramov/orgs",
    "repos_url": "https://api.github.com/users/aaronabramov/repos",
    "events_url": "https://api.github.com/users/aaronabramov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aaronabramov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2015-09-04T16:47:33Z",
  "updated_at": "2017-02-18T23:11:11Z",
  "closed_at": "2015-09-23T18:14:20Z",
  "author_association": "MEMBER",
  "body": "using react PropTypes is awesome, and can help catching errors at the early stage,\nbut sometimes, when the application is pretty large, there is always a flow of data\nstructures of a big size. Like in the web email client application, there can be a `Message`\ntype that is passed all over the place, and multiple components can accept it in props.\n\nso the solution to that is usually creating a type file. e.g.\n\n``` js\n// types/message.js\n\nimport React from 'react';\n\nexport default React.PropTypes.shape({\n    id: React.PropTypes.string.isRequired,\n    subject: React.PropTypes.string\n}).isRequired;\n\n```\n\nand then reusing this type in components that get messages in props\n\n``` js\n\nimport messageType from './types/message';\n\nMessagePreview.PropTypes = {\n  message: messageType\n}\n```\n\nbut sometimes this data flows in some other than components elements. for example flux stores, or action creators. And that usually requires duplication of types (using immutable.js records or similar)\n\nThat would we really nice if we could use this type checks in other parts of the application.\n\nfor example\n\n``` js\n// stores/message.js\n\nimport messageType from './types/message';\nimport checkTypes from 'react/check-types';\n\n/**\n * @param {Array<Object>} payload.messages the array of message objects received from the API\n */\nonDataReceived = (payload) => {\n  payload.messages.forEach((message) => {\n    checkTypes(message, messageType);\n    addToStore(message);\n  });\n}\n```\n\nwill this be any good? I guess architectually it means making propTypes.js more independent, and creating an adapter for prop/context validating\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
