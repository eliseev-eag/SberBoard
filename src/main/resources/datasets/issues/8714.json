{
  "url": "https://api.github.com/repos/facebook/react/issues/8714",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8714/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8714/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8714/events",
  "html_url": "https://github.com/facebook/react/issues/8714",
  "id": 199440412,
  "node_id": "MDU6SXNzdWUxOTk0NDA0MTI=",
  "number": 8714,
  "title": "provide `this` context in SFCs when they are invoked via  `JSXMemberExpression` ",
  "user": {
    "login": "Artazor",
    "id": 185374,
    "node_id": "MDQ6VXNlcjE4NTM3NA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/185374?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Artazor",
    "html_url": "https://github.com/Artazor",
    "followers_url": "https://api.github.com/users/Artazor/followers",
    "following_url": "https://api.github.com/users/Artazor/following{/other_user}",
    "gists_url": "https://api.github.com/users/Artazor/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Artazor/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Artazor/subscriptions",
    "organizations_url": "https://api.github.com/users/Artazor/orgs",
    "repos_url": "https://api.github.com/users/Artazor/repos",
    "events_url": "https://api.github.com/users/Artazor/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Artazor/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-01-08T19:26:49Z",
  "updated_at": "2017-01-09T14:04:09Z",
  "closed_at": "2017-01-09T14:03:21Z",
  "author_association": "NONE",
  "body": "**[holy-war question alert!]**\r\n\r\nWould it be possible to provide `this` context into SFCs when they are invoked via \r\n`JSXMemberExpression . JSXIdentifier` syntactic form?\r\n\r\nMy use-case involves unusual ES6 class usage. I'm using them as inheritable containers for SFC's, where individual components could be overridden in descendant classes.\r\n\r\nNow I'm forced to autobind all view-methods:\r\n\r\n```jsx\r\nclass Base {\r\n    constructor() {\r\n        // would like to avoid these:\r\n        this.Short = this.Short.bind(this);\r\n        this.Full = this.Full.bind(this);\r\n    }\r\n   Short() { return <span>{`${this}`}</span>; }\r\n   Full() { return <div><this.Short /></div>; }\r\n}\r\n\r\nclass Item extends Base {\r\n    constructor(value) {\r\n        super();\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nvar obj = new Item(\"A\");\r\nReactDOM.render(<obj.Full />, document.getElementById(\"container\"));\r\n```\r\n\r\nA bit more complete example could be found at: https://jsfiddle.net/69z2wepo/67046/\r\n\r\n\r\nI understand that it is a Holy War question about pure functions and `this` in JavaScript.\r\nHowever I'm thinking that this usage of `this` is legit. Just like a `children` in props.\r\n\r\nIt is way too ugly writing\r\n```jsx\r\nclass Base {\r\n   Short({self}) { return <span>{`${self}`}</span>; }\r\n   Full({self}) { return <div><self.Short self={self} /></div>; }\r\n}\r\n\r\nclass Item extends Base {\r\n    constructor(value) {\r\n        super();\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nvar obj = new Item(\"A\");\r\nReactDOM.render(<obj.Full self={obj} />, document.getElementById(\"container\"));\r\n```\r\nIsn't it?\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
