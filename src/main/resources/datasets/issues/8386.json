{
  "url": "https://api.github.com/repos/facebook/react/issues/8386",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8386/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8386/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8386/events",
  "html_url": "https://github.com/facebook/react/pull/8386",
  "id": 191118527,
  "node_id": "MDExOlB1bGxSZXF1ZXN0OTQ4OTM4NTM=",
  "number": 8386,
  "title": "[Fiber] Add ReactDOMFiber.unstable_createPortal()",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2016-11-22T20:40:19Z",
  "updated_at": "2017-01-12T07:55:04Z",
  "closed_at": "2016-11-22T22:08:13Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/8386",
    "html_url": "https://github.com/facebook/react/pull/8386",
    "diff_url": "https://github.com/facebook/react/pull/8386.diff",
    "patch_url": "https://github.com/facebook/react/pull/8386.patch"
  },
  "body": "While #8368 added a version of `ReactDOM.unstable_renderSubtreeIntoContainer()` to Fiber, it is a bit hacky and, more importantly, incompatible with Fiber goals. Since it encourages performing portal work in lifecycles, it stretches the commit phase and prevents slicing that work, potentially negating Fiber benefits.\r\n\r\nThis PR adds a first version of a declarative API meant to replace `ReactDOM.unstable_renderSubtreeIntoContainer()`. The API is a declarative way to render subtrees into DOM node containers.\r\n\r\nIt looks like this:\r\n\r\n```js\r\nfunction WelcomePopup() {\r\n  return <h2>Welcome</h2>;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Hi</h1>\r\n      {ReactDOM.unstable_createPortal(\r\n        <WelcomePopup />,\r\n        document.getElementById('popup-container')\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n```\r\n\r\nFiber treats it as a regular slice-able work and commits the subtrees according to depth, like normal components. Context updates \"just work\" because of this. I copied the subtree tests, modified them to use the new API, and added them to `ReactDOMFiber-test` since it's a Fiber-specific feature. I also added some more assertions around the lifecycle order and ensuring node removal.\r\n\r\nThere are a few missing pieces:\r\n\r\n* Only DOM node is accepted as a container. I'm not sure if we should accept a `() => node` instead because node might not be ready yet. This also doesn't play with server rendering, but since the support is baked into reconciler we can add `ReactDOMServer.createPortal(element, stream)` someday (note: not an actual API, Iâ€™m just showing potential future directions as discussed with @sebmarkbage).\r\n\r\n* The portal object has a reserved `implementation` field that is currently unused. It will be used for supporting cross-renderer portals (e.g. ART inside DOM). It will contain `{ beginWork, completeWork, commitWork }` or something similar of the nested renderer. The parent renderer will still be responsible for scheduling, but will forward work to a nested renderer when it's inside a portal.\r\n\r\n* We will need to keep track of the roots on the stack so that we can fix `document.body` hack in `ReactDOMFiber`.\r\n\r\n* We still use `updateContainer` which is hacky since it replaces all children. The plan is to eventually move the output traversal to the complete phase, and let the renderer provide `*ToContainer` overloads of `appendChild`, `insertBefore`, and friends.\r\n\r\nThis is merely a first step towards supporting portals in Fiber, and it is not complete, but I want to land it so that we have the basics (like we do with coroutines) and don't regress on them.\r\n\r\nNext I will work on SVGs and try to reuse this primitive for them.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
