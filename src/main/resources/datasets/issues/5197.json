{
  "url": "https://api.github.com/repos/facebook/react/issues/5197",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5197/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5197/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5197/events",
  "html_url": "https://github.com/facebook/react/issues/5197",
  "id": 111886007,
  "node_id": "MDU6SXNzdWUxMTE4ODYwMDc=",
  "number": 5197,
  "title": "React Performance with bound functions",
  "user": {
    "login": "ccorcos",
    "id": 1794527,
    "node_id": "MDQ6VXNlcjE3OTQ1Mjc=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1794527?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ccorcos",
    "html_url": "https://github.com/ccorcos",
    "followers_url": "https://api.github.com/users/ccorcos/followers",
    "following_url": "https://api.github.com/users/ccorcos/following{/other_user}",
    "gists_url": "https://api.github.com/users/ccorcos/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ccorcos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ccorcos/subscriptions",
    "organizations_url": "https://api.github.com/users/ccorcos/orgs",
    "repos_url": "https://api.github.com/users/ccorcos/repos",
    "events_url": "https://api.github.com/users/ccorcos/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ccorcos/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 20,
  "created_at": "2015-10-16T18:32:03Z",
  "updated_at": "2016-02-01T22:30:41Z",
  "closed_at": "2016-01-13T13:41:37Z",
  "author_association": "NONE",
  "body": "When I'm abstracting a components, I sometimes find it necessary to bind a function to a parameter before passing it to a child component. \n\nFor example, if I have a list of counters, we want to bind the increment prop to increment the appropriate counter.\n\n``` js\ncounts.map((count,i) => {\n return <Counter count={count}  inc={this.incCount.bind(this, i)/>\n})\n```\n\nThis always returns a new function even though incCount, this, and i are all referentially equal. But every time you bind them, you get a new function. \n\nIt also wouldnt make sense to entirely rewrite counter to accept incAtIndex and index.\n\nAnd it seems crazy to create some kind of helper component.\n\n``` js\n<BoundFunc f={this.incCount} args={[i]} props={{count}} render={(f, props} => {\n  return <Counter {...props} inc={c}/>\n}}/>\n```\n\nAnyways, has there been any thought put into this? It would be amazing (and help with performance) if there was some way (perhaps non-native way) that we can accomplish the following, specifially in react\n\n``` js\na = f.bind(x,y)\nb = f.bind(x,y)\na === b\n// => true!\n```\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
