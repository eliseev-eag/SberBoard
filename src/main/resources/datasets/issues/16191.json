{
  "url": "https://api.github.com/repos/facebook/react/issues/16191",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16191/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16191/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16191/events",
  "html_url": "https://github.com/facebook/react/issues/16191",
  "id": 472186355,
  "node_id": "MDU6SXNzdWU0NzIxODYzNTU=",
  "number": 16191,
  "title": "Child component's local state changes when change happens inside parent component",
  "user": {
    "login": "vjr12",
    "id": 42905121,
    "node_id": "MDQ6VXNlcjQyOTA1MTIx",
    "avatar_url": "https://avatars3.githubusercontent.com/u/42905121?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vjr12",
    "html_url": "https://github.com/vjr12",
    "followers_url": "https://api.github.com/users/vjr12/followers",
    "following_url": "https://api.github.com/users/vjr12/following{/other_user}",
    "gists_url": "https://api.github.com/users/vjr12/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vjr12/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vjr12/subscriptions",
    "organizations_url": "https://api.github.com/users/vjr12/orgs",
    "repos_url": "https://api.github.com/users/vjr12/repos",
    "events_url": "https://api.github.com/users/vjr12/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vjr12/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-07-24T09:49:35Z",
  "updated_at": "2019-07-26T09:38:18Z",
  "closed_at": "2019-07-26T09:38:18Z",
  "author_association": "NONE",
  "body": "I have a situation where I am implementing custom dropdown filter for a table in react. I have set of dropdown values for each column and there is a Apply button. \r\n\r\nI have maintained a child component for this which takes in drop down values  and sends the selected one's back to parent.\r\n\r\nThe filtering happens but when I open this dropdown again the checkbox values gets lost. \r\n\r\nAlso I want to preserve the values of all dropdown values so that filter across columns would work correctly \r\n\r\nCan someone tell where I am going wrong?\r\n\r\nI am stuck here\r\n\r\nI am doing something like : Code Sandbox: https://codesandbox.io/s/quizzical-glitter-np8iw\r\n\r\nMain Component\r\n---------------\r\n\r\n\r\n`````````````````````````\r\nimport * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport ReactTable from \"react-table\";\r\nimport \"./styles.css\";\r\nimport \"react-table/react-table.css\";\r\nimport Child from \"./Child\";\r\ninterface IState {\r\n  data: {}[];\r\n  columns: {}[];\r\n  selectedValues: {};\r\n}\r\n\r\ninterface IProps {}\r\n\r\nexport default class App extends React.Component<IProps, IState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        { firstName: \"Jack\", status: \"Submitted\", age: \"14\" },\r\n        { firstName: \"Simon\", status: \"Pending\", age: \"15\" },\r\n        { firstName: \"Pete\", status: \"Approved\", age: \"16\" },\r\n        { firstName: \"Lucas\", status: \"Rejected\", age: \"19\" }\r\n      ],\r\n      selectedValues: {},\r\n      columns: []\r\n    };\r\n  }\r\n\r\n  getValuesFromKey = (data, key) => {\r\n    return data.map(item => item[key]);\r\n  };\r\n\r\n  handleFilter = (fieldName: any, selectedValue: any) => {\r\n    this.setState(\r\n      {\r\n        selectedValues: {\r\n          ...this.state.selectedValues,\r\n          [fieldName]: selectedValue\r\n        }\r\n      },\r\n      () => this.handleColumnFilter(this.state.selectedValues)\r\n    );\r\n  };\r\n\r\n  handleColumnFilter = (values: any) => {\r\n    console.log(values);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let columns = [\r\n      {\r\n        Header: () => (\r\n          <div>\r\n            <div style={{ position: \"absolute\", marginLeft: \"10px\" }}>\r\n              <Child\r\n                key=\"firstName\"\r\n                name=\"firstName\"\r\n                options={this.getValuesFromKey(this.state.data, \"firstName\")}\r\n                handleFilter={this.handleFilter}\r\n              />\r\n            </div>\r\n            <span>First Name</span>\r\n          </div>\r\n        ),\r\n        accessor: \"firstName\",\r\n        sortable: false,\r\n        show: true,\r\n        displayValue: \" First Name\"\r\n      },\r\n      {\r\n        Header: () => (\r\n          <div>\r\n            <div style={{ position: \"absolute\", marginLeft: \"10px\" }}>\r\n              <Child\r\n                key=\"status\"\r\n                name=\"status\"\r\n                options={this.getValuesFromKey(this.state.data, \"status\")}\r\n                handleFilter={this.handleFilter}\r\n              />\r\n            </div>\r\n            <span>Status</span>\r\n          </div>\r\n        ),\r\n        accessor: \"status\",\r\n        sortable: false\r\n      },\r\n      {\r\n        Header: \"Age\",\r\n        accessor: \"age\"\r\n      }\r\n    ];\r\n    this.setState({ columns });\r\n  }\r\n\r\n  render() {\r\n    const { data, columns } = this.state;\r\n    return (\r\n      <div>\r\n        <ReactTable\r\n          data={data}\r\n          columns={columns}\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n\r\n\r\n\r\n`````````````````````````````````\r\n\r\nChild component\r\n--------------------\r\n\r\n`````````````````````````\r\n\r\nimport * as React from \"react\";\r\nimport { Button, Checkbox, Icon } from \"semantic-ui-react\";\r\nimport \"./styles.css\";\r\ninterface IProps {\r\n  options: any;\r\n  name: string;\r\n  handleFilter(val1: any, val2: any): void;\r\n}\r\ninterface IState {\r\n  showList: boolean;\r\n  selected: [];\r\n}\r\nexport default class Child extends React.Component<IProps, IState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: [],\r\n      showList: false\r\n    };\r\n  }\r\n\r\n  handleValueChange = (event: React.FormEvent<HTMLInputElement>, data: any) => {\r\n    let updated: any;\r\n    if (data.checked) {\r\n      updated = [...this.state.selected, data.name];\r\n    } else {\r\n      updated = this.state.selected.filter(v => v !== data.name);\r\n    }\r\n    this.setState({ selected: updated });\r\n  };\r\n\r\n  passSelectionToParent = (event: any) => {\r\n    event.preventDefault();\r\n    this.props.handleFilter(this.props.name, this.state.selected);\r\n  };\r\n\r\n  toggleList = () => {\r\n    this.setState(prevState => ({ showList: !prevState.showList }));\r\n  };\r\n\r\n  render() {\r\n    let { showList } = this.state;\r\n    let visibleFlag: string;\r\n    if (showList === true) visibleFlag = \"visible\";\r\n    else visibleFlag = \"\";\r\n    return (\r\n      <div>\r\n        <div style={{ position: \"absolute\" }}>\r\n          <div\r\n            className={\"ui scrolling dropdown column-settings \" + visibleFlag}\r\n          >\r\n            <Icon className=\"filter\" onClick={this.toggleList} />\r\n            <div className={\"menu transition \" + visibleFlag}>\r\n              <div className=\"menu-item-holder\">\r\n                {this.props.options.map((item: any, i: number) => (\r\n                  <div className=\"menu-item\" key={i}>\r\n                    <Checkbox\r\n                      name={item}\r\n                      onChange={this.handleValueChange}\r\n                      label={item}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"menu-btn-holder\">\r\n                <Button size=\"small\" onClick={this.passSelectionToParent}>\r\n                  Apply\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",
  "closed_by": {
    "login": "vjr12",
    "id": 42905121,
    "node_id": "MDQ6VXNlcjQyOTA1MTIx",
    "avatar_url": "https://avatars3.githubusercontent.com/u/42905121?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vjr12",
    "html_url": "https://github.com/vjr12",
    "followers_url": "https://api.github.com/users/vjr12/followers",
    "following_url": "https://api.github.com/users/vjr12/following{/other_user}",
    "gists_url": "https://api.github.com/users/vjr12/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vjr12/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vjr12/subscriptions",
    "organizations_url": "https://api.github.com/users/vjr12/orgs",
    "repos_url": "https://api.github.com/users/vjr12/repos",
    "events_url": "https://api.github.com/users/vjr12/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vjr12/received_events",
    "type": "User",
    "site_admin": false
  }
}
