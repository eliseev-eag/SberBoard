{
  "url": "https://api.github.com/repos/facebook/react/issues/6964",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6964/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6964/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6964/events",
  "html_url": "https://github.com/facebook/react/issues/6964",
  "id": 158486556,
  "node_id": "MDU6SXNzdWUxNTg0ODY1NTY=",
  "number": 6964,
  "title": "Server side `.render()`?",
  "user": {
    "login": "olalonde",
    "id": 416585,
    "node_id": "MDQ6VXNlcjQxNjU4NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/416585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/olalonde",
    "html_url": "https://github.com/olalonde",
    "followers_url": "https://api.github.com/users/olalonde/followers",
    "following_url": "https://api.github.com/users/olalonde/following{/other_user}",
    "gists_url": "https://api.github.com/users/olalonde/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/olalonde/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/olalonde/subscriptions",
    "organizations_url": "https://api.github.com/users/olalonde/orgs",
    "repos_url": "https://api.github.com/users/olalonde/repos",
    "events_url": "https://api.github.com/users/olalonde/events{/privacy}",
    "received_events_url": "https://api.github.com/users/olalonde/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2016-06-04T04:20:09Z",
  "updated_at": "2016-06-08T15:59:09Z",
  "closed_at": "2016-06-04T16:21:33Z",
  "author_association": "NONE",
  "body": "I was wondering if it was possible to render a react component server side without serialising it to a string. It should make it possible to trigger state changes without re-rendering the whole tree.\n\nFor example, I'd like to be able to do something like this (pseudo-code):\n\n``` javascript\nclass Test extends Component {\n  componentWillMount() {\n    // this method should only be called once, by `render(Test)`\n    setTimeout(() => this.setState({ ready: true }), 1000)\n  }\n  render() {\n    const { ready } = this.state\n    if (ready) {\n      return (<strong>I am ready</strong>)\n    }\n    return  (<strong>I am not ready</strong>)\n  }\n}\n\nconst tree = render(Test)\nrenderToString(tree)\n// => <strong>I am not ready</strong>\nsetTimeout(() => renderToString(tree), 2000)\n// => <strong>I am ready</strong>\n```\n\nI don't really plan to use timeouts but it was to illustrate the idea.\n\nThis would be another way to put it:\n\n``` javascript\nlet setState\nclass Test extends Component {\n  componentWillMount() {\n    // important: this is called only once\n    console.log('componentWillMount called')\n    setState = this.setState.bind(this)\n  }\n  render() {\n    const { ready } = this.state\n    if (ready) {\n      return (<strong>I am ready</strong>)\n    }\n    return  (<strong>I am not ready</strong>)\n  }\n}\n\nconst tree = render(Test)\n// outputs: componentWillMount called\nconsole.log(renderToString(tree))\n// outputs: <strong>I am not ready</strong>\nsetState({ ready: true })\nconsole.log(renderToString(tree))\n// outputs: <strong>I am ready</strong>\n```\n\nIf this is not possible currently, would it be difficult to implement?\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
