{
  "url": "https://api.github.com/repos/facebook/react/issues/7795",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7795/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7795/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7795/events",
  "html_url": "https://github.com/facebook/react/issues/7795",
  "id": 178739139,
  "node_id": "MDU6SXNzdWUxNzg3MzkxMzk=",
  "number": 7795,
  "title": "Receive outside events, without leaving React's system",
  "user": {
    "login": "philipp-spiess",
    "id": 458591,
    "node_id": "MDQ6VXNlcjQ1ODU5MQ==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/458591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/philipp-spiess",
    "html_url": "https://github.com/philipp-spiess",
    "followers_url": "https://api.github.com/users/philipp-spiess/followers",
    "following_url": "https://api.github.com/users/philipp-spiess/following{/other_user}",
    "gists_url": "https://api.github.com/users/philipp-spiess/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/philipp-spiess/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/philipp-spiess/subscriptions",
    "organizations_url": "https://api.github.com/users/philipp-spiess/orgs",
    "repos_url": "https://api.github.com/users/philipp-spiess/repos",
    "events_url": "https://api.github.com/users/philipp-spiess/events{/privacy}",
    "received_events_url": "https://api.github.com/users/philipp-spiess/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929152,
      "node_id": "MDU6TGFiZWw0MDkyOTE1Mg==",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Duplicate",
      "name": "Resolution: Duplicate",
      "color": "cccccc",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-09-22T22:41:22Z",
  "updated_at": "2016-09-22T23:21:25Z",
  "closed_at": "2016-09-22T23:21:17Z",
  "author_association": "COLLABORATOR",
  "body": "This is a feature request.\n\nRight now, the only way to respond to \"outside world\" events is to leave the React's event system and add a native DOM listener. This is bad, since it will require more mental overhead when you have to work with this (you need to think about your event listener receiving a native event, or a react synthetic event). It will also simply not be possible for computed `SyntheticEvent`s (e.g. `onChange`). \n\nIt also makes it very hard for react events handlers to interrupt the DOM handlers. Consider the following example, where it's not intuitive why the React listener can not stop propagation to the `document`. (Spoiler: React also listens on `document`, that's why you'd have to use `SyntheticEvent#nativeEvent.stopImmediatePropagation()`:\n\n``` js\nvar Example = React.createClass({\n  render: function (){\n    return (\n      <div onKeyDown={function(e) { e.stopPropagation() }} />\n    );\n  }\n});\n\ndocument.addEventListener(\"keydown\", function () {\n  alert('why does this still fire?');\n});\n\nReactDOM.render(\n  <Example name=\"react\"/>,\n  document.getElementById('react')\n);\n```\n\nAn example for when you want to deal with outside events is a simple drawing tool, that must listen on `keyup` to stop the drawing process.\n\nTo solve this problem, I propose a new public API, something like an `EventRoot`. It should behave like a regular DOM Node, so that you can `addEventListener()` and `removeEventListener()`, but it's callbacks will receive the `SyntheticEvent`. It will get called when triggering a two phase dispatch. It respects the `capture` and `bubble` order as well as `stopPropagation()`. Everything you'd expect when listening on `document`.\n\nFor the above example, you'd only have to replace `document` with the new event root. The `stopPropagation()` can now correctly be applied. \n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
