{
  "url": "https://api.github.com/repos/facebook/react/issues/12101",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12101/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12101/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12101/events",
  "html_url": "https://github.com/facebook/react/issues/12101",
  "id": 291855053,
  "node_id": "MDU6SXNzdWUyOTE4NTUwNTM=",
  "number": 12101,
  "title": "Access Component from child's instance?",
  "user": {
    "login": "franciscop",
    "id": 2801252,
    "node_id": "MDQ6VXNlcjI4MDEyNTI=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/2801252?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/franciscop",
    "html_url": "https://github.com/franciscop",
    "followers_url": "https://api.github.com/users/franciscop/followers",
    "following_url": "https://api.github.com/users/franciscop/following{/other_user}",
    "gists_url": "https://api.github.com/users/franciscop/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/franciscop/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/franciscop/subscriptions",
    "organizations_url": "https://api.github.com/users/franciscop/orgs",
    "repos_url": "https://api.github.com/users/franciscop/repos",
    "events_url": "https://api.github.com/users/franciscop/events{/privacy}",
    "received_events_url": "https://api.github.com/users/franciscop/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-01-26T10:15:55Z",
  "updated_at": "2018-01-28T23:26:42Z",
  "closed_at": "2018-01-28T13:24:28Z",
  "author_association": "NONE",
  "body": "I am creating a [small, generic state management](https://github.com/franciscop/state) based on the `Proxy()` object. Now I am writing a React helper, but I've found an issue: to create the HOC I need access to `Component` from React. Looking at the [source code for Component](https://github.com/facebook/react/blob/master/packages/react/src/ReactBaseClasses.js) it doesn't seem like it can/should be a standalone function. This library should be able to be used independently, so making everyone download React is not feasible.\r\n\r\nI have navigated through the [official HOC documentation](https://reactjs.org/docs/higher-order-components.html), past issues and Google but couldn't find any way to retrieve `Component` from the passed component to my HOC. This is the code I am working with (not yet in the repo linked above):\r\n\r\n```js\r\n// This will load the whole React independently of the project type\r\nimport { Component } from 'react';\r\n\r\nconst connect = (opts) => (Passed) => {\r\n  return class WithState extends Component {\r\n    // ...\r\n  }\r\n};\r\n\r\nexport default connect;\r\n```\r\n\r\n```js\r\n// Note: assume this for Passed.js\r\nimport React, { Component } from 'react';\r\nclass Passed extends Component { ... }\r\nexport default connect()(Passed);\r\n```\r\n\r\nNow, I *did* find a hack to make this work, but it seems like one of the most fragile pieces of code I've ever written, relying on the differences between ES7 modules and CommonJS:\r\n\r\n```js\r\nconst connect = (opts) => (Passed) => {\r\n  const React = require('react');\r\n  return class WithState extends React.Component {\r\n    // ...\r\n  }\r\n};\r\n\r\nexport default connect;\r\n```\r\n\r\nThis way it will only import React once the `connect()` is used, and `connect()` is the *React-exclusive* helper from my library. So my question/feature request is this: is it possible to access its constructor's parent (not just the child)? Could we make it possible somehow? Something like this would be ideal:\r\n\r\n```js\r\n// Is something like this possible?\r\nconst Component = Passed.super;\r\n// or\r\nconst Component = Passed.constructor.super;\r\n// or even (since a class is syntax sugar)\r\nconst Component = Passed.prototype.super;\r\n```\r\n\r\nI think that is not the way Javascript/React works, but I figured I will ask here since chances are you will know way better than me whether something like this is possible or not.\r\n\r\n\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nRequest a feature I think",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
