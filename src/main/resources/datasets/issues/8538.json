{
  "url": "https://api.github.com/repos/facebook/react/issues/8538",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8538/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8538/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8538/events",
  "html_url": "https://github.com/facebook/react/pull/8538",
  "id": 194519258,
  "node_id": "MDExOlB1bGxSZXF1ZXN0OTcyNTQ3OTI=",
  "number": 8538,
  "title": "[Fiber] Separate priority for updates",
  "user": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2016-12-09T05:49:57Z",
  "updated_at": "2016-12-16T01:31:27Z",
  "closed_at": "2016-12-16T00:41:53Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/8538",
    "html_url": "https://github.com/facebook/react/pull/8538",
    "diff_url": "https://github.com/facebook/react/pull/8538.diff",
    "patch_url": "https://github.com/facebook/react/pull/8538.patch"
  },
  "body": "Fixes a few issues with the way updates currently work.\r\n\r\nRight now we reset the work-in-progress's update queue during the complete phase, which means updates that occur during `render` or in a child's begin phase (constructor, `cWM`, `cWRP`, `render`) are completely dropped. This isn't an ideal pattern but Stack supports it and it's fairly common. The lack of support in Fiber today is causing a nasty infinite loop bug for some components at Facebook.\r\n\r\nTo fix this, the update queue maintains a pointer to the first pending update. When an update is used during reconciliation, the pointer is set to null to indicate that the entire queue has been processed. If new updates come in before the component is committed, the pointer points to the first new update. Then in the commit phase, the processed updates are dropped, but the pending updates are kept in the queue.\r\n\r\nAnother problem is that we use the same priority field for both props and updates, and when we reset the priority field during the complete phase, we don't have a way to read the priority of the pending updates. In the first pass, I'll add a priority field to the update queue to solve this. What we really want, though, is for each individual update to have its own priority, so that when we render a component, we only process the updates that match the current priority level.\r\n\r\n- [x] Don't clear pending updates from the queue.\r\n- [x] Move scheduling of update/callback side-effects to the begin phase.\r\n- [x] Add priority field to the update queue so that pending priority isn't dropped.\r\n\r\nMay do in a follow-up; not needed to fix the infinite loop bug, but necessary to get the Fiber triangle demo working:\r\n\r\n- [x] Sort the queue by priority and only render updates that match the current priority.",
  "closed_by": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  }
}
