{
  "url": "https://api.github.com/repos/facebook/react/issues/8222",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8222/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8222/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8222/events",
  "html_url": "https://github.com/facebook/react/issues/8222",
  "id": 187802019,
  "node_id": "MDU6SXNzdWUxODc4MDIwMTk=",
  "number": 8222,
  "title": "[Fiber] Should Fiber have a root field?",
  "user": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2016-11-07T19:18:38Z",
  "updated_at": "2016-11-08T18:56:18Z",
  "closed_at": "2016-11-08T18:56:18Z",
  "author_association": "MEMBER",
  "body": "### Problem\r\n\r\nWhen a component calls `setState`, we must update the `pendingWorkPriority` on its fiber and on all its ancestor fibers up to the root. When we get to the root, we ensure that the root is scheduled:\r\n\r\n```js\r\n// Pseudo-code\r\nwhile (fiber) {\r\n  // Step 1\r\n  if (comparePriority(priority, fiber.pendingWorkPriority)) {\r\n    updatePriority(fiber)\r\n  }\r\n  // Step 2\r\n  if (isRoot(fiber)) {\r\n    ensureRootIsScheduled(fiber);\r\n  }\r\n  fiber = fiber.return;\r\n}\r\n```\r\n\r\nIf `setState` is called multiple times consecutively, we walk the path each time. And if a callback is passed to `setState`, that requires an additional walk.\r\n\r\nBecause the priority of a child is always greater than or equal to the priority of its parent, it'd be nice to optimize this by stopping whenever the condition in step 1 fails.\r\n\r\nThe problem is step 2. We can't assume that the root of a tree is scheduled just because it has pending work: roots are unscheduled if an uncaught error is thrown in that tree. So we have to ensure the root is scheduled for every update.\r\n\r\nOne idea would be to use a field on FiberRoot (e.g. `hasUncaughtError`) rather than unschedule it. But that field would still need to be cleared on every update, which requires access to the root. So that doesn't solve the problem.\r\n\r\n### Possible solution\r\n\r\nWe could solve it by adding a `root` field to Fiber, so that we can always update it quickly. The question is whether the extra memory usage is worth the performance gain.",
  "closed_by": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  }
}
