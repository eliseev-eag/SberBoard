{
  "url": "https://api.github.com/repos/facebook/react/issues/14426",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14426/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14426/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14426/events",
  "html_url": "https://github.com/facebook/react/issues/14426",
  "id": 390365863,
  "node_id": "MDU6SXNzdWUzOTAzNjU4NjM=",
  "number": 14426,
  "title": "CSS animations not triggered when modifying className prop elements with the same key",
  "user": {
    "login": "77abe77",
    "id": 16051956,
    "node_id": "MDQ6VXNlcjE2MDUxOTU2",
    "avatar_url": "https://avatars1.githubusercontent.com/u/16051956?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/77abe77",
    "html_url": "https://github.com/77abe77",
    "followers_url": "https://api.github.com/users/77abe77/followers",
    "following_url": "https://api.github.com/users/77abe77/following{/other_user}",
    "gists_url": "https://api.github.com/users/77abe77/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/77abe77/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/77abe77/subscriptions",
    "organizations_url": "https://api.github.com/users/77abe77/orgs",
    "repos_url": "https://api.github.com/users/77abe77/repos",
    "events_url": "https://api.github.com/users/77abe77/events{/privacy}",
    "received_events_url": "https://api.github.com/users/77abe77/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-12-12T19:04:55Z",
  "updated_at": "2019-02-08T17:21:40Z",
  "closed_at": "2019-02-08T17:21:39Z",
  "author_association": "NONE",
  "body": "## Example\r\nhttps://codesandbox.io/s/pkn15wl0xq\r\n\r\n## Expected Behavior\r\nClicking on both side buttons should result in a Carousel like animated transition.\r\n\r\n## Actual Behavior\r\nOnly the left button click results in correct transitions. Right button clicks just render the new color without animation.\r\n\r\n## Details\r\nCSSTransitions are located in `public/CSSTransitions.css`. When manually added to an elements class property using the debugger, the animation behavior is correct.\r\n\r\nAFAIK, I have taken into account React reconciliation algorithm with the current implementation of keys. If not, please let me know.\r\n\r\n## Relevant Code\r\n### CSSTransitions.css\r\n```\r\n.animated {\r\n  transition: transform 1100ms cubic-bezier(0.82, 0, 0.63, 1),\r\n    opacity 1100ms linear;\r\n}\r\n\r\n.left {\r\n  transform: translateX(-81.8vw) translateZ(47vw) rotateY(72deg);\r\n  opacity: 0.4;\r\n}\r\n\r\n.center {\r\n  transform: translateX(0vw) translateZ(0vw) rotateY(0deg);\r\n  opacity: 1;\r\n}\r\n\r\n.right {\r\n  transform: translateX(81.8vw) translateZ(47vw) rotateY(-72deg);\r\n  opacity: 0.4;\r\n}\r\n```\r\n\r\n### index.js\r\n```\r\nconst Background3D = ({ children }) => (\r\n  <div\r\n    style={{\r\n      position: \"fixed\",\r\n      background: \"black\",\r\n      height: \"100vh\",\r\n      width: \"100vw\",\r\n      overflow: \"visible\",\r\n      perspective: \"1000px\",\r\n      transformStyle: \"preserve-3d\"\r\n    }}\r\n  >\r\n    {children && children}\r\n  </div>\r\n);\r\n\r\nconst CarouselSide = ({ color, className }) => (\r\n  <div\r\n    className={className}\r\n    style={{\r\n      backgroundImage: `linear-gradient(to right,gray, ${color})`,\r\n      position: \"absolute\",\r\n      height: \"inherit\",\r\n      width: \"inherit\",\r\n      top: 0,\r\n      overflow: \"hidden\"\r\n    }}\r\n  />\r\n);\r\n\r\nclass Carousel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      centerIndex: 1,\r\n      rightTransition: false,\r\n      leftTransition: false\r\n    };\r\n  }\r\n\r\n  rotateLeft() {\r\n    this.setState({\r\n      centerIndex: mod(this.state.centerIndex + 1, this.props.colors.length),\r\n      rightTransition: false,\r\n      leftTransition: true\r\n    });\r\n  }\r\n\r\n  rotateRight() {\r\n    this.setState({\r\n      centerIndex: mod(this.state.centerIndex - 1, this.props.colors.length),\r\n      rightTransition: true,\r\n      leftTransition: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Background3D>\r\n          <CarouselSide\r\n            key={mod(this.state.centerIndex - 1, this.props.colors.length)}\r\n            className={this.state.leftTransition ? \"animated left\" : \"left\"}\r\n            color={\r\n              this.props.colors[\r\n                mod(this.state.centerIndex - 1, this.props.colors.length)\r\n              ]\r\n            }\r\n          />\r\n          <CarouselSide\r\n            key={this.state.centerIndex}\r\n            className=\"animated center\"\r\n            color={this.props.colors[this.state.centerIndex]}\r\n          />\r\n          <CarouselSide\r\n            key={mod(this.state.centerIndex + 1, this.props.colors.length)}\r\n            className={this.state.rightTransition ? \"animated right\" : \"right\"}\r\n            color={\r\n              this.props.colors[\r\n                mod(this.state.centerIndex + 1, this.props.colors.length)\r\n              ]\r\n            }\r\n          />\r\n        </Background3D>\r\n\r\n        <CarouselButton type=\"left\" onClick={e => this.rotateLeft()} />\r\n        <CarouselButton type=\"right\" onClick={e => this.rotateRight()} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n```\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
