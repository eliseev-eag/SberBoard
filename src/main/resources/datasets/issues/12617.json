{
  "url": "https://api.github.com/repos/facebook/react/issues/12617",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12617/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12617/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12617/events",
  "html_url": "https://github.com/facebook/react/issues/12617",
  "id": 314464476,
  "node_id": "MDU6SXNzdWUzMTQ0NjQ0NzY=",
  "number": 12617,
  "title": "Support partial hydration for static content",
  "user": {
    "login": "alexmog2",
    "id": 37539247,
    "node_id": "MDQ6VXNlcjM3NTM5MjQ3",
    "avatar_url": "https://avatars2.githubusercontent.com/u/37539247?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexmog2",
    "html_url": "https://github.com/alexmog2",
    "followers_url": "https://api.github.com/users/alexmog2/followers",
    "following_url": "https://api.github.com/users/alexmog2/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexmog2/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexmog2/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexmog2/subscriptions",
    "organizations_url": "https://api.github.com/users/alexmog2/orgs",
    "repos_url": "https://api.github.com/users/alexmog2/repos",
    "events_url": "https://api.github.com/users/alexmog2/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexmog2/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710332294,
      "node_id": "MDU6TGFiZWw3MTAzMzIyOTQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Server%20Rendering",
      "name": "Component: Server Rendering",
      "color": "d4c5f9",
      "default": false
    },
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-04-15T23:54:01Z",
  "updated_at": "2018-12-03T05:32:06Z",
  "closed_at": "2018-11-01T18:58:27Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nHydrating some server-rendered content can be difficult, inefficient or impossible. For example, in the process of rendering on the server, significant work or additional data may be required for data processing and conversion, such as custom templating or localization. The content can be large too, such as product information or a news article.\r\n \r\nWhen the resulting content is highly dynamic and changes with state, there is no choice but recreate it within React paradigm and recreate it on client. However, complicated server-generated content is often (if not typically) static. Delivering a redundant copy of static content to client just to compare and ignore it during hydration seems a waste of resources and can be prohibitively expensive. \r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/zx38ow3z8x\r\n\r\n**What is the expected behavior?**\r\n\r\nInstead of additional complications of recreating it on the client with hydration, wouldnâ€™t it be much easier to just accept the content from server as-is and tell hydrate() to leave it alone?\r\n\r\nThere may be a few options for non-hydrating SSR:\r\n\r\n1. Add a new callback `shouldComponentHydrate()` to disable hydration of component content\r\n```javascript\r\nexport default class NoHydrate extends Component {\r\n    // return false to avoid re-rendering of this component in hydrate()\r\n    shouldComponentHydrate() {\r\n        return false;\r\n    }\r\n    render() {\r\n        // on server, simply render content\r\n        // on client, this is never called and server content is accepted as-is\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n```\r\n\r\n2. Access SSR content from DOM in `render()`\r\n_This is probably the worst option, though it is the only one that definitely works currently._\r\n```javascript\r\nexport default class AutoHydrate extends Component {\r\n    render() {\r\n        // on server, simply render content\r\n        // on client, find SSR in dom and re-render using dangerouslySetInnerHTML\r\n        // ** requires a unique id, generated before or during server rendering **\r\n        return (typeof window === 'undefined') ? (\r\n            <div id={this.props.id}>\r\n                {this.props.children}\r\n            </div\r\n        ) : (\r\n            <div id={this.props.id}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: document.getElementById(this.props.id).innerHTML\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n```\r\n\r\n3. Use `dangerouslySetInnerHTML` with empty content\r\n_It actually works now, but it is not documented that it is supposed to._\r\n```javascript\r\nexport default class Ssr extends Component {\r\n    render() {\r\n        // on server, simply render content\r\n        // on client, render empty content using dangerouslySetInnerHTML,\r\n        // which normally causes a warning of content mismatch and keeps the existing content\r\n        // also add suppressHydrationWarning to turn off the warning.\r\n        return (typeof window === 'undefined') ? (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        ) : (\r\n            <div\r\n                dangerouslySetInnerHTML={{\r\n                    __html: ''\r\n                }}\r\n                suppressHydrationWarning\r\n            />\r\n        );\r\n    }\r\n}\r\n```\r\n\r\nConsidering that there is a way to make it work now, documenting (3) may be all that needs to happen. However if (1) could be added with same behavior, it would look cleaner.\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nVersion 16.2. Not sure if the working option 3 has worked before or is supposed to work in future versions.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
