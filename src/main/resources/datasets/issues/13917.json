{
  "url": "https://api.github.com/repos/facebook/react/issues/13917",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13917/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13917/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13917/events",
  "html_url": "https://github.com/facebook/react/issues/13917",
  "id": 372413662,
  "node_id": "MDU6SXNzdWUzNzI0MTM2NjI=",
  "number": 13917,
  "title": "Support headless chrome logging from integration tests",
  "user": {
    "login": "justin808",
    "id": 1118459,
    "node_id": "MDQ6VXNlcjExMTg0NTk=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1118459?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/justin808",
    "html_url": "https://github.com/justin808",
    "followers_url": "https://api.github.com/users/justin808/followers",
    "following_url": "https://api.github.com/users/justin808/following{/other_user}",
    "gists_url": "https://api.github.com/users/justin808/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/justin808/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/justin808/subscriptions",
    "organizations_url": "https://api.github.com/users/justin808/orgs",
    "repos_url": "https://api.github.com/users/justin808/repos",
    "events_url": "https://api.github.com/users/justin808/events{/privacy}",
    "received_events_url": "https://api.github.com/users/justin808/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-10-22T07:03:20Z",
  "updated_at": "2018-11-01T19:49:42Z",
  "closed_at": "2018-11-01T19:49:42Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n*feature*\r\n\r\n**What is the current behavior?**\r\nLogging of console errors in headless chrome lacks the ability to provide a full message due to reliance on formatting from console.error\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\nI'd like a way to get a proper error message without hacking the code.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.5.2, not sure about prior versions\r\n\r\nWith a hack to concatenate the strings rather than use the template:\r\n\r\n```js\r\n    // warningWithoutStack$1(false, 'Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText);\r\n    warningWithoutStack$1(false, 'Text content did not match. Server: \"' + normalizedServerText + \"' Client: '\" + normalizedClientText + \"'\");\r\n```\r\n\r\nthen I get a reasonable message:\r\n\r\n```\r\n       webpack-internal:///417 508:18 \"Warning: Text content did not match. Server: \\\"ZZZZZZZZZZZZZZZZZZZ' Client: 'Say hello to:'\"\r\n```\r\n\r\nrather than just the template:\r\n\r\n```\r\n       webpack-internal:///417 514:18 \"Warning: Text content did not match. Server: \\\"%s\\\" Client: \\\"%s\\\"\"\r\n```\r\n\r\nWhile this may be an issue only with Capybara and headless chrome, it is nevertheless a very real issue when troubleshooting why integration tests fail due to console errors.\r\n\r\nHere is my code for the logging of console.error. Note, the template is in `entry.message`.\r\n\r\n```rb\r\nRSpec.configure do |config|\r\n  config.after(:each, :js) do |example|\r\n    next unless [:selenium_chrome, :selenium_chrome_headless].include?(Capybara.current_driver)\r\n    # As of 2018-10-21, traping errors does not work for firefox\r\n\r\n    log_only_list = %w[DEBUG INFO]\r\n    if example.metadata[:ignore_js_errors]\r\n      log_only_list += %w[WARNING SEVERE ERROR]\r\n    end\r\n\r\n    errors = []\r\n\r\n    page.driver.browser.manage.logs.get(:browser).each do |entry|\r\n      next if entry.message.match?(/Download the React DevTools for a better development experience/)\r\n\r\n      log_only_list.include?(entry.level) ? puts(entry.message) : errors << entry.message\r\n    end\r\n\r\n    page.driver.browser.manage.logs.get(:driver).each do |entry|\r\n      log_only_list.include?(entry.level) ? puts(entry.message) : errors << entry.message\r\n    end\r\n\r\n    raise(\"Java Script Error(s) on the page:\\n\\n\" + errors.join(\"\\n\")) if errors.present?\r\n  end\r\nend\r\n```\r\n\r\nCould we have a mode where warningWithoutStack can concat the args for testing and just append to the message?\r\n\r\n```\r\n      let argIndex = 0;\r\n      const message =\r\n        'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\r\n```\r\n\r\nMaybe we can convert the call stack to a string as well?\r\n\r\nThoughts? I could create a PR for this if you think it's useful.\r\n\r\n\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
