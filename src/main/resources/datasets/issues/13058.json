{
  "url": "https://api.github.com/repos/facebook/react/issues/13058",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13058/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13058/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13058/events",
  "html_url": "https://github.com/facebook/react/pull/13058",
  "id": 332949082,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1MzEwMDQ5",
  "number": 13058,
  "title": "Automatically Profile roots when DevTools is present",
  "user": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-06-16T01:07:50Z",
  "updated_at": "2018-06-20T16:24:56Z",
  "closed_at": "2018-06-20T16:24:53Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/13058",
    "html_url": "https://github.com/facebook/react/pull/13058",
    "diff_url": "https://github.com/facebook/react/pull/13058.diff",
    "patch_url": "https://github.com/facebook/react/pull/13058.patch"
  },
  "body": "I'm working on a new DevTools plug-in that uses the new profiler timings to create charts about an application's rendering performance. One of these charts will be a flame graph that shows all fibers in an application. The width of each fiber will be based on its `treeBaseTime` (the time it last took to render) and the color will be based on how much time it took relative to the longest running parts of the commit. Here's a small demo:\r\n![react-devtools-profiling](https://user-images.githubusercontent.com/29597/41494154-51f69a94-70c4-11e8-97ff-a61c695aa3bb.gif)\r\n\r\n### Profiling when DevTools are present\r\n\r\nMy original idea was for DevTools to walk each root and turn `ProfileMode` on for all fibers when the user started profiling. (PR #12910 was created in order to support this functionality.) I made an oversight though. React does not collect timing information for fibers that aren't in `ProfileMode`, and so `selfBaseTime` and `treeBaseTime` values are all set to 0. This means that when a user starts profiling, base times are all 0. These times get updated when a fiber next rendersâ€“ but not if it bails out. This means that in some cases, parts of the tree will not have base times and the resulting graph will be inaccurate.\r\n\r\nThere are a couple of options to address this:\r\n1. Profiling builds of React always collection timing information if DevTools has been detected. This way the base time information is already present when a user starts profiling. (This has an added benefit of not requiring DevTools to crawl each tree and modify the `mode` when recording starts.)\r\n2. DevTools somehow forces a deep re-render (that ignores `shouldComponentUpdate`) when profiling is started so that all fiber are guaranteed to have a base time value.\r\n\r\nThis PR adopts the first option, but I'm happy to discuss the second one if there are strong preferences or concerns.\r\n\r\n### Testing DevTools profiler integration\r\n\r\nThis PR also updates the test renderer to inject itself into DevTools if the global hook is present. This was done so that I could add a test for the otherwise unobservable profiling behavior. (It may also be useful for other tests.)\r\n\r\nI made a few judgement calls here that I don't feel strongly about and would be happy to discuss changing:\r\n1. Test renderer does not support the `findFiberByHostInstance` method because I didn't want to add the overhead of mapping instances to fibers until/unless we had a need for that feature.\r\n1. Test renderer DevTools injection is based on a new `supportDevToolsIfPresent` feature flag, which is only enabled for the tests that depend on it.\r\n1. I updated the other DevTools-capable renderers to also check this feature flag because it seemed a bit weird not to. (I particularly don't feel strongly about this change.)",
  "closed_by": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  }
}
