{
  "url": "https://api.github.com/repos/facebook/react/issues/4653",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4653/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4653/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4653/events",
  "html_url": "https://github.com/facebook/react/issues/4653",
  "id": 101769432,
  "node_id": "MDU6SXNzdWUxMDE3Njk0MzI=",
  "number": 4653,
  "title": "Some DOM props do not match the spec. Do we \"fix\" them or give up saying props match the DOM spec?",
  "user": {
    "login": "dantman",
    "id": 53399,
    "node_id": "MDQ6VXNlcjUzMzk5",
    "avatar_url": "https://avatars2.githubusercontent.com/u/53399?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dantman",
    "html_url": "https://github.com/dantman",
    "followers_url": "https://api.github.com/users/dantman/followers",
    "following_url": "https://api.github.com/users/dantman/following{/other_user}",
    "gists_url": "https://api.github.com/users/dantman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dantman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dantman/subscriptions",
    "organizations_url": "https://api.github.com/users/dantman/orgs",
    "repos_url": "https://api.github.com/users/dantman/repos",
    "events_url": "https://api.github.com/users/dantman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dantman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2015-08-18T23:04:05Z",
  "updated_at": "2019-08-08T16:53:52Z",
  "closed_at": "2017-10-02T00:54:21Z",
  "author_association": "CONTRIBUTOR",
  "body": "The props for React DOM elements is [supposed to be](https://facebook.github.io/react/docs/tags-and-attributes.html#supported-attributes) based on DOM properties. Hence why `className` and `htmlFor` are used and supposedly why all the prop names are `camelCase`.\n\nHowever the eager camelCasing decided by React doesn't actually match up the spec in a number of cases. In a number of cases the spec defines non-camelcase properties which are used in the browser while React defines a non-spec camelCase prop.\n\n[HTMLImageElement](https://html.spec.whatwg.org/multipage/embedded-content.html#htmlimageelement)\n- srcSet (actually srcset)\n\n[HTMLFormElement](https://html.spec.whatwg.org/multipage/forms.html#htmlformelement)\n- autoComplete (actually autocomplete)\n- encType (actually enctype)\n\n[HTMLMediaElement](https://html.spec.whatwg.org/multipage/embedded-content.html#htmlmediaelement)\n- autoPlay (actually autoplay)\n\netc...\n\n---\n\nThis leaves us in an awkward situation where \"React DOM props are based on DOM property names not HTML attribute names\" is used to justify sticking with `className` and `htmlFor` while a number of props don't actually use the same name as they use in the dom.\n\nIf we want to fix this I think there are two options:\n\nA) We keep saying that React uses the DOM property names, and deprecate `srcSet`, `autoComplete`, `encType`, `autoPlay`, etc... with the same warnings you get when using `class=\"\"` in JSX.\n\nB) We stop saying React DOM props are based on DOM properties and start saying something like:\n\n> React DOM props for HTML elements are camelCased props loosely based on DOM property names which are often but not always camelCased. This aligns with the common practice of using camelCased properties in JavaScript. And avoids the need to quote prop names for attributes that use characters which are illegal in JS, such as `accept-charset`. But does so without forcing developers to continually consult the HTML spec to know when a property is supposed to be camelCase and when it is not.\n\nHowever if we choose B then there are probably going to be people arguing that the reason why `className` and `htmlFor` are used became invalid in ES5 when reserved words were made valid in property names and object literals. And that React should start supporting `class` and `for`. Because sticking with ES3 rules doesn't make sense when React requires the environment to be shimmed and shamed to fit ES5 and most users of React use JSX which is either part of an ES6 environment or at least incorporates some ES6 syntax into the JSX syntax.\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
