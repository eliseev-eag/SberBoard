{
  "url": "https://api.github.com/repos/facebook/react/issues/7101",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7101/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7101/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7101/events",
  "html_url": "https://github.com/facebook/react/pull/7101",
  "id": 161724817,
  "node_id": "MDExOlB1bGxSZXF1ZXN0NzQ4MTMwOTY=",
  "number": 7101,
  "title": "Resolve refs in the order of the children",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    },
    {
      "id": 139653724,
      "node_id": "MDU6TGFiZWwxMzk2NTM3MjQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Core%20Utilities",
      "name": "Component: Core Utilities",
      "color": "c5def5",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/facebook/react/milestones/31",
    "html_url": "https://github.com/facebook/react/milestone/31",
    "labels_url": "https://api.github.com/repos/facebook/react/milestones/31/labels",
    "id": 1881672,
    "node_id": "MDk6TWlsZXN0b25lMTg4MTY3Mg==",
    "number": 31,
    "title": "15.3.0",
    "description": "",
    "creator": {
      "login": "zpao",
      "id": 8445,
      "node_id": "MDQ6VXNlcjg0NDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zpao",
      "html_url": "https://github.com/zpao",
      "followers_url": "https://api.github.com/users/zpao/followers",
      "following_url": "https://api.github.com/users/zpao/following{/other_user}",
      "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
      "organizations_url": "https://api.github.com/users/zpao/orgs",
      "repos_url": "https://api.github.com/users/zpao/repos",
      "events_url": "https://api.github.com/users/zpao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zpao/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 28,
    "state": "closed",
    "created_at": "2016-07-13T18:56:16Z",
    "updated_at": "2016-07-29T19:23:41Z",
    "due_on": null,
    "closed_at": "2016-07-29T19:23:41Z"
  },
  "comments": 3,
  "created_at": "2016-06-22T16:13:13Z",
  "updated_at": "2016-07-13T18:56:43Z",
  "closed_at": "2016-06-22T21:28:06Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/7101",
    "html_url": "https://github.com/facebook/react/pull/7101",
    "diff_url": "https://github.com/facebook/react/pull/7101.diff",
    "patch_url": "https://github.com/facebook/react/pull/7101.patch"
  },
  "body": "React makes no guarantees about ref resolution order. Unfortunately, some of the internal Facebook component APIs (specifically, layer dialogs) currently depend on the ref resolution order. Specifically, the assumption is that if the layer dialog is placed as a last child, by the time it mounts or updates, the refs to any previously declared elements have been resolved.\n\nWith the current `ReactMultiChild`, this is _usually_ the case but not always. Both initial mount and an update of all components satisfy this assumption: by the time a child mounts or updates, the previous children’s refs have been resolved. The one scenario where it isn’t true is when **a new child is mounted (or replaced) during an update**.\n\nIn this case, the `mountComponent()` call used to be delayed until `ReactMultiChild` processes the queue. Therefore, for newly mounted components, `attachRef()` gets enqueued too late, and previously existing children resolve their refs first even when they _appear_ after newly mounted components. This subtly breaks the assumption made by our dialog layer APIs.\n\nDemo fiddle: https://jsfiddle.net/c1f9chm3/\n\n<img width=\"195\" alt=\"screen shot 2016-06-22 at 17 10 32\" src=\"https://cloud.githubusercontent.com/assets/810438/16274147/40bcebc8-389c-11e6-9ed4-45e5181ce875.png\">\n\nThis PR changes the `mountComponent()` to be performed inside `ReactChildReconciler.updateChildren()`, just like `receiveComponent()` and `unmountComponent()`. This ensures that `attachRef()` calls are enqueued in the order the children were processed, so by the time the next child flushes, the refs of the previous children have been resolved.\n\n<img width=\"175\" alt=\"screen shot 2016-06-22 at 17 10 52\" src=\"https://cloud.githubusercontent.com/assets/810438/16274167/4fbd60bc-389c-11e6-92b9-34b4992be1b7.png\">\n\nThis is not ideal and will probably be broken by incremental reconciler in the future. However, since we are trying to get rid of mixins in the internal codebase, and layered components are one of the biggest blockers to that, it’s lesser evil to temporarily make ref resolution order more strict until we have time to fix up the layer APIs to not rely on it, and are able to relax it again (which would be a breaking change).\n\n---\n\nReviewers: @spicyj @sebmarkbage \n\nIs this a breaking change? Personally I don’t think so because ref resolution order is indeterministic (in fact that’s the issue I’m trying to fix here). We used to resolve refs in a specific order in almost all cases except mounting. So I think it’s hard to even accidentally rely on the existing behavior. However in theory I can imagine something breaking in a ref-heavy code. So I’m torn.\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
