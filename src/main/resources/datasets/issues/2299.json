{
  "url": "https://api.github.com/repos/facebook/react/issues/2299",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2299/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2299/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2299/events",
  "html_url": "https://github.com/facebook/react/issues/2299",
  "id": 45105552,
  "node_id": "MDU6SXNzdWU0NTEwNTU1Mg==",
  "number": 2299,
  "title": "Extending lifecycle and direct communication in component tree",
  "user": {
    "login": "vahdani",
    "id": 3114764,
    "node_id": "MDQ6VXNlcjMxMTQ3NjQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/3114764?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vahdani",
    "html_url": "https://github.com/vahdani",
    "followers_url": "https://api.github.com/users/vahdani/followers",
    "following_url": "https://api.github.com/users/vahdani/following{/other_user}",
    "gists_url": "https://api.github.com/users/vahdani/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vahdani/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vahdani/subscriptions",
    "organizations_url": "https://api.github.com/users/vahdani/orgs",
    "repos_url": "https://api.github.com/users/vahdani/repos",
    "events_url": "https://api.github.com/users/vahdani/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vahdani/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2014-10-07T13:17:02Z",
  "updated_at": "2014-10-08T21:03:30Z",
  "closed_at": "2014-10-08T21:03:25Z",
  "author_association": "NONE",
  "body": "We want to extend the life-cycle of react components by giving children (those that have been declared in this.props.children) the opportunity to vote on whether they are ready to be rendered or not, in an asynchronous fashion. We want to postpone the actual rendering until all of them are ready. One of the usages would be showing the loading animations in the root component rather than the children.\nWe want to do something like this:\n\n```\nacceptsMount: function ()\n{\n    var accepts = this.props.children.map(function (child) {\n        return child.acceptsMount();\n    });\n    return Q.all(accepts).thenResolve();\n}\n```\n\nAnd then:\n\n```\nvar root = (<Parent><Child1 /><Child2 /></Parent>);\nroot.acceptsMount().then(function () {\n    React.renderComponent(root, document.body);\n});\n```\n\nThe problem is that we have no direct access to actual component and all we have are descriptors. So we cannot call our custom-defined methods of the component.\n\nUsing static methods also does not resolve our problem, as we may rely on component's current state in acceptsMount implementation.\n\nAny ideas how we can achieve this?\n",
  "closed_by": {
    "login": "syranide",
    "id": 1714255,
    "node_id": "MDQ6VXNlcjE3MTQyNTU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/syranide",
    "html_url": "https://github.com/syranide",
    "followers_url": "https://api.github.com/users/syranide/followers",
    "following_url": "https://api.github.com/users/syranide/following{/other_user}",
    "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
    "organizations_url": "https://api.github.com/users/syranide/orgs",
    "repos_url": "https://api.github.com/users/syranide/repos",
    "events_url": "https://api.github.com/users/syranide/events{/privacy}",
    "received_events_url": "https://api.github.com/users/syranide/received_events",
    "type": "User",
    "site_admin": false
  }
}
