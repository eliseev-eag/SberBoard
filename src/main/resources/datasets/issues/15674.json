{
  "url": "https://api.github.com/repos/facebook/react/issues/15674",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15674/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15674/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15674/events",
  "html_url": "https://github.com/facebook/react/issues/15674",
  "id": 445100263,
  "node_id": "MDU6SXNzdWU0NDUxMDAyNjM=",
  "number": 15674,
  "title": "Passing deconstructed useRef ({current}) as param to hook breaks after first usage of hook",
  "user": {
    "login": "stevensacks",
    "id": 162252,
    "node_id": "MDQ6VXNlcjE2MjI1Mg==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/162252?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stevensacks",
    "html_url": "https://github.com/stevensacks",
    "followers_url": "https://api.github.com/users/stevensacks/followers",
    "following_url": "https://api.github.com/users/stevensacks/following{/other_user}",
    "gists_url": "https://api.github.com/users/stevensacks/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stevensacks/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stevensacks/subscriptions",
    "organizations_url": "https://api.github.com/users/stevensacks/orgs",
    "repos_url": "https://api.github.com/users/stevensacks/repos",
    "events_url": "https://api.github.com/users/stevensacks/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stevensacks/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-05-16T18:32:45Z",
  "updated_at": "2019-05-22T14:15:10Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nThis is a bug!\r\n\r\n**What is the current behavior?**\r\nIf you have a custom hook that has useEffect, which takes a ref as its parameter, and you deconstruct that parameter to get current, it breaks on subsequent usages of the hook.\r\n\r\nHere's an example of the code that caused this;\r\n\r\n```javascript\r\nexport default ({current}) => {\r\n    const [rect, setRect] = useState({});\r\n    useEffect(() => {\r\n        const onResize = () => {\r\n            setRect(current.getBoundingClientRect());\r\n        };\r\n        if (current) {\r\n            setRect(current.getBoundingClientRect());\r\n            window.addEventListener('resize', onResize);\r\n        }\r\n        return () => window.removeEventListener('resize', onResize);\r\n    }, [current]);\r\n    return rect;\r\n};\r\n```\r\n\r\nThe first component that uses this hook works just fine. Every other component, current either stays null, or never returns the rect until you resize. It's a very odd bug.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\nhttps://codesandbox.io/s/rough-leftpad-bgpl6\r\n\r\nSpecifically, look at `hooks/useComponentRect.js`.\r\n\r\nSmartScroll uses it, and then so do all the SmartScrollRow components, but all the rows never update their rect until you resize. On code sandbox, I at least get a value for current, but in my CRA development environment on my local box, the ref stays null forever, even on resize.\r\n\r\n**What is the expected behavior?**\r\nI mean, in an ideal world, deconstructing should work. The solution is to deconstruct current inside of useEffect instead, like this.\r\n\r\n```javascript\r\nexport default ref => {\r\n    const [rect, setRect] = useState({});\r\n    useEffect(() => {\r\n        const {current} = ref; // <-----------\r\n        const onResize = () => {\r\n            setRect(current.getBoundingClientRect());\r\n        };\r\n        if (current) {\r\n            setRect(current.getBoundingClientRect());\r\n            window.addEventListener('resize', onResize);\r\n        }\r\n        return () => window.removeEventListener('resize', onResize);\r\n    }, [ref]);\r\n    return rect;\r\n};\r\n```\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nI'm in Chrome but it happened to multiple people who were trying to help me figure out what was going wrong.\r\n\r\nThis is a very specific bug and there is a way to avoid it and that should probably be put into the docs.\r\n",
  "closed_by": null
}
