{
  "url": "https://api.github.com/repos/facebook/react/issues/7797",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7797/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7797/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7797/events",
  "html_url": "https://github.com/facebook/react/issues/7797",
  "id": 178809939,
  "node_id": "MDU6SXNzdWUxNzg4MDk5Mzk=",
  "number": 7797,
  "title": "Manipulating DOM in componentDidUpdate",
  "user": {
    "login": "jvorcak",
    "id": 1083817,
    "node_id": "MDQ6VXNlcjEwODM4MTc=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1083817?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jvorcak",
    "html_url": "https://github.com/jvorcak",
    "followers_url": "https://api.github.com/users/jvorcak/followers",
    "following_url": "https://api.github.com/users/jvorcak/following{/other_user}",
    "gists_url": "https://api.github.com/users/jvorcak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jvorcak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jvorcak/subscriptions",
    "organizations_url": "https://api.github.com/users/jvorcak/orgs",
    "repos_url": "https://api.github.com/users/jvorcak/repos",
    "events_url": "https://api.github.com/users/jvorcak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jvorcak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2016-09-23T08:00:40Z",
  "updated_at": "2019-07-23T07:40:00Z",
  "closed_at": "2016-09-27T15:49:24Z",
  "author_association": "NONE",
  "body": "Hi, this is more like a question, I'd like to open a discussion regarding DOM manipulation in `componentDidUpdate`.\n\nI'm creating a React plugin. It has to do some DOM calculations, because CSS is not powerful enough to cover everything this plugin needs to do. The problem is **I need to adjust some CSS properties depending on the return value of getBoundingClientRect() of some other DOM element rendered by the same component**.\n\nSo technically we have 3 options:\n\n1) Calculate `getBoundingClientRect` in `componentDidUpdate`  and calling `setState` with calculated values. I'm afraid of the infinite loop that could happen in certain cases, so I wouldn't go for this one.\n\n2) Do it like in 1) and play a bit with `shouldComponentUpdate`, but this seems very complex and not readable. A lot of questions pop up that are dependent on the certain use case.\n\n3) Update DOM from componentDidUpdate. This is the solution I decided to go for, it works, it's simple, stable and works as intended. However I feel I'm on the edge, so I wanted to double check that this is an OK way of doing things. **Is it OK to manipulate DOM in `componentDidUpdate`?** It's called everytime `render` is done, and I'm OK with throwing away my changes, because for next `render` I'll modify DOM again.\n\nHere's a part of the code\n\n```\ncomponentDidMount() {\n  this.recalculateIndent();\n}\n\ncomponentDidUpdate() {\n  this.recalculateIndent();\n}\n\nrecalculateIndent() {\n  // calculate indent based on getBoundingClientRect of some DOM reference\n  this.textareaRef.style.textIndent = `${indent}px`;\n}\n\nrender() {\n   return (\n   ...\n   <textarea ref={ref => this.textareaRef = ref}/>\n   ...\n   );\n}\n```\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
