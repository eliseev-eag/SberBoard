{
  "url": "https://api.github.com/repos/facebook/react/issues/2277",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2277/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2277/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2277/events",
  "html_url": "https://github.com/facebook/react/issues/2277",
  "id": 44450128,
  "node_id": "MDU6SXNzdWU0NDQ1MDEyOA==",
  "number": 2277,
  "title": "Add better guard for nested renderings.",
  "user": {
    "login": "slorber",
    "id": 749374,
    "node_id": "MDQ6VXNlcjc0OTM3NA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/749374?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slorber",
    "html_url": "https://github.com/slorber",
    "followers_url": "https://api.github.com/users/slorber/followers",
    "following_url": "https://api.github.com/users/slorber/following{/other_user}",
    "gists_url": "https://api.github.com/users/slorber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slorber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slorber/subscriptions",
    "organizations_url": "https://api.github.com/users/slorber/orgs",
    "repos_url": "https://api.github.com/users/slorber/repos",
    "events_url": "https://api.github.com/users/slorber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slorber/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929153,
      "node_id": "MDU6TGFiZWw0MDkyOTE1Mw==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Enhancement",
      "name": "Type: Enhancement",
      "color": "84b6eb",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2014-09-30T14:11:30Z",
  "updated_at": "2017-10-04T10:54:06Z",
  "closed_at": "2017-10-04T10:54:06Z",
  "author_association": "CONTRIBUTOR",
  "body": "This issue demonstrate the problem I had:\nhttp://jsfiddle.net/kb3gN/6069/\n\nAs you can see, both cases are not handled the same way.\n\n```\nWarning: unmountComponentAtNode(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate. 10333102_793476900703299_1710860803_n.js:20226\nWarning: _renderNewRootComponent(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate. 10333102_793476900703299_1710860803_n.js:20226\nUncaught Error: Invariant Violation: unmountComponent(): Can only unmount a mounted component. \n```\n\nVS \n\n```\nUncaught Error: Invariant Violation: replaceState(...): Cannot update during an existing state transition (such as within `render`). This could potentially cause an infinite loop so it is forbidden. 10333102_793476900703299_1710860803_n.js:18689invariant 10333102_793476900703299_1710860803_n.js:18689validateLifeCycleOnReplaceState 10333102_793476900703299_1710860803_n.js:6226ReactCompositeComponentMixin.replaceState 10333102_793476900703299_1710860803_n.js:6645ReactCompositeComponentMixin.setState 10333102_793476900703299_1710860803_n.js:6626React.createClass.render Inline JSX script:23(anonymous function) 10333102_793476900703299_1710860803_n.js:7017ReactPerf.measure 10333102_793476900703299_1710860803_n.js:12710(anonymous function) 10333102_793476900703299_1710860803_n.js:6947ReactPerf.measure 10333102_793476900703299_1710860803_n.js:12710ReactCompositeComponentMixin._performComponentUpdate 10333102_793476900703299_1710860803_n.js:6891ReactCompositeComponentMixin.performUpdateIfNecessary 10333102_793476900703299_1710860803_n.js:6831runBatchedUpdates 10333102_793476900703299_1710860803_n.js:15012Mixin.perform 10333102_793476900703299_1710860803_n.js:16875Mixin.perform 10333102_793476900703299_1710860803_n.js:16875mixInto.perform 10333102_793476900703299_1710860803_n.js:14958(anonymous function) 10333102_793476900703299_1710860803_n.js:15036ReactPerf.measure 10333102_793476900703299_1710860803_n.js:12710Mixin.closeAll 10333102_793476900703299_1710860803_n.js:16948Mixin.perform 10333102_793476900703299_1710860803_n.js:16889ReactDefaultBatchingStrategy.batchedUpdates 10333102_793476900703299_1710860803_n.js:9162batchedUpdates 10333102_793476900703299_1710860803_n.js:14973ReactEventListener.dispatchEvent 10333102_793476900703299_1710860803_n.js:10663\n```\n\nActually I encountered the 1st case, and it was quite difficult to see where the problem was in my real life application because there was only a warning, and the message were not very helpful. Is it possible to handle this consistantly or at least include the component name if available?\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
