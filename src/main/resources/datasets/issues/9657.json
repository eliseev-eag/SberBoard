{
  "url": "https://api.github.com/repos/facebook/react/issues/9657",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9657/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9657/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9657/events",
  "html_url": "https://github.com/facebook/react/issues/9657",
  "id": 227840957,
  "node_id": "MDU6SXNzdWUyMjc4NDA5NTc=",
  "number": 9657,
  "title": "[RFC] onChange -> onInput, and don't polyfill onInput for uncontrolled components",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 127893911,
      "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
      "name": "Component: DOM",
      "color": "fef2c0",
      "default": false
    },
    {
      "id": 763742499,
      "node_id": "MDU6TGFiZWw3NjM3NDI0OTk=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Breaking%20Change",
      "name": "Type: Breaking Change",
      "color": "aa2608",
      "default": false
    },
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2017-05-10T23:47:56Z",
  "updated_at": "2019-08-03T23:22:42Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "body": "`onChange` is a nicer name for what `onInput` does and the fact that it has propagated up to other high-level components as the default name is much nicer than `onInput` as a high level event name.\r\n\r\nGenerally it has been helpful for the many new-comers to React that don't know the DOM well (which is a lot more than the inverse). However, that doesn't change the fact that it can be confusing for people that are familiar.\r\n\r\nUnfortunately, changing it now would cause confusion for everyone that already knows React.\r\n\r\nThe reason I'd like to change it now is because I'd like to get away from polyfilling it for __uncontrolled__ components. This use case is filled with all kinds of imperative code which leads to edge cases. E.g. reading/setting `e.target.value` or reading/setting `ref.value`.\r\n\r\nWhen you use __controlled__ components you shouldn't need to touch them imperatively and therefore won't hit the edge cases. Ideally we should get away from reading from `e.target.value` and instead just pass the `value` directly to the event handler.\r\n\r\n## Proposal:\r\n\r\n__Controlled Components__\r\n\r\n- `onInput`: Polyfilled and works like `onChange` does today. It is allowed to over-fire many events even if nothing changed. May have special Fiber rules regarding synchronous flushing. _Optional: Pass `value` as second arg._\r\n- `onChange`: Works like `onInput` for one version but warns about being deprecated and suggests switching to `onInput`. In next version it works like the browser but still warns and tells you to use `onInput` forever.\r\n\r\n_Optional: Add a getter/setter on DOM `.value` in development mode and warn if this is used directly._\r\n\r\n__Uncontrolled Components__\r\n\r\n- `onInput`: Not polyfilled. Works however the browser works. Warns about browser differences if you don't also specify `onClick`, `onKeyDown` and/or `onKeyUp`. The warnings suggests implementing those listeners to cover more edge cases, or switch to a controlled component.\r\n- `onChange`: Not polyfilled. Works however the browser works.\r\n",
  "closed_by": null
}
