{
  "url": "https://api.github.com/repos/facebook/react/issues/16435",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16435/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16435/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16435/events",
  "html_url": "https://github.com/facebook/react/issues/16435",
  "id": 481864868,
  "node_id": "MDU6SXNzdWU0ODE4NjQ4Njg=",
  "number": 16435,
  "title": "useReducer become bad if I open the chrome react-dev-tool and click the react dom node",
  "user": {
    "login": "fantasticsoul",
    "id": 7334950,
    "node_id": "MDQ6VXNlcjczMzQ5NTA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7334950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fantasticsoul",
    "html_url": "https://github.com/fantasticsoul",
    "followers_url": "https://api.github.com/users/fantasticsoul/followers",
    "following_url": "https://api.github.com/users/fantasticsoul/following{/other_user}",
    "gists_url": "https://api.github.com/users/fantasticsoul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fantasticsoul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fantasticsoul/subscriptions",
    "organizations_url": "https://api.github.com/users/fantasticsoul/orgs",
    "repos_url": "https://api.github.com/users/fantasticsoul/repos",
    "events_url": "https://api.github.com/users/fantasticsoul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fantasticsoul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-08-17T08:48:12Z",
  "updated_at": "2019-08-19T09:45:38Z",
  "closed_at": "2019-08-17T15:23:59Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n### bug\r\n___\r\n**What is the current behavior?**\r\ni have [issue](https://github.com/facebook/react/issues/16347) been closed, so I `CHANGE` my writing way, I am very confused these days about the bug, just see the code below:\r\n```jsx\r\nimport React, { useReducer } from 'react';\r\n\r\nlet cursor = 1;\r\nfunction getCursor() {\r\n  return cursor;\r\n}\r\nfunction incCursor() {\r\n  cursor++;\r\n}\r\nconst cursor_ref_ = {};//map cursor to ref\r\n\r\n// always return new state\r\nfunction reducer(initState, partialState) {\r\n  Object.assign(initState.state, partialState);\r\n  return Object.assign({}, initState);\r\n}\r\n\r\n// make setState handler with dispatch\r\nconst makeSetState = (cursor, ccDispatch) => {\r\n  // broadcast is true by default, that means any ref call setState will trigger other ref update ui\r\n  return (state, broadcast = true) => {\r\n    console.log(`%c cursor ${cursor} update state`, 'color:purple; border:3px solid purple;');\r\n    if(broadcast){\r\n      console.log(`%c cursor ${cursor} broadcast state`, 'color:purple; border:3px solid purple;');\r\n      Object.keys(cursor_ref_).filter(v => v != cursor).forEach(c => {\r\n        const ref = cursor_ref_[c];\r\n        console.log(`%c start trigger cursor ${c} setState`, 'color:blue; border:3px solid blue;');\r\n        // flag broadcast false, let it only change ref state self\r\n        ref.ctx.setState(state, false);\r\n      });\r\n    }\r\n    ccDispatch(state)\r\n  }\r\n}\r\n\r\n// initState is the target state that service for user \r\nfunction useMySpecialHook(initState) {\r\n  const tmpCursor = getCursor();\r\n  const [ccState, ccDispatch] = useReducer(reducer, { state: initState, cursor: tmpCursor });\r\n  const targetCursor = ccState.cursor;\r\n  let isFirstRendered = targetCursor === tmpCursor;\r\n\r\n  let ref;\r\n  if (isFirstRendered) {\r\n    incCursor();\r\n    console.log(`%c make setState for cursor ${targetCursor}`, 'color:green; border:3px solid green;');\r\n    ref = {\r\n      ctx: {\r\n        cursor: targetCursor,\r\n        state: ccState.state,\r\n        setState: makeSetState(targetCursor, ccDispatch),\r\n      }\r\n    };\r\n    cursor_ref_[targetCursor] = ref;\r\n  } else {\r\n    // get the ref by cursor\r\n    ref = cursor_ref_[targetCursor];\r\n    // replace state\r\n    ref.ctx.state = ccState.state;\r\n    console.log(`%c replace cursor ${targetCursor} setState `+targetCursor, 'color:red; border:3px solid red;');\r\n\r\n    // in re-render period, alway assign a latest setState handler to ref.ctx\r\n    ref.ctx.setState = makeSetState(targetCursor, ccDispatch);\r\n  }\r\n\r\n  return ref.ctx;\r\n}\r\n\r\nexport default function DemoCounter() {\r\n  const { state, setState } = useMySpecialHook({ count: 100 });\r\n  const dispatch = ({ type }) => {\r\n    if (type === 'increment') setState({ count: state.count + 1 });\r\n    else setState({ count: state.count - 1 });\r\n  }\r\n  const changeCount = () => {\r\n    setState({ count: Date.now() });\r\n  }\r\n  return (\r\n    <div style={{ border: '1px solid blue', margin: '8px' }}>\r\n      <h2>DemoCounter</h2>\r\n      Count: {state.count}\r\n      <button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n      <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\r\n      <button onClick={changeCount}>setState</button>\r\n    </div>\r\n  );\r\n}\r\n```\r\nthen I  import Counter component and init 2 instance(at least 2) in `index.js`, and I click any one of them's inc button or dec button, the other one will been trigger rendered also, it works perfectly, but if I open the chrome react dev-tool, and click one react dom node in the tool, things become bad, it does't work agian/(ㄒoㄒ)/~~，if you don't understand what I said, just see the [video](https://concentjs.github.io/concent-site/bug-video.html)\r\n\r\n<p>\r\n<video id=\"video\" controls=\"\" preload=\"none\">\r\n<source id=\"mp4\" \r\nsrc=\"https://concentjs.github.io/concent-site/bug-video.html\" type=\"video/mp4\">\r\n</video>\r\n</p>\r\n\r\n\r\n**What is the expected behavior?**\r\nno matter if I click the react dom node in the dev-tool or not, the two instance will always been trigger rendered. please run the copy the code and run it in your computer, it is really strange, if I change component from hook to class(I mean take over class ins's setState, some examples like: https://stackblitz.com/edit/cc-complex-counter), it is always fine!!!! react-dev-tool does no matter to these code, but for hook, I don't know why it become bad if I click the react dom node in the dev-tool...\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nreact: 1.16.9\r\nreact dev tool: lastest",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
