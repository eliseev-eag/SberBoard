{
  "url": "https://api.github.com/repos/facebook/react/issues/14998",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14998/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14998/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14998/events",
  "html_url": "https://github.com/facebook/react/issues/14998",
  "id": 416406852,
  "node_id": "MDU6SXNzdWU0MTY0MDY4NTI=",
  "number": 14998,
  "title": "Keys for hooks",
  "user": {
    "login": "jamesknelson",
    "id": 161707,
    "node_id": "MDQ6VXNlcjE2MTcwNw==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/161707?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jamesknelson",
    "html_url": "https://github.com/jamesknelson",
    "followers_url": "https://api.github.com/users/jamesknelson/followers",
    "following_url": "https://api.github.com/users/jamesknelson/following{/other_user}",
    "gists_url": "https://api.github.com/users/jamesknelson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jamesknelson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jamesknelson/subscriptions",
    "organizations_url": "https://api.github.com/users/jamesknelson/orgs",
    "repos_url": "https://api.github.com/users/jamesknelson/repos",
    "events_url": "https://api.github.com/users/jamesknelson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jamesknelson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-03-02T15:17:13Z",
  "updated_at": "2019-03-06T08:57:58Z",
  "closed_at": "2019-03-06T06:24:34Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nHooks must always be called in the same order.\r\n\r\n**What is the desired behavior?**\r\n\r\nIt would be useful to be able to use hooks in loops and conditions, as this would allow hooks to be lifted out of child components that are rendered by loops and conditions.\r\n\r\nFor example, consider this hook that stores the state for a contact form:\r\n\r\n```js\r\nfunction useContactModel({ defaultValue }) {\r\n  let [name, setName] = useState(defaultValue.name || '')\r\n  let [email, setEmail] = useState(defaultValue.email || '')\r\n\r\n  return {\r\n    error: name === '' ? 'Please enter a name' : undefined,\r\n    name: {\r\n      value: name,\r\n      onChange: e => setName(e.target.value),\r\n    },\r\n    email: {\r\n      value: email,\r\n      onChange: e => setEmail(e.target.value),\r\n    },\r\n  }\r\n}\r\n```\r\n\r\nThis hook works fine when it is used inside a form component -- let's call it `<ContactForm>`. But say that your requirements change and you now need to be able to embed an arbitrary number of contacts in the form, and thus want to lift the state up into a `<ContactList>` component so that you can access all the contact state at once (see [demo](https://frontarm.com/demoboard/?id=e1a331f5-3468-488c-ab53-9eb455730af5)) -- there's no way to reuse the `useContactModel()` hook within `<ContactList>`, because it would need to be called within a loop.\r\n\r\n```jsx\r\nfunction ContactList() {\r\n  let contactIds = ['a', 'b', 'c']\r\n  let contactModels = contactIds.map(useContactModel)\r\n\r\n  return contactIds.map((id, i) =>\r\n        <Contact\r\n          key={id}\r\n          model={contactModels[i]}\r\n        />\r\n  )\r\n}\r\n```\r\n\r\nThe contact form example feels a little contrived, but this scenario of wanting to store some \"model\" an arbitrary number of times comes up relatively often when building forms. \r\n\r\n**Proposed solution**\r\n\r\nI've taken a cursory look at the source but I really don't understand it enough to know if this could even work, but with that said...\r\n\r\nWould it be possible to somehow assign keys to hooks, just as you can with components, and use that extra information to reconcile hooks called in conditionals/loops? For example, a hypothetical `withKey` function could accept a key and a callback, and allow for hooks to be called within the callback as if they were being called in a child component -- but returning the result of the callback instead of rendering elements.\r\n\r\n```js\r\nlet contactIds = ['a', 'b', 'c']\r\nlet contactModels = contactIds.map(id => \r\n  withKey(id, () => useContactModel())\r\n)\r\n```\r\n\r\nNot sure if this is possible or even particularly desirable given the potential performance problems of the enormous hooks it would enable. It'd certainly make it easier to lift state up the tree, though.",
  "closed_by": {
    "login": "jamesknelson",
    "id": 161707,
    "node_id": "MDQ6VXNlcjE2MTcwNw==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/161707?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jamesknelson",
    "html_url": "https://github.com/jamesknelson",
    "followers_url": "https://api.github.com/users/jamesknelson/followers",
    "following_url": "https://api.github.com/users/jamesknelson/following{/other_user}",
    "gists_url": "https://api.github.com/users/jamesknelson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jamesknelson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jamesknelson/subscriptions",
    "organizations_url": "https://api.github.com/users/jamesknelson/orgs",
    "repos_url": "https://api.github.com/users/jamesknelson/repos",
    "events_url": "https://api.github.com/users/jamesknelson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jamesknelson/received_events",
    "type": "User",
    "site_admin": false
  }
}
