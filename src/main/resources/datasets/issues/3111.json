{
  "url": "https://api.github.com/repos/facebook/react/issues/3111",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3111/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3111/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3111/events",
  "html_url": "https://github.com/facebook/react/issues/3111",
  "id": 57187328,
  "node_id": "MDU6SXNzdWU1NzE4NzMyOA==",
  "number": 3111,
  "title": "React.addons.TransitionGroup fails to remove multiple children from the DOM at the same time",
  "user": {
    "login": "spudly",
    "id": 487068,
    "node_id": "MDQ6VXNlcjQ4NzA2OA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/487068?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/spudly",
    "html_url": "https://github.com/spudly",
    "followers_url": "https://api.github.com/users/spudly/followers",
    "following_url": "https://api.github.com/users/spudly/following{/other_user}",
    "gists_url": "https://api.github.com/users/spudly/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/spudly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spudly/subscriptions",
    "organizations_url": "https://api.github.com/users/spudly/orgs",
    "repos_url": "https://api.github.com/users/spudly/repos",
    "events_url": "https://api.github.com/users/spudly/events{/privacy}",
    "received_events_url": "https://api.github.com/users/spudly/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2015-02-10T15:14:23Z",
  "updated_at": "2015-04-01T21:39:05Z",
  "closed_at": "2015-04-01T21:39:05Z",
  "author_association": "CONTRIBUTOR",
  "body": "When using React.addons.TransitionGroup, you can only remove one item at a time. If you remove more, it will fail to remove all but the last child out of the DOM.\n\nLater when the children are added back again, those that were not removed will not have their special lifecycle methods (componentWillEnter/componentDidEnter) called because they were already in the DOM.\n\nHere's a JSFiddle illustrating the problem:\nhttp://jsfiddle.net/2o5bjst2/1/\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
