{
  "url": "https://api.github.com/repos/facebook/react/issues/9529",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9529/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9529/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9529/events",
  "html_url": "https://github.com/facebook/react/issues/9529",
  "id": 224398207,
  "node_id": "MDU6SXNzdWUyMjQzOTgyMDc=",
  "number": 9529,
  "title": "Doc: State and Lifecycle",
  "user": {
    "login": "ghost",
    "id": 10137,
    "node_id": "MDQ6VXNlcjEwMTM3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ghost",
    "html_url": "https://github.com/ghost",
    "followers_url": "https://api.github.com/users/ghost/followers",
    "following_url": "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
    "organizations_url": "https://api.github.com/users/ghost/orgs",
    "repos_url": "https://api.github.com/users/ghost/repos",
    "events_url": "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ghost/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2017-04-26T09:14:28Z",
  "updated_at": "2017-04-26T16:36:59Z",
  "closed_at": "2017-04-26T12:24:22Z",
  "author_association": "NONE",
  "body": "From doc (https://facebook.github.io/react/docs/state-and-lifecycle.html) about State and Lifecycle there is this class\r\n```\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {date: new Date()};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Clock />,\r\n  document.getElementById('root')\r\n);\r\n```\r\n\r\nMy question is: since setState is asynch can't it happen that some calls to setState inside tick function get a pending state, and for example for three seconds update won't be applied to the state? In that case, we could get three seconds missing from the UI, isn't it (or applied after delay)? Or I am wrong?",
  "closed_by": null
}
