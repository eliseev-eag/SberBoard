{
  "url": "https://api.github.com/repos/facebook/react/issues/10012",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10012/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10012/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10012/events",
  "html_url": "https://github.com/facebook/react/issues/10012",
  "id": 237234053,
  "node_id": "MDU6SXNzdWUyMzcyMzQwNTM=",
  "number": 10012,
  "title": "React component is using ReactNoopUpdateQueue in dev build, preventing state updates",
  "user": {
    "login": "TAGC",
    "id": 1588951,
    "node_id": "MDQ6VXNlcjE1ODg5NTE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1588951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TAGC",
    "html_url": "https://github.com/TAGC",
    "followers_url": "https://api.github.com/users/TAGC/followers",
    "following_url": "https://api.github.com/users/TAGC/following{/other_user}",
    "gists_url": "https://api.github.com/users/TAGC/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TAGC/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TAGC/subscriptions",
    "organizations_url": "https://api.github.com/users/TAGC/orgs",
    "repos_url": "https://api.github.com/users/TAGC/repos",
    "events_url": "https://api.github.com/users/TAGC/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TAGC/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-06-20T14:39:04Z",
  "updated_at": "2017-07-04T06:55:38Z",
  "closed_at": "2017-07-04T06:55:38Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nI'm reporting a bug.\r\n\r\nI'm facing a really strange issue in which every now and again my app stops working when running via webpack's hot dev server. When this issue presents itself, I struggle to get it to work again even after cleaning everything, stashing all git changes, resetting yarn.lock, etc.\r\n\r\nIn production builds I noticed this issue never occurs.\r\n\r\nI have a simple component that renders two fields (\"hostname\" and \"port\"), and maintains the field values in the component's `state`. Essentially just [this](https://facebook.github.io/react/docs/forms.html#controlled-components).\r\n\r\n### Expected behavior\r\n\r\nI expect in such a basic case that I should be able to update the form fields without issue - I enter text in a field, which triggers the field's `onChange` event, which in turn invokes `setState`, updating the value that\r\nthe field gets re-rendered with.\r\n\r\n### Actual behavior\r\n\r\nI observe the expected behaviour every time in production, and some of the time during development. I have no idea why but sometimes after rebuilding certain modules I will see this issue again.\r\n\r\nWhen it does occur, I'm not able to change the value of either of the fields, and instead I see the following error in the Electron console:\r\n\r\n```\r\nwarning.js:36 Warning: setState(...): Can only update a mounted or mounting component. This usually means you called setState() on an unmounted component. This is a no-op. Please check the code for the ConnectionPane component.\r\n```\r\n\r\n### Environment\r\n\r\nreact: v15.6.1\r\n`node -v`: v7.7.2\r\n`npm -v`: 5.0.3\r\n\r\n1. Operating system: Windows 7 64-bit\r\n2. Browser and version: Electron (v1.7.3) chromium browser\r\n\r\n### Additional Details\r\n\r\nI notice that in both development and production builds, my React component does not pass a React updater to the superclass constructor, so React base class uses `ReactNoopUpdateQueue`:\r\n\r\n```js\r\nthis.updater = updater || ReactNoopUpdateQueue;\r\n```\r\n\r\nThere are two places where `this.updater` is assigned to, and I breakpoint both of them. In neither the dev nor the production build do I see anything except `ReactNoopUpdateQueue` getting assigned to this field, yet in my production builds state updates work as expected, and when I step through the `setState` code in production I find that `this.updater` has \"magically\" been replaced with the real update queue (`ReactUpdateQueue`).\r\n\r\nThis \"magic\" sometimes doesn't happen during dev builds, so the state changes fail (no-op) and I get the warning messages shown above.\r\n\r\nFor reference, this is an excerpt of the React component code.\r\n\r\n```js\r\nexport default class ConnectionPane extends React.Component<IConnectionPaneProps, IState> {\r\n  constructor (props: IConnectionPaneProps) {\r\n    super(props);\r\n\r\n    this.state = {hostname: 'localhost', port: 36364};\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.setHostname = this.setHostname.bind(this);\r\n    this.setPort = this.setPort.bind(this);\r\n  }\r\n\r\n  private get isHostnameValid (): boolean {\r\n     ...\r\n  }\r\n\r\n  private get isPortValid (): boolean {\r\n    ...\r\n  }\r\n\r\n  private get areConnectionSettingsValid (): boolean {\r\n    ...\r\n  }\r\n\r\n  public render () {\r\n    return (\r\n        <Form onSubmit={this.onSubmit}>\r\n          <FormGroup controlId='hostname' validationState={this.isHostnameValid ? undefined : 'error'}>\r\n            <ControlLabel>Hostname</ControlLabel>\r\n            <FormControl\r\n                type='text'\r\n                value={this.state.hostname}\r\n                onChange={this.setHostname}\r\n            />\r\n            <FormControl.Feedback />\r\n          </FormGroup>\r\n          <FormGroup controlId='port' validationState={this.isPortValid ? undefined : 'error'}>\r\n            <ControlLabel>Port</ControlLabel>\r\n            <FormControl\r\n                type='number'\r\n                value={isUndefined(this.state.port) ? '' : this.state.port}\r\n                onChange={this.setPort}\r\n            />\r\n            <FormControl.Feedback />\r\n          </FormGroup>\r\n          <Button type='submit' bsStyle='primary' disabled={!this.areConnectionSettingsValid}>Connect</Button>\r\n        </Form>\r\n    );\r\n  }\r\n\r\n  private setHostname (event) {\r\n    this.setState({hostname: event.target.value});\r\n  }\r\n\r\n  private setPort (event) {\r\n    const port = event.target.value;\r\n\r\n    if (port === '') {\r\n      this.setState({port: undefined});\r\n    } else if (inRange(event.target.value, PORT_MIN, PORT_MAX + 1)) {\r\n      this.setState({port: toNumber(port)});\r\n    }\r\n  }\r\n\r\n  private onSubmit (event) {\r\n    event.preventDefault();\r\n\r\n    const {hostname, port} = this.state;\r\n    this.props.onConnect(hostname, port!);\r\n  }\r\n}\r\n```",
  "closed_by": {
    "login": "TAGC",
    "id": 1588951,
    "node_id": "MDQ6VXNlcjE1ODg5NTE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1588951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TAGC",
    "html_url": "https://github.com/TAGC",
    "followers_url": "https://api.github.com/users/TAGC/followers",
    "following_url": "https://api.github.com/users/TAGC/following{/other_user}",
    "gists_url": "https://api.github.com/users/TAGC/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TAGC/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TAGC/subscriptions",
    "organizations_url": "https://api.github.com/users/TAGC/orgs",
    "repos_url": "https://api.github.com/users/TAGC/repos",
    "events_url": "https://api.github.com/users/TAGC/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TAGC/received_events",
    "type": "User",
    "site_admin": false
  }
}
