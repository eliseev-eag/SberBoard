{
  "url": "https://api.github.com/repos/facebook/react/issues/15769",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15769/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15769/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15769/events",
  "html_url": "https://github.com/facebook/react/pull/15769",
  "id": 450111764,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjgzNTAxODc1",
  "number": 15769,
  "title": "[Suspense] Change Suspending and Restarting Heuristics",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-05-30T03:21:34Z",
  "updated_at": "2019-05-31T03:55:17Z",
  "closed_at": "2019-05-30T23:37:57Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/15769",
    "html_url": "https://github.com/facebook/react/pull/15769",
    "diff_url": "https://github.com/facebook/react/pull/15769.diff",
    "patch_url": "https://github.com/facebook/react/pull/15769.patch"
  },
  "body": "This introduces a new principle for when we restart a render instead of continuing to completion. The principle is that *if* we're going to suspend when we complete a root, then we should also restart if we get an update or ping that might unsuspend it, and vice versa. The only reason to suspend is because you think you might want to restart before committing. However, it doesn't make sense to restart only while in the period we're suspended. That's just a race condition depending on how long it took to render. We should also be able to restart before that.\r\n\r\nHowever, restarting too aggressively is also not good because it starves out any intermediate loading state. So this PR uses a set of heuristics.\r\n\r\n## Heuristics\r\n\r\nIf nothing threw a Promise or all the same fallbacks are already showing, then don't suspend/restart.\r\n\r\nIf this is an initial render of a new tree of Suspense boundaries and those trigger a fallback, then don't suspend/restart. We want to ensure that we can show the initial loading state as quickly as possible.\r\n\r\nIf we hit a \"Delayed\" case, such as when we'd switch from content back into a fallback, then we should always suspend/restart. SuspenseConfig applies to this case. If none is defined, JND is used instead.\r\n\r\nIf we're already showing a fallback and it gets \"retried\", allowing us to show another level, but there's still an inner boundary that would show a fallback, then we suspend/restart for 500ms since the last time we showed a fallback anywhere in the tree. This effectively throttles progressive loading into a consistent train of commits. This also gives us an opportunity to restart to get to the completed state slightly earlier.\r\n\r\nIf there's ambiguity due to batching it's resolved in preference of: \"delayed\", \"initial render\", \"retry\". We want to ensure that a \"busy\" state doesn't get force committed. We want to ensure that new initial loading states can commit as soon as possible.\r\n\r\nMore info about the mechanisms in the individual commits.\r\n\r\n## Tests\r\n\r\nThis PR needed to adjust a lot of tests.\r\n\r\nMost of them is because initial render no longer suspends in the traditional way. I fixed this mostly by first rendering an empty Suspense boundary and then updating it. This transition works mostly the traditional way.\r\n\r\nAnother quirk is that restarting doesn't happen until we know that this render is going to suspend. Currently, we only know that once we complete the Suspense boundary. Pings can happen before or after this. If we never yield after completing it, we don't restart until we get to the root. I left a comment to fix that. In the meantime I had to rewrite the tests to continue render past the Suspense boundary before pausing so that it can restart after that.",
  "closed_by": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  }
}
