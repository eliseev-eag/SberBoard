{
  "url": "https://api.github.com/repos/facebook/react/issues/12713",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12713/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12713/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12713/events",
  "html_url": "https://github.com/facebook/react/issues/12713",
  "id": 318652532,
  "node_id": "MDU6SXNzdWUzMTg2NTI1MzI=",
  "number": 12713,
  "title": "Reconciliation has bug that is occured when client starts hydration",
  "user": {
    "login": "cheolheon",
    "id": 38815423,
    "node_id": "MDQ6VXNlcjM4ODE1NDIz",
    "avatar_url": "https://avatars2.githubusercontent.com/u/38815423?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cheolheon",
    "html_url": "https://github.com/cheolheon",
    "followers_url": "https://api.github.com/users/cheolheon/followers",
    "following_url": "https://api.github.com/users/cheolheon/following{/other_user}",
    "gists_url": "https://api.github.com/users/cheolheon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cheolheon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cheolheon/subscriptions",
    "organizations_url": "https://api.github.com/users/cheolheon/orgs",
    "repos_url": "https://api.github.com/users/cheolheon/repos",
    "events_url": "https://api.github.com/users/cheolheon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cheolheon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710722093,
      "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
      "name": "Type: Needs Investigation",
      "color": "fbca04",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-04-28T17:02:34Z",
  "updated_at": "2018-08-16T07:33:23Z",
  "closed_at": "2018-08-02T19:23:19Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\n```jsx\r\n// Static.js\r\nimport React from 'react'\r\n\r\nfunction Static() {\r\n  return (\r\n    <div className=\"i am static\" style={{ backgroundColor: 'red', width: '100%', height: '300px' }}>\r\n      Static\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Static\r\n```\r\n\r\n```jsx\r\n// Dynamic.js\r\nimport React from 'react'\r\n\r\nfunction Dynamic() {\r\n  return (\r\n    <div className=\"i am dynamic\" style={{ backgroundColor: 'blue', width: '100%', height: '300px' }}>\r\n      Dynamic\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dynamic\r\n```\r\n\r\n```jsx\r\n// App.js\r\nimport React from 'react'\r\nimport Static from './Static'\r\nimport Dynamic from './Dynamic'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.mounted = false\r\n    this.state = {\r\n      loaded: !isBrowser\r\n    }\r\n\r\n    if (isBrowser) {\r\n      new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          const nextState = {\r\n            loaded: true\r\n          }\r\n          if (this.mounted) {\r\n            this.setState(nextState)\r\n          } else {\r\n            this.state = nextState\r\n          }\r\n        }, 200)\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loaded ? <Dynamic /> : null}\r\n        <Static />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n```\r\nFirst, Server sends React App without any asynchronous component loading.\r\n\r\nSecond, Client starts hydration with loading `<Dynamic />` component asynchronously.\r\n(In our real production, We used code splitting with webpack and loaded it with `import()`. In this example, I just controlled `loaded` state for making app simple.)\r\nDuring `<Dynamic />` is being loaded, App renders `null` instead.\r\n\r\nFinally, Let's see the result.\r\n\r\n<img width=\"345\" alt=\"screen shot 2018-04-29 at 1 43 47 am\" src=\"https://user-images.githubusercontent.com/38815423/39398838-f0960c84-4b4e-11e8-90f5-1b6c3a48bb08.png\">\r\n\r\nWhy `background-color` of `<Static />` component is changed to **blue**?\r\n\r\n<img width=\"581\" alt=\"screen shot 2018-04-29 at 1 47 50 am\" src=\"https://user-images.githubusercontent.com/38815423/39398898-ac9d4726-4b4f-11e8-84d4-3cb131d978f4.png\">\r\n\r\n`<Dynamic />` took `<Static />` for dinner.\r\n\r\nAFAIK, React don't touch the result of client rendering if it is different with server html.\r\nWhen I moved to another page through client-side routes I cannot find this situation.\r\n\r\nSo, I guess it occurs only when client hydrates the result of server-side rendering .\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nYou can check it easily with https://github.com/cheolheon/react-16-reconciliation-bug \r\nClone it, run `yarn`, `yarn start`, and open `http://localhost:3000`.\r\n\r\n**What is the expected behavior?**\r\n<img width=\"345\" alt=\"screen shot 2018-04-29 at 1 44 08 am\" src=\"https://user-images.githubusercontent.com/38815423/39398973-bd7690ba-4b50-11e8-88fa-523de54ce96e.png\">\r\n\r\n<img width=\"583\" alt=\"screen shot 2018-04-29 at 1 57 42 am\" src=\"https://user-images.githubusercontent.com/38815423/39398976-c334e678-4b50-11e8-9324-809b75f89329.png\">\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.3.2\r\nBrowser: Chrome (Safari too.)\r\nOS: MacOS (Windows or Linux too.)\r\n\r\nReact 15 works well without any bug.\r\nCheck it at https://github.com/cheolheon/react-16-reconciliation-bug/tree/react-15/src\r\n(`react-15` branch)",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
