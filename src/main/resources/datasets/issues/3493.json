{
  "url": "https://api.github.com/repos/facebook/react/issues/3493",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3493/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3493/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3493/events",
  "html_url": "https://github.com/facebook/react/issues/3493",
  "id": 63918370,
  "node_id": "MDU6SXNzdWU2MzkxODM3MA==",
  "number": 3493,
  "title": "Support asynchronous wrappers of Transaction?",
  "user": {
    "login": "snowmantw",
    "id": 129153,
    "node_id": "MDQ6VXNlcjEyOTE1Mw==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/129153?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/snowmantw",
    "html_url": "https://github.com/snowmantw",
    "followers_url": "https://api.github.com/users/snowmantw/followers",
    "following_url": "https://api.github.com/users/snowmantw/following{/other_user}",
    "gists_url": "https://api.github.com/users/snowmantw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/snowmantw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/snowmantw/subscriptions",
    "organizations_url": "https://api.github.com/users/snowmantw/orgs",
    "repos_url": "https://api.github.com/users/snowmantw/repos",
    "events_url": "https://api.github.com/users/snowmantw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/snowmantw/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2015-03-24T06:53:14Z",
  "updated_at": "2016-02-18T08:06:22Z",
  "closed_at": "2016-02-18T08:06:22Z",
  "author_association": "NONE",
  "body": "Hello I'm reading React.js and trying to extend it. One thing I've noticed is although wrappers of Transaction are guarantee to be executed pre- and post- the performing method, there seems no waiting mechanism for asynchronous wrapper functions. So if APIs are asynchronous, the `initialize` and `close` may fail to keep the order correctly, especially when the previous wrapper is still waiting the asynchronous result and the second one would start itself (from Transaction.js#L168 it looks like just a plain function call, there is no waiting code anywhere).\n\nFrom the current React.js there are no too much transaction instances, so the problem may be not serious. However, from the nature of Transaction it is a extendable and standalone component should not bind with DOM & existing use cases, so I think it should be general enough to deal with the possible cases (and from the design principle of new DOM APIs it is very possible).\n\n(Sorry if I fired a duplicated issue, but I've searched issues and found no similar cases. If it's duplicated please close it)\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
