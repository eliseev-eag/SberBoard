{
  "url": "https://api.github.com/repos/facebook/react/issues/2517",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2517/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2517/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2517/events",
  "html_url": "https://github.com/facebook/react/issues/2517",
  "id": 48659373,
  "node_id": "MDU6SXNzdWU0ODY1OTM3Mw==",
  "number": 2517,
  "title": "How to implement shouldComponentUpdate with this.context?",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 739777675,
      "node_id": "MDU6TGFiZWw3Mzk3Nzc2NzU=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Component%20API",
      "name": "Component: Component API",
      "color": "d4c5f9",
      "default": false
    },
    {
      "id": 40929151,
      "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
      "name": "Type: Bug",
      "color": "b60205",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 126,
  "created_at": "2014-11-13T16:42:38Z",
  "updated_at": "2018-05-08T02:14:45Z",
  "closed_at": "2018-01-25T12:19:53Z",
  "author_association": "MEMBER",
  "body": "I know `this.context` is not officially there but quite a few libraries rely on it, and it seems like it's getting into shape with #2509.\n\nI'm trying to understand how exactly `shouldComponentUpdate` is supposed to be implemented with `context` in mind. I noticed it accepts a third argument (`nextContext`) and I can extend `PureRenderMixin` to also check it:\n\n``` javascript\n  shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n    return !shallowEqual(this.props, nextProps) ||\n           !shallowEqual(this.state, nextState) ||\n           !shallowEqual(this.context, nextContext); // this will throw without context, read on\n  }\n```\n\nComponents that don't opt into `this.context` by not omitting `contextTypes` will not get this third argument, which is understandable.\n\nHowever this presents a problem when we have a `<Middle />` component in between between `<Top />` context owner and `<Bottom />` context consumer. If `<Middle />` implements a restrictive `shouldComponentUpdate`, there is no way for `<Bottom />` to react to `<Top />`'s context updates at all:\n\n(**[fiddle](http://jsbin.com/radakepusi/2/edit?js,output)**)\n\n``` javascript\nvar Bottom = React.createClass({\n  contextTypes: {\n    number: React.PropTypes.number.isRequired\n  },\n\n  render: function () {\n    return <h1>{this.context.number}</h1>\n  }\n});\n\nvar Middle = React.createClass({\n  shouldComponentUpdate: function (nextProps, nextState, nextContext) {\n    return false;\n  },\n\n  render: function () {\n    return <Bottom />;\n  }\n});\n\nvar Top = React.createClass({\n  childContextTypes: {\n    number: React.PropTypes.number.isRequired\n  },\n\n  getInitialState: function () {\n    return { number: 0 };\n  },\n\n  getChildContext: function () {\n    return { number: this.state.number };\n  },\n\n  componentDidMount: function () {\n    setInterval(function () {\n      this.setState({\n        number: this.state.number + 1\n      });\n    }.bind(this), 1000);\n  },\n\n  render: function() {\n    return <Middle />;    \n  }\n});\n\nReact.render(<Top />, document.body);\n```\n\nThe same problem would occur if I tried to give `Middle` a generic context-aware `shouldComponentUpdate` as I wrote above, because `Middle` has no `this.context` unless it opts in.\n\nThis is possible to work around by adding `contextTypes` to `Middle`, but it doesn't look like a good solution. You'd need to explicitly add necessary `contextTypes` on every level with smart `shouldComponentUpdate` so it's too easy to slip up.\n\nWill this be solved by #2112? Is there another solution in the meantime? What is the recommended way?\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
