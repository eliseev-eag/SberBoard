{
  "url": "https://api.github.com/repos/facebook/react/issues/15642",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15642/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15642/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15642/events",
  "html_url": "https://github.com/facebook/react/issues/15642",
  "id": 443710186,
  "node_id": "MDU6SXNzdWU0NDM3MTAxODY=",
  "number": 15642,
  "title": "Not issue, just an idea on state management",
  "user": {
    "login": "raymondsze",
    "id": 15674149,
    "node_id": "MDQ6VXNlcjE1Njc0MTQ5",
    "avatar_url": "https://avatars2.githubusercontent.com/u/15674149?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/raymondsze",
    "html_url": "https://github.com/raymondsze",
    "followers_url": "https://api.github.com/users/raymondsze/followers",
    "following_url": "https://api.github.com/users/raymondsze/following{/other_user}",
    "gists_url": "https://api.github.com/users/raymondsze/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/raymondsze/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/raymondsze/subscriptions",
    "organizations_url": "https://api.github.com/users/raymondsze/orgs",
    "repos_url": "https://api.github.com/users/raymondsze/repos",
    "events_url": "https://api.github.com/users/raymondsze/events{/privacy}",
    "received_events_url": "https://api.github.com/users/raymondsze/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-05-14T04:56:10Z",
  "updated_at": "2019-05-14T08:58:08Z",
  "closed_at": "2019-05-14T08:58:08Z",
  "author_association": "NONE",
  "body": "The feature of React Hooks is really awesome and I love it.\r\nWhen React Context API comes into play, the whole state management is very strict forward.\r\n\r\nI am trying \"Next.js\" and some ideas come to my head.\r\n\r\nThe Context API + Hooks combo must live in React Component lifecycle nowadays.\r\nSometimes, we may need simple state management living outside React.\r\n\r\nThe reason why I need it is I would like to manipulate the state in `getInitialProps` (Next.js specific) function.\r\nIf we need some state managements outside the React Component, we probably use Redux.\r\n\r\nHowever, Redux is usually too \"over-engineering\" for small to medium size project.\r\n\r\nI know the implementation of React Hooks is just a memoized linked-list, and it relies on global variables that React Component rendering binding to.\r\n\r\nJust a thought, how about if we could write a store like what React Hook did, it would make consistent api.\r\n\r\nFor example:\r\n```jsx\r\n// We have functional component, similarly we could have functional store\r\nfunction Counter(props) {\r\n   const [counter, setCounter] = useState(props.counter || 0);\r\n   return { counter, setCounter };\r\n}\r\n\r\nconst store = createStore(Counter, { counter: 0 }); // like Redux.createStore\r\n// store is an instance looks like redux store\r\n\r\n// store.getState() ==> { counter: 0, setCounter: [Function] }\r\n// getState() could be like what React.render did, so we could prepare and memoized the hooks value there, and call the functional store to get the return value, and clean-up.\r\n\r\n// store.subscribe(listener) ==> unsubscribe\r\n\r\n// Use the store\r\nconst App = ({ children }) => (\r\n  <Provider store={store}>\r\n     {children}\r\n  </Provider>\r\n);\r\n\r\n// Manipulate the store state in functional component\r\n// const { counter, setCounter } = useStore(store);\r\n// setCounter(1);\r\n\r\n// Manipulate the store state outside React\r\n// const { counter, setCounter } = store.getState();\r\n// setCounter(1);\r\n```\r\n\r\nThis is not React issue, but just an idea comes to my mind when using Next.js.",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
