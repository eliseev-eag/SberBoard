{
  "url": "https://api.github.com/repos/facebook/react/issues/8595",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8595/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8595/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8595/events",
  "html_url": "https://github.com/facebook/react/pull/8595",
  "id": 196248364,
  "node_id": "MDExOlB1bGxSZXF1ZXN0OTg0NTkwOTc=",
  "number": 8595,
  "title": "[Fiber][Not for commit] Proof-of-concept: Promise as element type",
  "user": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 23,
  "created_at": "2016-12-17T23:19:23Z",
  "updated_at": "2017-10-04T23:25:18Z",
  "closed_at": "2017-10-04T23:25:18Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/8595",
    "html_url": "https://github.com/facebook/react/pull/8595",
    "diff_url": "https://github.com/facebook/react/pull/8595.diff",
    "patch_url": "https://github.com/facebook/react/pull/8595.patch"
  },
  "body": "For fun, here's a proof-of-concept based on an idea by @sebmarkbage.\r\n\r\nIf a promise is passed to `React.createElement`, on initial mount, React waits for the promise to resolve to a React element type. Meanwhile, it bails out and continues rendering elsewhere. Once the promise resolves, React renders using the resolved element type. Subsequent renders are not deferred and behave just like a regular element.\r\n\r\nSuch a feature could be useful alongside dynamic [`import()`](https://github.com/tc39/proposal-dynamic-import) (currently stage 3):\r\n\r\n```js\r\n// Stage 3 import()\r\nconst MyComponent = import('MyComponent');\r\n// MyComponent is a promise that resolves to a normal React class/function\r\n\r\nfunction ParentComponent() {\r\n  // Use it with JSX like you normally would. It will render once the promise resolves.\r\n  return <MyComponent prop=\"whatever\" />;\r\n}\r\n```\r\n\r\n(Again, this is just an experiment and only implemented in Fiber. It may never see public release.)",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
