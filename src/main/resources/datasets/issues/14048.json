{
  "url": "https://api.github.com/repos/facebook/react/issues/14048",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14048/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14048/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14048/events",
  "html_url": "https://github.com/facebook/react/pull/14048",
  "id": 376113666,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NDA1MjE5",
  "number": 14048,
  "title": "[WIP] Add ESLint rule for useEffect/useCallback/useMemo Hook dependencies",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-10-31T18:56:10Z",
  "updated_at": "2018-11-01T16:25:40Z",
  "closed_at": "2018-11-01T16:25:40Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/14048",
    "html_url": "https://github.com/facebook/react/pull/14048",
    "diff_url": "https://github.com/facebook/react/pull/14048.diff",
    "patch_url": "https://github.com/facebook/react/pull/14048.patch"
  },
  "body": "This is just initial work from @calebmer. We didn't end up dogfooding this yet but @jamiebuilds expressed interest in picking it up. For some reason it doesn't pass tests â€” maybe there's some bug in the internal diff or maybe some dependency upgrade broke it. The semantics are also not set in stone and will probably need changes. Original description by @calebmer:\r\n\r\n----\r\n\r\nThis diff adds a lint to enforce reactive dependencies are provided in the second argument of `useEffect`/`useCallback`. This lint is currently really strict. There are a lot of valid patterns it doesn't support. Unlike many other lints you should really be disabling this one when you want to do something more interesting then what the strict rule supports.\r\n\r\nHere's what the lint does. The lint checks that identifiers and member expressions used in a \"reactive hook callback\" (lint internal name only) are declared in the reactive hook's dependency list.\r\n\r\n```\r\nfunction MyComponent(props) {\r\n  useEffect(() => {\r\n    console.log(props.foo);\r\n  }, [props.foo]);\r\n}\r\n```\r\n\r\nThe lint requires that the dependency list be an array literal (no `useEffect(() => {}, dependencies)`) and that the dependency list not have spreads (no `useEffect(() => {}, [...dependencies])`). Both of these are valid forms in some interesting cases, though, but they make static analysis harder.\r\n\r\nOne thought is that perhaps we could support spreading an array as satisfying a dependency. For example allow:\r\n\r\n```\r\nfunction MyComponent(props) {\r\n  useEffect(() => {\r\n    for (const item of props.array) {\r\n      console.log(item);\r\n    }\r\n  }, [...props.array]);\r\n}\r\n```\r\n\r\nBut I have not currently implemented this.\r\n\r\nSome other reasonable cases (IMO) this lint does not allow include:\r\n\r\n```\r\nfunction MyComponent(props) {\r\n  useEffect(() => {\r\n    console.log(props.foo);\r\n  }, [computeCacheKey(props.foo)]);\r\n}\r\n```\r\n\r\nand:\r\n\r\n```\r\nfunction MyComponent(props) {\r\n  useEffect(() => {\r\n    console.log(props.foo);\r\n  }, [props.foo.id]);\r\n}\r\n```\r\n\r\nBoth these forms allow you to be a bit more precise about the memoization breaking in `useEffect` and other reactive hooks.\r\n\r\nThis lint also warns about extra declarations in the dependency list:\r\n\r\n```\r\nfunction MyComponent(props) {\r\n  useEffect(() => {\r\n    console.log(props.foo);\r\n  }, [props.foo, props.bar]);\r\n}\r\n```\r\n\r\nAnd warns about duplicated declared dependencies:\r\n\r\n```\r\nfunction MyComponent(props) {\r\n  useEffect(() => {\r\n    console.log(props.foo);\r\n  }, [props.foo, props.foo]);\r\n}\r\n```\r\n\r\nLet me know if you think these constraints are reasonable. They might be good for 70-80% of cases and then after that there is always `// eslint-disable-line`.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
