{
  "url": "https://api.github.com/repos/facebook/react/issues/1705",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/1705/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/1705/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/1705/events",
  "html_url": "https://github.com/facebook/react/issues/1705",
  "id": 35886845,
  "node_id": "MDU6SXNzdWUzNTg4Njg0NQ==",
  "number": 1705,
  "title": "Ease stubbing component methods",
  "user": {
    "login": "n1k0",
    "id": 41547,
    "node_id": "MDQ6VXNlcjQxNTQ3",
    "avatar_url": "https://avatars1.githubusercontent.com/u/41547?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/n1k0",
    "html_url": "https://github.com/n1k0",
    "followers_url": "https://api.github.com/users/n1k0/followers",
    "following_url": "https://api.github.com/users/n1k0/following{/other_user}",
    "gists_url": "https://api.github.com/users/n1k0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/n1k0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/n1k0/subscriptions",
    "organizations_url": "https://api.github.com/users/n1k0/orgs",
    "repos_url": "https://api.github.com/users/n1k0/repos",
    "events_url": "https://api.github.com/users/n1k0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/n1k0/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2014-06-17T13:10:45Z",
  "updated_at": "2016-02-10T22:32:59Z",
  "closed_at": "2016-02-10T22:32:59Z",
  "author_association": "NONE",
  "body": "I'm working on a project where we're porting code to React, and we use [Sinon](http://sinonjs.org/) for mocks.\n\nI'm having hard times stubbing component spec methods so I could check that they're called appropriately in given certain context:\n\n``` js\nvar Comp = React.createClass({\n  displayName: \"Comp\",\n\n  plop: function() {\n    console.log(\"plop\");\n  },\n\n  render: function() {\n    this.plop();\n    return React.DOM.div(null, \"foo\");\n  }\n});\n\nvar stub = sinon.stub(Comp.type.prototype, \"plop\");\nReact.addons.TestUtils.renderIntoDocument(Comp());\n// sadly keeps printing \"plop\" onto the console… and so this fails\nsinon.assert.called(stub); // throws\n```\n1. is this expected or intended behavior? or is this a bug?\n2. do you have alternate suggestions to achieve this?\n\n**Note:** Directly stubbing the spec object method works, but then you have to export the component constructor and the spec separately so they're both available in tests… Also, you'd need to stub the spec before even creating the component class; not so convenient:\n\n``` js\nvar CompSpec = {\n  displayName: \"Comp\",\n\n  plop: function() {\n    console.log(\"plop\");\n  },\n\n  render: function() {\n    this.plop();\n    return React.DOM.div(\"foo\");\n  }\n};\n\nvar stub = sinon.stub(CompSpec, \"plop\");\nvar Comp = React.createClass(CompSpec);\nReact.addons.TestUtils.renderIntoDocument(Comp());\n\n// plop() is properly stubbed, so you can\nsinon.assert.called(stub); // pass\n```\n\nWhat would be great is to have the original spec object attached to the component, so it would ease stubbing part of it in a test env (obviously the attached spec should be the one used internally for this to work). Maybe that could even be a feature only available in __DEV__. \n\nThoughts?\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
