{
  "url": "https://api.github.com/repos/facebook/react/issues/13199",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13199/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13199/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13199/events",
  "html_url": "https://github.com/facebook/react/pull/13199",
  "id": 340685646,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxMDM4MTc2",
  "number": 13199,
  "title": "Proof of concept (for safeInContext hook RFC)",
  "user": {
    "login": "mikesamuel",
    "id": 368886,
    "node_id": "MDQ6VXNlcjM2ODg4Ng==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/368886?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mikesamuel",
    "html_url": "https://github.com/mikesamuel",
    "followers_url": "https://api.github.com/users/mikesamuel/followers",
    "following_url": "https://api.github.com/users/mikesamuel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mikesamuel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mikesamuel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mikesamuel/subscriptions",
    "organizations_url": "https://api.github.com/users/mikesamuel/orgs",
    "repos_url": "https://api.github.com/users/mikesamuel/repos",
    "events_url": "https://api.github.com/users/mikesamuel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mikesamuel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-07-12T15:22:09Z",
  "updated_at": "2018-08-07T19:10:21Z",
  "closed_at": null,
  "author_association": "NONE",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/13199",
    "html_url": "https://github.com/facebook/react/pull/13199",
    "diff_url": "https://github.com/facebook/react/pull/13199.diff",
    "patch_url": "https://github.com/facebook/react/pull/13199.patch"
  },
  "body": "This is a proof of concept for [RFC: safeInContext hooks](https://github.com/reactjs/rfcs/pull/55/files) that modifies *DOMPropertyOperations.js* to allow a hook to intercept values as they pass from user-space, over the IDL bridge, to browser builtins.\r\n\r\nIt looks for a callback at `ReactDOM.safeInContext` so running\r\n\r\n```jsx\r\nconst payload = 'javascript:alert(\"evil\")'\r\n\r\nReactDOM.render(<a href={payload}>...</a>, container)\r\n```\r\n\r\nwill effectively use the result of\r\n\r\n```js\r\nReactDOM.safeInContext(aElement, href, 'javascript:alert(\"evil\")')\r\n```\r\n\r\nif such exists allowing user libraries to mitigate XSS.\r\n\r\n-----\r\n\r\nThe author plans to provide a library that, loaded alongside ReactDOM,\r\nuses this hook point to whitelist URL protocols based on how they load\r\nwith type-safe overrides.  https://github.com/Polymer/polymer-resin\r\nis an example of such a hook that works in production and interoperates\r\nwith custom elements.\r\n\r\n-----\r\n\r\nThe contract for `ReactDOM.safeInContext` is:\r\n\r\n```jsx\r\n/**\r\n * Called before React uses a value in a non-DOM-structure altering way.\r\n *\r\n * This function should not manipulate the DOM or have side effects visible\r\n * outside the scope of its call except where necessary to log policy violations.\r\n *\r\n * It is the implementor's responsibility to ensure that repeated calls in\r\n * a tight loop do not deny service, including bounding memory and network\r\n * usage for frequent policy violations.\r\n *\r\n * @param node A node such in the scope of `window.customElements`.\r\n *    I.e. any implicit adoption ( https://www.w3.org/TR/dom/#dom-core ) should\r\n *    happen before calling this function.\r\n * @param attributeOrPropertyName The name of the HTML attribute or JS property.\r\n *    Null iff value specifies textContent/nodeValue for a character data node.\r\n *    If value specifies, for example, the text content of a text node under a\r\n *    `<script>` element then node.parentNode should reach that script.\r\n * @param value the value before any coercion to DOMString so that safeInContext\r\n *    may treat values as privileged based on their runtime type.\r\n *\r\n * @return value or a suitable alternative.  Should not throw.\r\n */\r\nfunction safeInContext(node : Node, attributeOrPropertyName : string, value : any) : any\r\n```\r\n\r\n-----\r\n\r\nIf we wished to allow a `rootContainerElement` to specify its own\r\n`isSafeInContext` per then I'd need to push it farther down in the\r\nstack or thread the root through to `updateDOMProperties`.\r\n\r\nFor reference, the relevant machinery seems to be:\r\n\r\n<details>\r\n  <summary>stack of calls involved in {setInitial,update}DOMProperties</summary>\r\n\r\nDuring initial tree construction\r\n\r\n| Depth | File | Function | Receives `rootContainerElement` |\r\n| ----- | ---- | -------- | ------------------------------- |\r\n| 0     | DOMPropertyOperations.js | `setValueForProperty` | No |\r\n| 1     | ReactDOMFiberComponent.js | `setInitialDOMProperties` | Yes |\r\n| 2     | ReactDOMFiberComponent.js | `setInitialProperties` | Yes |\r\n| 3     | ReactDOMHostConfig.js     | `finalizeInitialChildren` | Yes\r\n\r\nDuring incremental updates\r\n\r\n| Depth | File | Function | Receives `rootContainerElement` |\r\n| ----- | ---- | -------- | ------------------------------- |\r\n| 0     | DOMPropertyOperations.js | `setValueForProperty` | No |\r\n| 1     | ReactDOMFiberComponent.js | `updateDOMProperties` | No |\r\n| 2     | ReactDOMFiberComponent.js | `updateProperties` | No |\r\n| 3     | ReactDOMHostConfig.js     | `prepareUpdate` | Yes |\r\n\r\nper\r\n\r\n```\r\nat Object.setValueForProperty (packages/react-dom/src/client/DOMPropertyOperations.js:146:202)\r\nat setInitialDOMProperties (packages/react-dom/src/client/ReactDOMFiberComponent.js:1242:308)\r\nat setInitialProperties (packages/react-dom/src/client/ReactDOMFiberComponent.js:1263:145)\r\nat finalizeInitialChildren (packages/react-dom/src/client/ReactDOMHostConfig.js:587:831)\r\nat completeWork (packages/react-reconciler/src/ReactFiberCompleteWork.js:430:63)\r\n```\r\n\r\n</details>\r\n\r\n[design]: https://gist.github.com/mikesamuel/094d3fe4b1b2f702f543fa0c263ca8ff\r\n\r\n",
  "closed_by": null
}
