{
  "url": "https://api.github.com/repos/facebook/react/issues/15160",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15160/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15160/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15160/events",
  "html_url": "https://github.com/facebook/react/issues/15160",
  "id": 423091922,
  "node_id": "MDU6SXNzdWU0MjMwOTE5MjI=",
  "number": 15160,
  "title": "[useContext] Throw error if 'useContext' is used outside function components",
  "user": {
    "login": "palerdot",
    "id": 4299398,
    "node_id": "MDQ6VXNlcjQyOTkzOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/4299398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palerdot",
    "html_url": "https://github.com/palerdot",
    "followers_url": "https://api.github.com/users/palerdot/followers",
    "following_url": "https://api.github.com/users/palerdot/following{/other_user}",
    "gists_url": "https://api.github.com/users/palerdot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palerdot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palerdot/subscriptions",
    "organizations_url": "https://api.github.com/users/palerdot/orgs",
    "repos_url": "https://api.github.com/users/palerdot/repos",
    "events_url": "https://api.github.com/users/palerdot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palerdot/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    },
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-03-20T06:42:44Z",
  "updated_at": "2019-03-21T05:21:42Z",
  "closed_at": "2019-03-21T05:21:42Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nFeature (need better errors)\r\n\r\n**What is the current behavior?**\r\nConsider the following functional component\r\n```\r\nimport React, { useContext } from \"React\"\r\n\r\nconst myFunctionComponent = props => <div>Hello useContext</div>\r\n```\r\n\r\nThe immediate reaction for most of us (newbies to hooks) to refactor the above code to accomodate `useContext` is as follows\r\n\r\n```\r\nimport React, { useContext } from \"React\"\r\nimport MyContext from \"./MyContext\"\r\n\r\n// React does not throw error\r\nconst { myContextValue } = useContext(MyContext)\r\n\r\nconst myFunctionComponent = props => <div>Hello useContext - {myContextValue}</div>\r\n```\r\n\r\nThe way to actually refactor is to explictly convert the arrow function return expression into a function body and then accomodate `useContext` inside along with a return statement, like this\r\n\r\n```\r\nimport React, { useContext } from \"React\"\r\nimport MyContext from \"./MyContext\"\r\n\r\nconst myFunctionComponent = props => {\r\n const { myContextValue } = useContext(MyContext)\r\n return (<div>Hello useContext - {myContextValue}</div>)\r\n}\r\n```\r\n\r\nNot only, react **does not throw error**, React app actually compiles, while the component in question fails to load with no information. This is very difficult to pin the reason to this specific issue.\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nReact should ideally throw some kind of error, when `useContext` is used outside of function components. This lack of error really bites us for people who are refactoring function components without a return statement.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact `16.8.x` with hooks support\r\n",
  "closed_by": {
    "login": "palerdot",
    "id": 4299398,
    "node_id": "MDQ6VXNlcjQyOTkzOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/4299398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palerdot",
    "html_url": "https://github.com/palerdot",
    "followers_url": "https://api.github.com/users/palerdot/followers",
    "following_url": "https://api.github.com/users/palerdot/following{/other_user}",
    "gists_url": "https://api.github.com/users/palerdot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palerdot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palerdot/subscriptions",
    "organizations_url": "https://api.github.com/users/palerdot/orgs",
    "repos_url": "https://api.github.com/users/palerdot/repos",
    "events_url": "https://api.github.com/users/palerdot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palerdot/received_events",
    "type": "User",
    "site_admin": false
  }
}
