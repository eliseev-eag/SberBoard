{
  "url": "https://api.github.com/repos/facebook/react/issues/15047",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15047/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15047/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15047/events",
  "html_url": "https://github.com/facebook/react/pull/15047",
  "id": 418111620,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4OTU5OTE3",
  "number": 15047,
  "title": "Warn for javascript: URLs in DOM sinks",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2019-03-07T03:25:14Z",
  "updated_at": "2019-08-16T01:49:12Z",
  "closed_at": "2019-03-11T23:39:50Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/15047",
    "html_url": "https://github.com/facebook/react/pull/15047",
    "diff_url": "https://github.com/facebook/react/pull/15047.diff",
    "patch_url": "https://github.com/facebook/react/pull/15047.patch"
  },
  "body": "## Motivation\r\n\r\nURLs is a common attack surface. If an attack can get a user provided URL into one of the DOM sinks it is essentially game over. Even partials of URLs can be bad.\r\n\r\n`javascript:` links execute arbitrary code in the context of the page. URLs in image srcs can be used to track or even exfiltrate some data. URLs in script tags can execute arbitrary URLs. Links to mobile apps can cause problems.\r\n\r\nThere is no way we can cover all cases because there are many intentional use cases that overlap with unintentional ones. We intend to support [Trusted Types](https://github.com/WICG/trusted-types) objects passed to sinks like `<a href=...>` etc. which allows safe URLs to be distinguished from unsafe ones. The right approach here is a whitelist instead of a blacklist. However, opting in to Trusted Types is kind of non-trivial so we'd expect it to take a while for most sites.\r\n\r\nIn the meantime there is one XSS hole that is particularly common to forget about. This could be a `javascript:` URL.\r\n\r\n```js\r\n<a href={url}>...</a>\r\n```\r\n\r\nJavaScript URLs are particularly bad because it gains full control over the page where as other vulnerabilities relies on other things going wrong (such as native apps) or has limited access.\r\n\r\nJavaScript URLs is also not really a legit use case once you're on the client in React since you can just attach event listeners and preventDefault instead.\r\n\r\nOnce you upgrade to [Trusted Types](https://github.com/WICG/trusted-types) or [CSP](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP), the first thing you'll do is probably add a filter that blocks JavaScript URLs anyway.\r\n\r\nOne thing React can do to help with this problem in the meantime is to forbid `javascript:` URLs when rendered by React - by default.\r\n\r\n## Breaking Change\r\n\r\nUnfortunately, this would be a breaking change. This PR introduces a DEV mode deprecation warning which will last for the remainder of React 16.x. This doesn't actually provide any safety but it lets people clean up all their existing use cases.\r\n\r\nBehind a flag, we also enable actually enforcing this block in production mode at runtime, which we'll turn on for a future React major.\r\n\r\n## Coverage\r\n\r\nThis PR adds a flag to the property info for a few property names. We only block javascript URLs in native DOM, not in Custom Elements. We block this on the property name basis but the intention is to cover these cases which are confirmed to execute JavaScript URLs:\r\n\r\nHTML\r\n\r\n```js\r\n<a href />\r\n<form action />\r\n<iframe src />\r\n<area href />\r\n<button formaction />\r\n<input formaction />\r\n<frame src />\r\n```\r\n\r\nSVG\r\n```js\r\n<a xlinkHref />\r\n<a href />\r\n```\r\n\r\nThe `<script src />` case is inherently broken since it executes script anyway.\r\n\r\nWe don't validate `<script text />`, `ref.innerHTML` and `<iframe srcdoc />` but they're more known to be dangerous. The future solution for those is to let pass-through Trusted Types to these values and use the policy to control them.\r\n\r\nMy understanding is that we don't need to cover these because they already don't execute `javascript:` URLs:\r\n\r\n```js\r\n<link href />\r\n<img src />\r\n<input type=\"image\" src />\r\n<source src />\r\n<track src />\r\n<media src />\r\n<embed src />\r\n<img srcset />\r\n<object data />\r\n<object codebase />\r\n<meta http-equiv=\"refresh\" content=\"0;URL='...'\" />\r\n```\r\n\r\nThey can be other vulnerabilities though so in the future we'll also allow them to accept Trusted Types.\r\n\r\n__EDIT:__ `<base href />` is vulnerable to:\r\n\r\n```\r\n<base href=\"javascript:alert(1)//\">\r\n<a href=\"#\">click</a>\r\n```\r\n\r\n## PR\r\n\r\nFor code reviewers: The first two commits just enables us to write tests against `frameset`.\r\n\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  }
}
