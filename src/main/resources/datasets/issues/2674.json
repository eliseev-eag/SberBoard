{
  "url": "https://api.github.com/repos/facebook/react/issues/2674",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2674/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2674/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2674/events",
  "html_url": "https://github.com/facebook/react/issues/2674",
  "id": 51303136,
  "node_id": "MDU6SXNzdWU1MTMwMzEzNg==",
  "number": 2674,
  "title": "Should renderToString call life cycle methods?",
  "user": {
    "login": "ottis",
    "id": 966901,
    "node_id": "MDQ6VXNlcjk2NjkwMQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/966901?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ottis",
    "html_url": "https://github.com/ottis",
    "followers_url": "https://api.github.com/users/ottis/followers",
    "following_url": "https://api.github.com/users/ottis/following{/other_user}",
    "gists_url": "https://api.github.com/users/ottis/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ottis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ottis/subscriptions",
    "organizations_url": "https://api.github.com/users/ottis/orgs",
    "repos_url": "https://api.github.com/users/ottis/repos",
    "events_url": "https://api.github.com/users/ottis/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ottis/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2014-12-08T13:45:23Z",
  "updated_at": "2014-12-09T10:06:48Z",
  "closed_at": "2014-12-08T20:42:33Z",
  "author_association": "NONE",
  "body": "Came across this whilst investigating another unrelated issue (page requesting route twice). When we call renderToString on the server, React will try and call:\n\n```\nvar markup = componentInstance.mountComponent(id, transaction, emptyObject);\nreturn ReactMarkupChecksum.addChecksumToMarkup(markup);\n```\n\nCalling mountComponent in turn triggers the life cycle method componentWillMount, which seems odd to me as it essentially isn't being mounted, it's only utilizing this method (as far as I can see) to generate the markup thus has a broken life cycle. \n\n```\nreturn ReactMarkupChecksum.addChecksumToMarkup(markup);\n```\n\nNot having a symmetrical life cycle can lead to odd issues with lingering objects e.g. when component listens for events outside it's own life cycle in componentWillMount and does not get a proper componentWillUnmount call, it does not get a chance to clean up it's references.\n\nThe main question is should the renderToString method invoke life cycle methods at all, as they'll never have a complete cycle? I understand we could just move bindings to componentDidMount but it still seems wrong to me to have an asymmetric life cycle. Perhaps we could block the call to componentWillMount by including\n\n```\nif (inst.componentWillMount && typeof window !== 'undefined') {\n```\n\nso it doesn't run when called server side?\n\nJust some thoughts anyway :) really enjoying React!\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
