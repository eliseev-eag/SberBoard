{
  "url": "https://api.github.com/repos/facebook/react/issues/14569",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14569/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14569/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14569/events",
  "html_url": "https://github.com/facebook/react/pull/14569",
  "id": 398106660,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjQzODkzNTcy",
  "number": 14569,
  "title": "Allow useReducer to bail out of rendering by returning previous state",
  "user": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2019-01-11T02:40:47Z",
  "updated_at": "2019-01-30T09:40:08Z",
  "closed_at": "2019-01-17T01:23:35Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/14569",
    "html_url": "https://github.com/facebook/react/pull/14569",
    "diff_url": "https://github.com/facebook/react/pull/14569.diff",
    "patch_url": "https://github.com/facebook/react/pull/14569.patch"
  },
  "body": "This is conceptually similar to `shouldComponentUpdate`, except because there could be multiple `useReducer` (or `useState`) Hooks in a single component, we can only bail out if none of the Hooks produce a new value. We also can't bail out if any the other types of inputs — props and context — have changed.\r\n\r\nThese optimizations rely on the constraint that components are pure functions of props, state, and context.\r\n\r\nIn some cases, we can bail out without entering the render phase by eagerly computing the next state and comparing it to the current one. This only works if we are absolutely certain that the queue is empty at the time of the update. In concurrent mode, this is difficult to determine, because there could be multiple copies of the queue and we don't know which one is current without doing lots of extra work, which would defeat the purpose of the optimization. However, in our implementation, there are at most only two copies of the queue, and if *both* are empty then we know that the current queue must be.\r\n\r\n\r\nSummary of changes:\r\n- We use the `PerformedWork` effect tag bit to track whether a component's props, state, or context has changed. This means we need to mark it dirty every time we detect that one of those inputs has a new value. Props and state are fairly straightforward, but context is tricky. I needed to store something on the fiber that represents whether it contains a pending context update. I didn't want to add an additional fiber field, because most fibers do not read from context. So I changed the existing `firstContextDependency` field to `contextDependencies`. Instead of pointing to the first item in the list, it points to a list object contains both `first` and `expirationTime`.\r\n- If a component bails out, we can remove the update priority flag from the current fiber. Normally we only mutate the current tree in the commit phase, never in the render phase. In this case it's ok to do because the update priority field only affects whether React needs to visit that fiber. If we receive new props, state, or context, then the fiber will be visited again anyway.",
  "closed_by": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  }
}
