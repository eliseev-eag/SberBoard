{
  "url": "https://api.github.com/repos/facebook/react/issues/8812",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8812/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8812/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8812/events",
  "html_url": "https://github.com/facebook/react/issues/8812",
  "id": 201265031,
  "node_id": "MDU6SXNzdWUyMDEyNjUwMzE=",
  "number": 8812,
  "title": "ReactDOM.render fails if react-dom was loaded before a DOM was available",
  "user": {
    "login": "ronami",
    "id": 5484230,
    "node_id": "MDQ6VXNlcjU0ODQyMzA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/5484230?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ronami",
    "html_url": "https://github.com/ronami",
    "followers_url": "https://api.github.com/users/ronami/followers",
    "following_url": "https://api.github.com/users/ronami/following{/other_user}",
    "gists_url": "https://api.github.com/users/ronami/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ronami/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ronami/subscriptions",
    "organizations_url": "https://api.github.com/users/ronami/orgs",
    "repos_url": "https://api.github.com/users/ronami/repos",
    "events_url": "https://api.github.com/users/ronami/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ronami/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-01-17T12:25:38Z",
  "updated_at": "2017-10-04T16:26:14Z",
  "closed_at": "2017-10-04T16:26:14Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nReport a *bug*\r\n\r\n**What is the current behavior?**\r\n\r\nReactDOM.render fails if there was no global document when it was first loaded.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar (template: https://jsfiddle.net/reactjs/69z2wepo/).**\r\n\r\nI'm not providing a jsfiddle example because the use case happens with Node.js and JSDom. Here's how to reproduce:\r\n\r\nDefine a component that has a state, and have it's render function render null for one of the cases (This happens pretty frequently using HOCs such as 3rd party translation tools, etc):\r\n```js\r\nclass MyComponent extends React.Component {\r\n  state = {\r\n    display: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({display: true});\r\n  }\r\n\r\n  render() {\r\n    return this.state.display ? <div/> : null;\r\n  }\r\n}\r\n```\r\n\r\nDefine a test, load jsdom global before every test and cleanup after you're done:\r\n```js\r\nconst ReactDOM = require('react-dom');\r\n\r\ndescribe('App', () => {\r\n  let cleanup;\r\n\r\n  beforeEach(() => cleanup = require('jsdom-global')());\r\n  afterEach(() => cleanup());\r\n\r\n  it('', () => {\r\n    ReactDOM.render(\r\n      <MyComponent/>,\r\n      document.body\r\n    );\r\n  });\r\n});\r\n```\r\n\r\nThis would fail with the following error: `Invariant Violation: dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure 'window' and 'document' are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.`.\r\n\r\nIf you require react-dom after a dom was defined globally, the test will pass. Also, returning anything other than null (any React element) will make the test pass.\r\n\r\nIt looks like react-dom is using https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/ExecutionEnvironment.js#L14 to get if a DOM is available when it was first loaded and doesn't look again when ReactDOM.render() is called.\r\n\r\nIf any of this makes sense, I will be happy to give a PR to fix it, if you can throw me in the right direction.\r\n\r\n**What is the expected behavior?**\r\n\r\nReactDOM.render should render correctly even if a global document was added after it was loaded, as it works for such a component that doesn't return null for a certain state.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nTested with latest React and Node.js +7.0.0.\r\n\r\nThanks!\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
