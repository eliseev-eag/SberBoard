{
  "url": "https://api.github.com/repos/facebook/react/issues/15900",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15900/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15900/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15900/events",
  "html_url": "https://github.com/facebook/react/issues/15900",
  "id": 456634877,
  "node_id": "MDU6SXNzdWU0NTY2MzQ4Nzc=",
  "number": 15900,
  "title": "Suspense + Concurrent Mode immediately shows fallback when updated from onChange",
  "user": {
    "login": "antimatter15",
    "id": 30054,
    "node_id": "MDQ6VXNlcjMwMDU0",
    "avatar_url": "https://avatars0.githubusercontent.com/u/30054?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/antimatter15",
    "html_url": "https://github.com/antimatter15",
    "followers_url": "https://api.github.com/users/antimatter15/followers",
    "following_url": "https://api.github.com/users/antimatter15/following{/other_user}",
    "gists_url": "https://api.github.com/users/antimatter15/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/antimatter15/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/antimatter15/subscriptions",
    "organizations_url": "https://api.github.com/users/antimatter15/orgs",
    "repos_url": "https://api.github.com/users/antimatter15/repos",
    "events_url": "https://api.github.com/users/antimatter15/events{/privacy}",
    "received_events_url": "https://api.github.com/users/antimatter15/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-06-16T12:13:30Z",
  "updated_at": "2019-06-16T21:32:56Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nReporting a bug, or at least trying to understand some spooky behavior ðŸ‘»\r\n\r\n**What is the current behavior?**\r\n\r\nI have a simple component which reads from a toy suspense-enabled cache. The dummy cache simply waits 100ms before responding to anything.  The cache key is based on some component state (managed with the useState hook). This component is wrapped with `<Suspense>` and rendered in a React root with concurrent mode enabled. \r\n\r\n```javascript\r\nfunction MyApp(){\r\n    let [text, setText] = React.useState('stuff')\r\n    return <div>\r\n        Data: {readCacheSuspense(text)}\r\n        <button onClick={e => setText('B-A-N-A-N-A-S')}>Update text from button</button>\r\n        <input type=\"text\" value={text} onChange={e => setText(e.target.value)} />\r\n    </div>\r\n}\r\n\r\nReactDOM.unstable_createRoot(document.getElementById('root')).render(<React.Suspense fallback={<div>cause i ain't no fall-a-back div</div>}>\r\n    <MyApp />\r\n</React.Suspense>)\r\n```\r\n\r\nThe component has a text field whose value is set to the current cache key (with an onChange handler that updates the useState hook when the text changes). It also has a button which updates the state to some fixed string \"asdf\" when clicked. \r\n\r\nClicking the button does what I would expectâ€” the page doesn't respond for a fraction of a second (while the data is being \"fetched\") and then updates with a view of the loaded data. \r\n\r\n**Editing the text however (for instance, typing a single letter in the field) immediately causes the fallback UI to load and unfocuses the text input**. This happens even if the `setTimeout` is changed to 0ms, or `requestAnimationFrame`, or a `setImmediate` polyfill. \r\n\r\nRather than directly calling `setText` within the `onChange` handlerâ€”Â if I call it within a `setTimeout(..., 0)`, it behaves the way I would expect (i.e. without unfocusing the field and loading fallback). \r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**\r\n\r\nhttps://codesandbox.io/s/competent-goldwasser-yhmxo\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect that it shouldn't really matter whether I'm updating state from an `onChange` versus an `onClick`. \r\n\r\nI would expect that the fallback UI doesn't show up until its max duration is met.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nI'm using React 16.8.6. I tested it on Chrome 75 on macOS 10.14.",
  "closed_by": null
}
