{
  "url": "https://api.github.com/repos/facebook/react/issues/11687",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/11687/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/11687/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/11687/events",
  "html_url": "https://github.com/facebook/react/issues/11687",
  "id": 277528576,
  "node_id": "MDU6SXNzdWUyNzc1Mjg1NzY=",
  "number": 11687,
  "title": "react-dom: Ability to access window.event in development",
  "user": {
    "login": "ConradIrwin",
    "id": 94272,
    "node_id": "MDQ6VXNlcjk0Mjcy",
    "avatar_url": "https://avatars2.githubusercontent.com/u/94272?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ConradIrwin",
    "html_url": "https://github.com/ConradIrwin",
    "followers_url": "https://api.github.com/users/ConradIrwin/followers",
    "following_url": "https://api.github.com/users/ConradIrwin/following{/other_user}",
    "gists_url": "https://api.github.com/users/ConradIrwin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ConradIrwin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ConradIrwin/subscriptions",
    "organizations_url": "https://api.github.com/users/ConradIrwin/orgs",
    "repos_url": "https://api.github.com/users/ConradIrwin/repos",
    "events_url": "https://api.github.com/users/ConradIrwin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ConradIrwin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 127893911,
      "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
      "name": "Component: DOM",
      "color": "fef2c0",
      "default": false
    },
    {
      "id": 40929151,
      "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
      "name": "Type: Bug",
      "color": "b60205",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2017-11-28T20:33:31Z",
  "updated_at": "2018-08-14T20:35:31Z",
  "closed_at": "2018-08-14T20:35:31Z",
  "author_association": "CONTRIBUTOR",
  "body": "Imported from https://github.com/facebook/react/issues/10474#issuecomment-345331144 at request of @gaearon \r\n\r\n**Do you want to request a *feature* or report a *bug*?** Bug\r\n\r\n**What is the current behavior?**\r\n\r\nIn development mode React uses `invokeGuardedCallback` to be able to catch errors without interrupting the normal \"break on uncaught exceptions\" feature of devtools.\r\n\r\nIn the current implementation of `invokeGuardedCallback` an event is created and dispatched, which allows for error handling without a `try{ } catch` block.\r\n\r\nUnfortunately it has the side effect of overriding `window.event`, and so you are unable to access `window.event` within guarded callbacks when running React in development mode. In production mode it works fine.\r\n\r\nWe would like to access window.event at Superhuman to be able to detect where DOM focus is from the user's point of view. Usually this is document.activeElement, but in a few cases (like during a blur event, or when clicking between two iframes) the focus will end up in a different place.\r\n\r\nThis works fine in production, and we currently work around this in development mode by overriding `ReactDOM.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactDOMEventListener.handleTopLevel` and maintiaining a reference to the event. In production mode we just use window.event.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar (template for React 16: https://jsfiddle.net/Luktwrdm/, template for React 15: https://jsfiddle.net/hmbg7e9w/).**\r\n\r\nin development: https://jsfiddle.net/n782L2qg/, in production: https://jsfiddle.net/kqt2o7pr/. In both cases I would expect the alert to say `window.event.type: click`, but in development it says `window.event.type: react-invokeguardedcallback`\r\n\r\n**What is the expected behavior?**\r\n\r\nI would like a way to access window.event in development. I'm happy for this to be somewhat obscure, but ideally I would not have to use the secret internals to make this work.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?** Development 0.15 and 0.16 at least. probably before.\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
