{
  "url": "https://api.github.com/repos/facebook/react/issues/7221",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7221/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7221/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7221/events",
  "html_url": "https://github.com/facebook/react/issues/7221",
  "id": 164421758,
  "node_id": "MDU6SXNzdWUxNjQ0MjE3NTg=",
  "number": 7221,
  "title": "Consider exposing an opaque component path somehow",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 270986513,
      "node_id": "MDU6TGFiZWwyNzA5ODY1MTM=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Big%20Picture",
      "name": "Type: Big Picture",
      "color": "61dafb",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2016-07-07T22:29:20Z",
  "updated_at": "2017-10-04T00:56:44Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "body": "This is something I've thought about in regard to focus, hover and selection.\n\nIf you implement hover as a top level state value with the currently hovered root component as `hoverID: component` and currently focused component as `focusID: component`.\n\nNow anything in between gets rerendered and can respond to those things changing. However, that also means that everything gets rerendered. Not just the previous and next path.\n\nThe ideal would be that you store the path to that component, or extract the path from internal state.\n\nThat way we can quickly rerender only the previous and next path, while still letting anything in between react to focus/hover changing.\n\nMaybe this is more generally useful.\n\nSelection is a bit special because it might need to rerender anything in between two paths but that can also be optimized similarly - by checking if any child node corresponds to a start and end path and anything between is selected or unselected.\n",
  "closed_by": null
}
