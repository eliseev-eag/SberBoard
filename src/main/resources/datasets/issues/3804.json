{
  "url": "https://api.github.com/repos/facebook/react/issues/3804",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3804/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3804/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3804/events",
  "html_url": "https://github.com/facebook/react/issues/3804",
  "id": 72729649,
  "node_id": "MDU6SXNzdWU3MjcyOTY0OQ==",
  "number": 3804,
  "title": "A new hook for update animations",
  "user": {
    "login": "ameyms",
    "id": 776678,
    "node_id": "MDQ6VXNlcjc3NjY3OA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/776678?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ameyms",
    "html_url": "https://github.com/ameyms",
    "followers_url": "https://api.github.com/users/ameyms/followers",
    "following_url": "https://api.github.com/users/ameyms/following{/other_user}",
    "gists_url": "https://api.github.com/users/ameyms/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ameyms/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ameyms/subscriptions",
    "organizations_url": "https://api.github.com/users/ameyms/orgs",
    "repos_url": "https://api.github.com/users/ameyms/repos",
    "events_url": "https://api.github.com/users/ameyms/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ameyms/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2015-05-03T01:35:25Z",
  "updated_at": "2015-05-29T18:46:10Z",
  "closed_at": "2015-05-29T18:46:10Z",
  "author_association": "NONE",
  "body": "## Problem\n\nFor SVG elements that need animation, a 'hook' is needed to tween the element from one configuration to another before React steps in and updates the DOM (and thereby prevents the animation).\n## My current work-around\n\nFor SVG components that need animation, I have to write `render` method that always returns the same 'dummy' DOM so that React doesn't find any diffs and I can handle all DOM updates myself inside the `componentDidUpdate`. IMO, this results in a very non-idiomatic ReactJS code because the `render` method does not have a true representation of what the SVG element will look like after applying state and props. \nSee [this example](https://github.com/ameyms/diffract/blob/master/src/BarGraph.jsx#L75-L93).\n## Possible Solution\n\nIt would be helpful if components inside transition groups had a `componentWillTween(callback)` method similar to `componentWillEnter` etc.\n\nThis would be invoked after `componentWillUpdate` but before `componentDidUpdate` for components added to an existing `TransitionGroup`. It would block updates from being flushed to DOM until the **`callback`** is called. It would **not** be called on the initial render of a TransitionGroup.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
