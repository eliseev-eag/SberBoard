{
  "url": "https://api.github.com/repos/facebook/react/issues/14530",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14530/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14530/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14530/events",
  "html_url": "https://github.com/facebook/react/issues/14530",
  "id": 395976504,
  "node_id": "MDU6SXNzdWUzOTU5NzY1MDQ=",
  "number": 14530,
  "title": "v16.6.0 or higher Context API not working when child is used in component that provides the context",
  "user": {
    "login": "Flaneder",
    "id": 13695230,
    "node_id": "MDQ6VXNlcjEzNjk1MjMw",
    "avatar_url": "https://avatars1.githubusercontent.com/u/13695230?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Flaneder",
    "html_url": "https://github.com/Flaneder",
    "followers_url": "https://api.github.com/users/Flaneder/followers",
    "following_url": "https://api.github.com/users/Flaneder/following{/other_user}",
    "gists_url": "https://api.github.com/users/Flaneder/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Flaneder/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Flaneder/subscriptions",
    "organizations_url": "https://api.github.com/users/Flaneder/orgs",
    "repos_url": "https://api.github.com/users/Flaneder/repos",
    "events_url": "https://api.github.com/users/Flaneder/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Flaneder/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-01-04T16:00:24Z",
  "updated_at": "2019-01-06T10:08:55Z",
  "closed_at": "2019-01-06T10:08:55Z",
  "author_association": "NONE",
  "body": "I'm using the new context API of react (v16.6.0 or higher) by declaring the `public static contextType` inside the component that consumes the context.\r\nThis is working fine as long as the component that declares the `Provider` does not directly use a component that consumes the context in it's `render()` method.\r\n\r\n**Example:**\r\n\r\n**ParentWithContext**\r\n\r\nThis is the component that creates and provides the context.\r\n\r\n    export const SomeContext = React.createContext({\r\n      someValue: false\r\n    });\r\n    \r\n    export default class ParentWithContext extends Component {\r\n      public render(){\r\n        const contextValue = {someValue: true};\r\n        return (\r\n          <SomeContext.Provider value={contextValue}>\r\n            <ChildOne />\r\n            {this.props.children}\r\n          </SomeContext.Provider>\r\n        );\r\n      }\r\n    }\r\n\r\nNotice that this component uses `ChildOne` component (s. right below) in it's `render()` method.\r\n\r\n**ChildOne** and **ChildTwo**\r\n\r\nThese two components simply consume the above context and display it.\r\n\r\n    export default class ChildOne extends Component {\r\n      public static contextType = SomeContext;\r\n      public render(){\r\n        return (\r\n          <div>\r\n            {`Context of ChildOne: ${this.context.someValue}`}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    export default class ChildTwo extends Component {\r\n      public static contextType = SomeContext;\r\n      public render(){\r\n        return (\r\n          <div>\r\n            {`Context of ChildTwo: ${this.context.someValue}`}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n**index.tsx**\r\n\r\n    class App extends Component {\r\n    \r\n      render() {\r\n        return (\r\n          <ParentWithContext>\r\n            <ChildTwo />\r\n            <ChildOne />\r\n          </ParentWithContext>\r\n        );\r\n      }\r\n    }\r\n\r\nRunning this example will produce following lines:\r\n\r\n    Context of ChildOne: undefined\r\n    Context of ChildTwo: true\r\n    Context of ChildOne: undefined\r\n\r\nSo `ChildTwo` seems to receive the correct information from `this.context`, while `ChildOne` receives nothing.\r\n\r\nNow comes the weird part (to me): When you remove the `<ChildOne/>` from `ParentWithContext` it suddenly works for both `ChildOne` and `ChildTwo`\r\n\r\n**New ParentWithContext**\r\n\r\n    export default class ParentWithContext extends Component {\r\n      public render(){\r\n        const contextValue = {someValue: true};\r\n        return (\r\n          <SomeContext.Provider value={contextValue}>\r\n            {this.props.children}\r\n          </SomeContext.Provider>\r\n        );\r\n      }\r\n    }\r\n\r\n**New HTML output**\r\n\r\n    Context of ChildTwo: true\r\n    Context of ChildOne: true\r\n\r\n[Running Code][1]\r\n\r\n**Question**\r\n\r\nWhy is the context API (>=v16.6) not working (using `static contextType`) when the `Provider` component directly uses a child component that consumes the context in it's `render()` function? Is this a bug or a known limitation? Did I miss something? \r\n\r\n**Additonal information**\r\n\r\nUsing `<SomeContext.Consumer>` will work as expected.\r\n\r\n    export default class ChildOne extends Component {\r\n      public render(){\r\n        return (\r\n          <SomeContext.Consumer>\r\n            {context =>\r\n              <div>\r\n              {`Context of ChildOne: ${context.someValue}`}\r\n              </div>\r\n            }\r\n          </SomeContext.Consumer>\r\n        );\r\n      }\r\n    }\r\n\r\nOf course  it's not a solution for this issue but might be a useful information.\r\n\r\n  [1]: https://stackblitz.com/edit/react-ts-8pdvte?file=index.tsx",
  "closed_by": {
    "login": "Flaneder",
    "id": 13695230,
    "node_id": "MDQ6VXNlcjEzNjk1MjMw",
    "avatar_url": "https://avatars1.githubusercontent.com/u/13695230?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Flaneder",
    "html_url": "https://github.com/Flaneder",
    "followers_url": "https://api.github.com/users/Flaneder/followers",
    "following_url": "https://api.github.com/users/Flaneder/following{/other_user}",
    "gists_url": "https://api.github.com/users/Flaneder/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Flaneder/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Flaneder/subscriptions",
    "organizations_url": "https://api.github.com/users/Flaneder/orgs",
    "repos_url": "https://api.github.com/users/Flaneder/repos",
    "events_url": "https://api.github.com/users/Flaneder/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Flaneder/received_events",
    "type": "User",
    "site_admin": false
  }
}
