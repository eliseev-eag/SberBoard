{
  "url": "https://api.github.com/repos/facebook/react/issues/13717",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13717/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13717/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13717/events",
  "html_url": "https://github.com/facebook/react/issues/13717",
  "id": 363196741,
  "node_id": "MDU6SXNzdWUzNjMxOTY3NDE=",
  "number": 13717,
  "title": "Feature Request: PureComponent's children comparison; compare the Component instance instead of Element instance which always returns false.",
  "user": {
    "login": "maulerjan",
    "id": 4391325,
    "node_id": "MDQ6VXNlcjQzOTEzMjU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/4391325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maulerjan",
    "html_url": "https://github.com/maulerjan",
    "followers_url": "https://api.github.com/users/maulerjan/followers",
    "following_url": "https://api.github.com/users/maulerjan/following{/other_user}",
    "gists_url": "https://api.github.com/users/maulerjan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maulerjan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maulerjan/subscriptions",
    "organizations_url": "https://api.github.com/users/maulerjan/orgs",
    "repos_url": "https://api.github.com/users/maulerjan/repos",
    "events_url": "https://api.github.com/users/maulerjan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maulerjan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-09-24T15:24:46Z",
  "updated_at": "2018-09-25T09:48:57Z",
  "closed_at": "2018-09-25T09:37:02Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\nConsider a Root component:\r\n```\r\nexport default class Root extends React.PureComponent {\r\n  constructor {\r\n    ...\r\n  }\r\n\r\n  render() {\r\n    return {\r\n      <Wrapper> // PureComponent\r\n        <Child color={this.state.color}/>\r\n      </Wrapper>\r\n    }\r\n  }\r\n}\r\n``` \r\nEvery time we update the Root component's state, the Wrapper component re-renders regardless of whether we updated `color` state property or something else entirely. That is because the `<Child/>` component gets a new Element instance (although it's pointing to the same old Component instance). \r\n\r\nThe Wrapper's shouldComponentUpdate (provided by PureComponent functionality) compares the Element instance (which is always false).\r\n\r\n**What is the expected behavior?**\r\nThe Wrapper's shouldComponentUpdate (provided by PureComponent functionality) compares the Component instance (which can be true or false).\r\n\r\n\r\nThe PureComponent's behavior doesn't necessarily have to be changed, instead some solution (even some helper function or argument) to use within custom `shouldComponentUpdate` would be really a great feature.\r\n\r\nAn example:\r\n```\r\nshouldComponentUpdate(nextProps, nextState) {\r\n  const childrenProps = React.Children.getProps(this.props.children) // a new React's helper\r\n  const nextChildrenProps = React.Children.getProps(nextProps.children)\r\n  const childrenComp = React.Children.getComponent(this.props.children) // a new React's helper\r\n  const nextChildrenComp = React.Children.getComponent(nextProps.children)\r\n\r\n  // ... compare the variables\r\n}\r\n```\r\nI realise this couldn't work as the children can be an array etc. It would require a bunch of more stuff to be considered, but I think we need some kind of solution to the problem.\r\n\r\nUltimately, the PureComponent could be doing all of the Components (not Elements) comparison under the hood somehow.\r\n\r\nThere's currently no way of achieving this sort of performance optimization. We either have to cache the `<Child/>` for a price of losing the reactivity (`props`), or we have to accept the fact that there will be unnecessary rendering involved further down the tree.\r\n\r\nI'm aware there had been a discussion on the subject but no solution provided. I'd like to know if there is any way this feature could be implemented in React in the future.\r\n\r\nThanks!",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
