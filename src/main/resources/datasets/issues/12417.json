{
  "url": "https://api.github.com/repos/facebook/react/issues/12417",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12417/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12417/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12417/events",
  "html_url": "https://github.com/facebook/react/issues/12417",
  "id": 307336026,
  "node_id": "MDU6SXNzdWUzMDczMzYwMjY=",
  "number": 12417,
  "title": "Change on <i> ag isn't enough to make my component re-render",
  "user": {
    "login": "gfelot",
    "id": 7879555,
    "node_id": "MDQ6VXNlcjc4Nzk1NTU=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/7879555?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gfelot",
    "html_url": "https://github.com/gfelot",
    "followers_url": "https://api.github.com/users/gfelot/followers",
    "following_url": "https://api.github.com/users/gfelot/following{/other_user}",
    "gists_url": "https://api.github.com/users/gfelot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gfelot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gfelot/subscriptions",
    "organizations_url": "https://api.github.com/users/gfelot/orgs",
    "repos_url": "https://api.github.com/users/gfelot/repos",
    "events_url": "https://api.github.com/users/gfelot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gfelot/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-03-21T17:04:37Z",
  "updated_at": "2018-03-27T22:04:35Z",
  "closed_at": "2018-03-27T22:04:35Z",
  "author_association": "NONE",
  "body": "***Bug* && *Question***\r\n\r\n**What is the current behavior?**\r\n\r\nIt's was a bug on my code and thanks to SO I find a way to fix it. But I would like an explanation why I had this behavior.\r\n\r\nI made a form with redux-form (using Bulma for the CSS).\r\nI wanted to add an icon to the right of the input, in a `<i>` tag  like Bulma's doc show us, after a focus to have a visual validation.\r\n\r\nGreen FontAwesome icon if the input is valid. Another one in red if not.\r\n\r\nThe first re-render with the right icon was OK but if I had an invalid field and then write something in it, the icon doesn't change even if I see the props that should trigger the new icon was changing.\r\n\r\nTrying to debug, I had make it work without changing my logic with just replacing the `<i>` tag to a `span`, or a `h1`... and I had the right behavior.\r\n\r\n(i dunno how to make my example work on fiddle)\r\n\r\nIn this state it doesn't work with `i` but uncomment the `span` and comment the `i` and it's working.\r\n\r\n```javascript\r\nimport React from 'react';\r\n\r\nconst InputItem = ({ spec, input, meta: { touched, error } }) => {\r\n\r\n  const successIconRight = {\r\n    color: '#2ecc71'\r\n  };\r\n\r\n  const errorIconRight = {\r\n    color: '#e74c3c'\r\n  };\r\n\r\n  const { label, type, placeholder, iconLeft, iconRight } = spec;\r\n\r\n  const renderIcon = () => {\r\n\r\n    if (touched && error) {\r\n      return (\r\n        <span className=\"icon is-small is-right\">\r\n          <i className=\"fas fa-ban\" style={errorIconRight}/>\r\n          {/* <span style={errorIconRight}>NON</span> */}\r\n        </span>\r\n      )\r\n    } else if (touched && !error) {\r\n      return (\r\n        <span className=\"icon is-small is-right\">\r\n          <i className={iconRight} style={successIconRight}/>\r\n          {/* <span style={successIconRight}>OUI</span> */}\r\n        </span>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"field\">\r\n      {label && <label className=\"label\">{label}</label>}\r\n      <p className=\"control has-icons-left has-icons-right\">\r\n        <input\r\n          {...input}\r\n          className=\"input\"\r\n          type={type}\r\n          placeholder={placeholder}\r\n        />\r\n        <span className=\"icon is-small is-left\">\r\n          <i className={iconLeft} />\r\n        </span>\r\n        {renderIcon()}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputItem;\r\n```\r\n\r\nPosting on SO someone ring my bell. The two component where two close from each other for react to interpret it as a change with a `<i>` tag. So no re render.  A span was ok.\r\n\r\n\r\nI had to manually add a `key` props on the parent `span` to make it work like so in my `renderIcon` func.\r\n\r\n```javascript\r\nconst renderIcon = () => {\r\n\r\n    if (touched && error) {\r\n      return (\r\n        <span className=\"icon is-small is-right\" key={0}>\r\n          <i className=\"fas fa-ban\" style={errorIconRight}/>\r\n          {/* <span style={errorIconRight}>NON</span> */}\r\n        </span>\r\n      )\r\n    } else if (touched && !error) {\r\n      return (\r\n        <span className=\"icon is-small is-right\" key={1}>\r\n          <i className={iconRight} style={successIconRight}/>\r\n          {/* <span style={successIconRight}>OUI</span> */}\r\n        </span>\r\n      )\r\n    }\r\n  }\r\n```\r\n\r\nSo my question is why it's not enough for react to render when a `<i>`  tag change ?\r\n\r\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
