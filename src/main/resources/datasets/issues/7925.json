{
  "url": "https://api.github.com/repos/facebook/react/issues/7925",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7925/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7925/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7925/events",
  "html_url": "https://github.com/facebook/react/issues/7925",
  "id": 181956030,
  "node_id": "MDU6SXNzdWUxODE5NTYwMzA=",
  "number": 7925,
  "title": "[Fiber] Umbrella for remaining features / bugs",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2016-10-10T08:04:34Z",
  "updated_at": "2017-07-07T23:21:19Z",
  "closed_at": "2017-07-07T23:21:18Z",
  "author_association": "MEMBER",
  "body": "This is an umbrella issues for remaining fiber issues. More can be found by running the unit tests with the `useFiber` flag in `ReactDOMFeatureFlags` turned on\r\n\r\nSee #8830 for additional tasks beyond the scope of the initial Fiber release\r\n\r\n<details>\r\n<summary>Phases 1â€“6</summary>\r\n\r\n**Phase 1: Infrastructure**\r\n- [x] Set up infra to know which tests are failing @spicyj \r\n- [x] ReactTestUtils features\r\n  - [x] reactComponentExpect @gaearon #8258\r\n  - [x] scry etc. @gaearon #8257\r\n\r\n**Phase 2: Smaller / Initial Tasks**\r\n- [x] ReactDOMFiber.render - Simple  synchronous case. [@sebmarkbage] #8029\r\n- [x] String refs using owner. [@acdlite] #8099 \r\n- [x] Pass the correct previous state to componentDidUpdate. #7941\r\n- [x] componentWillMount, componentWillReceiveProps, componentWillUpdate life-cycles. [@sebmarkbage] #8015\r\n- [x] componentDidUpdate should not fired if shouldComponentUpdate returns false. [@sebmarkbage] #8028\r\n- [x] Instance should be recreated when already started work gets resumed (no componentWillReceiveProps without didMount). [@sebmarkbage] #8015\r\n- [x] Fix module pattern in mountIndeterminateComponent. [@sebmarkbage] #8015\r\n- [x] findDOMNode. #8083 [@sebmarkbage]\r\n- [x] Switching between types doesn't track deletions (updateSlot doesn't return null). [@sebmarkbage / @gaearon] #8085\r\n- [x] PureComponent flag. [@acdlite] #8118\r\n- [x] Ensure that scheduling works synchronously by default but batched in DOM events. (Initial default priority.) [@acdlite] #8127 \r\n- [x] unstable_batchedUpdates [@acdlite] #8127\r\n- [x] setState in componentDidMount/componentDidUpdate should always be synchronous at the end of the batch. Even if work is deferred. [@acdlite] #8206  \r\n- \\- [x] Make sure setState + error boundaries work in it [@gaearon / @acdlite] #8193\r\n- [x] Unmount failed trees before attempting to recover [@acdlite] #8304 \r\n\r\n**Phase 3: Larger Tasks**\r\n- [x] Allow testing Fiber in Facebook web codebase [@spicyj]\r\n- [x] Error boundaries. [@gaearon]\r\n- [x] Context [@gaearon #8272]\r\n- [x] DOM attributes/properties update. [@sebmarkbage]\r\n- [x] DOM events - Plug in the event system. [@sebmarkbage]\r\n- [x] renderContainerIntoSubtree - Preserve state and such. [@spicyj #8368]\r\n- [x] [fb] Bug: Switching from text children to regular children won't clear the old text content. (Not an easy fix since the side-effect of the parent is scheduled after the child insertions.) [@acdlite / @sebmarkbage] #8331\r\n- [x] Recover from errors during commit phase, including errors thrown from host environment. Should only use a single try-catch block. [@acdlite]\r\n- [x] [fb] SVG mode switch (based on if a parent is SVG or HTML). [@gaearon #8417]\r\n- [x] [fb] setState behavior when called in all possible life-cycles including sibling life-cycles and parents and children. [@acdlite]\r\n\r\n**Phase 4: Uncovered Bugs**\r\n- [x] Root container is wrong in commit phase (https://github.com/facebook/react/pull/8568#issuecomment-266848256) [@sebmarkbage] #8607\r\n- [x] Update state/props object pointers even if bailout happens. This will currently cause an unnecessary componentDidUpdate. Solve that somehow. [@acdlite] #8655\r\n- [x] ~~Validate if inputValueTracking does indeed need to be cleaned up on unmount~~ I don't think it needs to but we should revert anyway\r\n- [x] autoFocus doesn't work. Todo in ReactDOMFiberComponent. [@bvaughn] #8646\r\n- [x] [fb] When the last effect renders, there's an infinite loop. [@acdlite]\r\n- [x] [fb] Defer clearing of initial nodes until work is actually begun. (Ensure that unmounting and rerendering in the same batch works.) [@acdlite]\r\n- [x] Updates on different roots in componentWillMount (ReactUpdates-test) [@acdlite]\r\n- [x] Refs should update even if shouldComponentUpdate returned false. However, componentDidUpdate should not fire. [@acdlite] #8685 \r\n- [x] [fb] Make top level render and unmount synchronous by default even when they're in a batch. (Even for updates? No, not for updates.) [@acdlite] #8634 \r\n- [x] [fb] Uncaught TypeError: Cannot read property 'children' of null https://github.com/facebook/react/blob/705c9bcfd2745749a603b72e04528095021a673b/src/renderers/shared/fiber/ReactFiberBeginWork.js#L213 (probably due to context change, based on the caller) We should probably either avoid rerendering or set pendingProps to memoizedProps in this case. [@sebmarkbage] #8613\r\n- [x] Does replaceState remove any previous callbacks scheduled? [@acdlite]\r\n- [x] Root fiber should use `updateQueue` instead of `pendingProps`. [@acdlite]\r\n- [x] [fb] Ensure that we get the current props for controlled components in restoreStateIfNeeded. [@spicyj] #8443\r\n- [x] [fb] Iterable children. (E.g. immutable.js / Set etc.) [@gaearon #8446]\r\n- [x] [fb] Reuse HostText when bailing out [@sebmarkbage] #8371\r\n- [x] [fb] Ensure that renderSubtreeIntoContainer twice enables the context to pass through the middle subtree. I.e. two nested layer with a single context provider at the very top. [@spicyj] #8407\r\n- [x] Make HostContainer append/insert/remove child instead of always updating all.  Detach .return when a child gets unmounted (removed). [@sebmarkbage] #8400\r\n- [x] Handle selection restoration #8401 #8353 \r\n- [x] Swap out the active Fiber when a host node is updated - including if listeners change so that we can know which listener is active. _This needs to remain even when prepareUpdate is fixed._\r\n- [x] Remove traversal of `.output`. #8406\r\n- [x] findDOMNode and findAllInRenderedTree are broken. If an insertion happens and we happen to look at the previous work in progress, then it will not have any deletes or removes. So it looks like it is current. I assume the same can happen for a deletion after it is done. [@sebmarkbage] #8450\r\n- [x] ~~[fb] Batch different roots together into one commit (ReactUpdates-test)~~ Won't fix. Use Portals instead. #8508\r\n- [x] Error handling when an error is thrown in detachRef callbacks. [@acdlite]\r\n- [x] Ensure that if we walk up .return in TreeTraversal we always get the current Fiber for props, or possibly just walk up the parentNode tree instead. [@sebmarkbage] #8491\r\n- [x] ~~Ensure that when we switch on tag names, we cover mixed/upper case. E.g. `React.createElement('INPUT')`.~~ Won't fix. Instead, we'll warn if upper case is used on HTML tags. [@sebmarkbage] #8563\r\n- [x] Some scheduling issue is causing ReactCompositeComponentNestedState-test to fail. It performs the first setState before the second one. Will any of the Task priority stuff fix this? (@acdlite)\r\n- [x] [fb] Scheduling an update during render doesn't work. We mostly already warn if setState is called from render, but it might required that componentWillMount (and others) calling a callback which sets state on a different component works. Currently the complete phase resets both the updateQueue and pending priority. This can cause infinite loops to happen. Apparently still used. We need to either warn/log better and upgrade everyone or support it in Fiber. [@acdlite]\r\n- [x] Top-level context push/pop isn't properly matched up; lots of tests fail if you patch in [this](https://gist.github.com/342ebd8df0d08143381dd38c01d13d15). #8568 [@bvaughn]\r\n- [x] [fb] Reentrant mounting in synchronous mode [@spicyj #8623]\r\n\r\n**Phase 5**\r\n- [x] Feature flag to disable Fiber-only features [@acdlite] #8797\r\n- [x] Polyfills or alternate paths for ~~`Map`, `requestAnimationFrame`~~ and `requestIdleCallback`. [@sebmarkbage] #8833\r\n- [x] isMounted - technically not deprecated yet. #8083 [@sebmarkbage]\r\n- [x] Top level render callbacks. Second argument to render. #8102 [@koba04]\r\n- [x] Ensure that server rendering works using Stack when Fiber is enabled. [#8372]\r\n- [x] Declarative portal API @gaearon #8386\r\n  - [x] Add tests for event bubbling (This will need to track #8117 for changes to how top level event listeners get attached.) \r\n- [x] React Test Renderer support. (@iamdustan #8628)\r\n- [x] React ART support. #8521 (@bvaughn)\r\n- [x] Land basic React Native support in React repo. #8560 (@bvaughn)\r\n- [x] Mark root renders during mount (perf testing) (see tests for \"marks top-level updates\") [@bvaughn] #8687\r\n- [x] Merge callbackList onto the updateQueue instead of a separate field. [@acdlite] #8728 \r\n- [x] Separate priority level for state updates. #7457 [@acdlite]\r\n- [x] Fix coroutine issue where Fiber is passed in user space and could become stale. [@sebmarkbage] #8840\r\n- [x] DOM Dev Tools [@gaearon]\r\n\r\n**Phase 6: Unit tests and known bugs push**\r\n- [x] [fb] Fix `findDOMNode` bug when used in certain cases from `componentWillUnmount`. [@sebmarkbage, @acdlite] #8897 \r\n- [x] [fb] Provide ability to block event bubbling in portals [@spicyj]\r\n- [x] Unit tests: ReactFragment-test invariants [@acdlite] #8890\r\n- [x] Unit tests: ReactDOMProduction-test invariant [@acdlite] #8907 \r\n- [x] Unit tests: ReactEmptyComponent-test invariant [@acdlite] #8908 \r\n- [x] Ensure we replace `throw new Error` with `invariant` calls and they have sensible messages [@acdlite] #8926\r\n- [x] Unit tests: ReactMount-test [@acdlite] #8919\r\n- [x] Unit tests: ReactMultiChild-test (remove Map as children support in Stack) [@acdlite] #8911 \r\n- [x] Unit tests: ReactMultiChildText-test [@acdlite]\r\n- [x] RN: Fix event bubbling regression. [@spicyj/@bvaughn]\r\n- [x] Make sure Babel doesn't generate bad code (e.g. IIFE for `let`/`const`), maybe fork Babel plugin to throw [@spicyj]\r\n- [x] RN: Land React update in fbsource with Fiber disabled [@sebmarkbage]\r\n- [x] Verify Fiber works in IE on Facebook (Map / Set: open IE10/11 and make sure it works) [@spicyj]\r\n- [x] [fb] Figure out Ads Image Cropper issue [@spicyj]\r\n- [x] Unit tests: ReactDOMComponent-test [@acdlite] #8948\r\n- [x] Unit tests: ReactComponentLifeCycle-test warnings (ex: fDN in render) [@acdlite] #8949\r\n- [x] Allow assigning this.state in cWRP with warning [@acdlite] #9040\r\n- [x] Unit tests: ReactStatelessComponent-test warning [@trueadm] #9043\r\n- [x] Unit tests: refs-test [@trueadm] #9045\r\n- [x] Make a new manual propTypes checker. [@acdlite] #9004\r\n- [x] Unit tests: ReactCompositeComponent-test warnings (ex: setState in render) [@acdlite] #8950\r\n- [x] Ensure \"break on all/uncaught exceptions\" works as expected in browsers [@acdlite] #8961\r\n- [x] Investigate what modules and unit tests fail if we remove Stack [@trueadm] #9069\r\n- [x] Quick investigation into FB require.js perf [@trueadm]\r\n- [x] Quick investigation into Fiber bundle perf, cutting out extra dev-only code [@trueadm] #9096 \r\n- [x] [fb] Move .hidden check into hostConfig (https://fburl.com/m8juo29d, https://fburl.com/538fgu7g)\r\n\r\n</details>\r\n\r\n-----\r\n\r\n**Phase 6.1: 15.5 Release**\r\n- [ ] Warn (throw?) when doing an update on a container that was manually emptied outside of React (in stack, this mounted a brand-new tree; in fiber, it tries to apply an update and usually fails) [~~@keyanzhang~~, @sebmarkbage took over this] (blocks beta)\r\n- [x] Extract propTypes into a separate npm package. Get `prop-types` package name. [@acdlite]\r\n- [x] Unit tests: ReactContextValidator-test -- Pass the correct previous `context` to `componentDidUpdate` (or deprecate feature and remove test). [@bvaughn] #8631\r\n- [x] [fb] Better fix to ReactART.Text.\r\n- [x] Update warning when calling propTypes directly to refer user to `checkPropTypes` API\r\n- [x] Docs updates for test utils and removed add-ons [@flarnie]\r\n\r\n**Phase 6.2: React Native Fiber**\r\n- [x] Reimplement Shallow Renderer without Stack dependencies [@lelandrichardson/@trueadm] #8982\r\n- [ ] RN: ensure we keep all important invariants (such as that [text must be wrapped](https://github.com/facebook/react-native/blob/9f3e928f8335a51cd87593a150726e564afd2fa4/Libraries/Renderer/src/renderers/native/ReactNativeTextComponent.js#L32-L36) in `<Text>`) (does not block anything but we should do this)\r\n- [ ] Ensure that we call the FB specific warning module instead of the `fbjs/lib/warning` one in RN. [@spicyj] (doesn't block anything OSS, internal to FB)\r\n- [x] Convert propTypes callers to use checkPropTypes. [@acdlite]\r\n- [x] Deploy forwarding modules to react/lib/ReactCurrentOwner, react/lib/ReactComponentTreeHook, fbjs/lib/invariant, fbjs/lib/warning, fbjs/lib/ExecutionEnvironment, fbjs/lib/performanceNow, fbjs/lib/emptyObject, fbjs/lib/emptyFunction, fbjs/lib/shallowEqual. So that we can keep using providesModule in this repo until we have flat bundles. Or better yet: Do the inverse and switch to using CommonJS naming convention in www. [@sebmarkbage, @bvaughn]\r\n- [ ] See if we can codemod `createStrictPropTypeChecker` away and use `exactShape` instead. (doesn't block OSS release)\r\n- [x] Release a new version of react-redux whose peer is compatible with 16-alpha. Update RN to use it. https://github.com/reactjs/react-redux/pull/629\r\n- [x] Enable `prepareNewChildrenBeforeUnmountInStack` feature flag (one week after landing sync).\r\n- [x] ~~Codemod Flow errors yielded by properly typing `findNodeHandle`.~~ (we added types and `$FlowFixMe` comments; good enough for now)\r\n- [x] Redesign the host component \"type\", the type of host component refs and integration with `NativeMethodsMixin` to be upgrade compatible. [@bvaughn]\r\n  - [x] Unblocks: RN Dev Tools [@gaearon] https://github.com/facebook/react-devtools/pull/528\r\n  - [x] Unblocks: RN Inspector (see _known issues_ section of PR #8560) [@gaearon] https://github.com/facebook/react-native/pull/12421\r\n- [ ] Make sure instanceProps in `ReactNativeComponentTree` doesn't leak. (@sebmarkbage, @bvaughn)\r\n\r\n**Phase 6.3: Flat Bundles/Rollup**\r\n- [x] Make React Perf work with Fiber (ReactPerf-test) [@gaearon] (Decided not to in favor of deeper timeline integration)\r\n- [x] Unit tests: ReactComponentTreeHook-test [@gaearon]\r\n- [x] Unit tests: ReactHostOperationHistoryHook-test [@gaearon]\r\n- [x] Make a list of all internal React modules required by FB code\r\n- [x] Come up with a better strategy for dealing with DEV code and make sure we don't ship it in prod\r\n- [x] Change www sync script https://fburl.com/juffnc9d to run rollup using commonjs source\r\n  - [x] Shimming the required files (ex: ReactDOMInjection, warning)\r\n  - [x] Exporting a single bundle that exposes the internals we need\r\n  - [x] Make fowarding modules for ReactDOM/etc as well as internal modules\r\n- [ ] Convert OSS repo to ES6 modules (does not block release; nice-to-have follow up)\r\n- [x] Make separate dev and non-dev build in one file for www (`if (__DEV__) { ... all of React ... } else { ... all of React }`)\r\n- [x] Convert OSS repo to rollup\r\n- [x] Replace current Grunt/Gulp build system with a unified build system (maybe purely using Rollup)\r\n- [ ] Add Closure Compiler with ADVANCED and deal with mangling properly (does not block release; nice-to-have follow up)\r\n\r\n**Phase 7: Async-Compatible** (does not block release)\r\n- [ ] Fix incremental regression (if it is a regression)\r\n- [ ] [fb] Fix resumeMountClassInstance so that `newProps` gets passed to construct class. Otherwise `this.props` can be `null`.\r\n- [ ] RN: Aborting async work or unmounting a tree due to an error leaks native views\r\n- [ ] Add cross-renderer support for portals (necessary for async ART)\r\n- [ ] ReactDOMFiber.render - Return the root instance from render even if priority is deferred. Test and cover incremental cases\r\n- [ ] Decide on replacing priorities with deadlines to fix starvation\r\n\r\n**Phase 8: Server-Side Rendering**\r\n- [x] What are we doing?\r\n- [x] Unit tests: ReactRenderDocument-test (SSR) -- Reviving server rendered markup (including rendering into `document` and shadow DOM containers)\r\n\r\n**Phase 9: Improvements** (does not block release)\r\n- [ ] The `getPublicInstance` internal API should consistently be used before exposing any stateNodes.\r\n  - [ ] See https://github.com/facebook/react/pull/8751#discussion_r119161506\r\n- [x] Key-warnings on fragments. [@flarnie]\r\n- [x] Don't mark \"update\" effect on newly mounted components unless they have a componentDidMount life-cycle.\r\n- [ ] Add support to Enzyme for Fiber (https://github.com/airbnb/enzyme/pull/1007)\r\n- [ ] Currently bailing out on equal props/state equality means that we still copy all of our children, and traverse all of them. Meaning that a parent with many children will still do a lot of work even if it bails out / \"skips\". If \"pendingWorkPriority\" on referred only to children, we would know if any children has additional work. [@acdlite] #8716\r\n- [x] Unit tests: ReactDOMTextComponent-test -- .normalize() case\r\n- [ ] Reconsider the ContentReset flag. Is there a cleaner solution for clearing out text content / innerHTML? Such as changing the insertion order\r\n- [ ] Reconsider storing masked contexts on instances\r\n- [ ] Revert inputValueTracking and replace with different comparison strategy. getter/setters is slow and complicated. Subscription model isn't helpful for Fiber's goals. The principle of over listening to lots of events and diffing the value is sound. <s>We haven't shipped in OSS yet so not too hard to fix</s> -- This will probably get pushed back to 16/17\r\n- [ ] Fiber drops the lazy DOM insertion order. Is there a solution that isn't slow in IE11? Is it worth fixing or should we leave IE11 slow and wait for a fix in the browser? (related: #8417)\r\n- [ ] Follow up from previous task (https://github.com/facebook/react/pull/8728#discussion_r95643611): use a linked list for `callbackList` [@acdlite] https://github.com/facebook/react/pull/8752\r\n- [ ] Ensure that it is possible to resume \"incomplete\" parents without rerendering. A shallow reuse. Store it on memoizedProps. Resuming \"completed\" parents is already possible. [@acdlite] #8716 \r\n- [ ] Move callback invariant closer to usage as requested in https://github.com/facebook/react/pull/8639#issuecomment-271944608\r\n- [ ] Replace some invariants with warnings to help code size https://github.com/facebook/react/pull/8677#issuecomment-270335705",
  "closed_by": {
    "login": "flarnie",
    "id": 1114467,
    "node_id": "MDQ6VXNlcjExMTQ0Njc=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1114467?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/flarnie",
    "html_url": "https://github.com/flarnie",
    "followers_url": "https://api.github.com/users/flarnie/followers",
    "following_url": "https://api.github.com/users/flarnie/following{/other_user}",
    "gists_url": "https://api.github.com/users/flarnie/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/flarnie/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/flarnie/subscriptions",
    "organizations_url": "https://api.github.com/users/flarnie/orgs",
    "repos_url": "https://api.github.com/users/flarnie/repos",
    "events_url": "https://api.github.com/users/flarnie/events{/privacy}",
    "received_events_url": "https://api.github.com/users/flarnie/received_events",
    "type": "User",
    "site_admin": false
  }
}
