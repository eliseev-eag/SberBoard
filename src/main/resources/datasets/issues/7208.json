{
  "url": "https://api.github.com/repos/facebook/react/issues/7208",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7208/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7208/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7208/events",
  "html_url": "https://github.com/facebook/react/pull/7208",
  "id": 164188858,
  "node_id": "MDExOlB1bGxSZXF1ZXN0NzY1MTIyMDA=",
  "number": 7208,
  "title": "Make ReactPerf.start() work during reconciliation",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "sophiebits",
      "id": 6820,
      "node_id": "MDQ6VXNlcjY4MjA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sophiebits",
      "html_url": "https://github.com/sophiebits",
      "followers_url": "https://api.github.com/users/sophiebits/followers",
      "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
      "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
      "organizations_url": "https://api.github.com/users/sophiebits/orgs",
      "repos_url": "https://api.github.com/users/sophiebits/repos",
      "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sophiebits/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/facebook/react/milestones/30",
    "html_url": "https://github.com/facebook/react/milestone/30",
    "labels_url": "https://api.github.com/repos/facebook/react/milestones/30/labels",
    "id": 1871306,
    "node_id": "MDk6TWlsZXN0b25lMTg3MTMwNg==",
    "number": 30,
    "title": "15.2.1",
    "description": "",
    "creator": {
      "login": "zpao",
      "id": 8445,
      "node_id": "MDQ6VXNlcjg0NDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zpao",
      "html_url": "https://github.com/zpao",
      "followers_url": "https://api.github.com/users/zpao/followers",
      "following_url": "https://api.github.com/users/zpao/following{/other_user}",
      "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
      "organizations_url": "https://api.github.com/users/zpao/orgs",
      "repos_url": "https://api.github.com/users/zpao/repos",
      "events_url": "https://api.github.com/users/zpao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zpao/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 32,
    "state": "closed",
    "created_at": "2016-07-08T00:06:15Z",
    "updated_at": "2016-07-13T19:56:10Z",
    "due_on": null,
    "closed_at": "2016-07-08T22:40:09Z"
  },
  "comments": 2,
  "created_at": "2016-07-06T22:24:44Z",
  "updated_at": "2016-07-08T18:50:59Z",
  "closed_at": "2016-07-07T18:41:30Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/7208",
    "html_url": "https://github.com/facebook/react/pull/7208",
    "diff_url": "https://github.com/facebook/react/pull/7208.diff",
    "patch_url": "https://github.com/facebook/react/pull/7208.patch"
  },
  "body": "Currently `ReactPerf.start()` and `ReactPerf.stop()` calls don’t work correctly during reconciliation.\nAs far as I know this was occasionally the case before 15.x too—they weren’t working reliably.\n\nGenerally we advise that people call `ReactPerf` methods from the console but React components for this appears to be a popular pattern so it’s best we support it.\n\nI took the failing test from #7191 and built this PR on top of it.\nThis should fix the problem so people can write “measurer” components like this:\n\n``` js\n    var Measurer = React.createClass({\n      componentWillMount() {\n        ReactPerf.start();\n      },\n      componentDidMount() {\n        ReactPerf.stop();\n      },\n      componentWillUpdate() {\n        ReactPerf.start();\n      },\n      componentDidUpdate() {\n        ReactPerf.stop();\n      },\n      render() {\n        // Force reconciliation despite constant element\n        return React.cloneElement(this.props.children);\n      },\n    });\n\n    var container = document.createElement('div');\n    ReactDOM.render(<Measurer><App /></Measurer>, container);\n    expect(ReactPerf.getWasted()).toEqual([]);\n\n    ReactDOM.render(<Measurer><App /></Measurer>, container);\n    expect(ReactPerf.getWasted()).toEqual(/* ... */);\n```\n\nWhy didn’t this work before? We used to only start and stop timers while `isProfiling` is true. However this doesn’t work correctly if the user flips `isProfiling` **during** reconciliation. Then we have mismatching `begin`/`end` timer calls.\n\nTo fix this, I decided to always measure methods regardless of whether we are in profiling mode. I suppose calls to `performanceNow()` can’t be expensive, can they? And we are only doing this in `__DEV__` anyway.\n\nThe logic is changed so that we **don’t record** the measurements if `isProfiling` is `false`. So we just make them and throw them away (without pushing them into the array). This lets us avoid writing the logic to recover from `isProfiling` flipping in the middle of reconciliation.\n\nI also changed the host history tool to only record DOM operations while profiling. Previously they were recorded into an array before being discarded at the end of the flush.\n\nFinally, I fixed a few places (ART and error boundaries) where warning assertions weren’t true. They started firing because we now measure regardless of `isProfiling`. This is actually good because it means we’re testing that ReactPerf doesn’t get confused by bad event ordering during our whole test suite.\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
