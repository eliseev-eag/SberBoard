{
  "url": "https://api.github.com/repos/facebook/react/issues/16586",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16586/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16586/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16586/events",
  "html_url": "https://github.com/facebook/react/issues/16586",
  "id": 485910950,
  "node_id": "MDU6SXNzdWU0ODU5MTA5NTA=",
  "number": 16586,
  "title": "Can't use ReactDOM.unmountComponentAtNode to unmount portal before DOM container is erased...",
  "user": {
    "login": "sqiii",
    "id": 54593592,
    "node_id": "MDQ6VXNlcjU0NTkzNTky",
    "avatar_url": "https://avatars1.githubusercontent.com/u/54593592?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sqiii",
    "html_url": "https://github.com/sqiii",
    "followers_url": "https://api.github.com/users/sqiii/followers",
    "following_url": "https://api.github.com/users/sqiii/following{/other_user}",
    "gists_url": "https://api.github.com/users/sqiii/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sqiii/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sqiii/subscriptions",
    "organizations_url": "https://api.github.com/users/sqiii/orgs",
    "repos_url": "https://api.github.com/users/sqiii/repos",
    "events_url": "https://api.github.com/users/sqiii/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sqiii/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-08-27T16:26:36Z",
  "updated_at": "2019-08-28T18:49:56Z",
  "closed_at": "2019-08-28T18:49:55Z",
  "author_association": "NONE",
  "body": "I have a Blaze template application outside of the main react app that houses a container for a React portal to be rendered within it. On render of the Blaze template, we load data and send a custom event to an event listener inside the React application, which then renders the portal.\r\n\r\nThis works perfectly inside Chrome, but with Internet Explorer 11, the rendering and derendering of both the portal and template is a lot slower, and we run into a race condition??\r\n\r\nOn the second render of the Blaze template, React goes through its lifecycle and attempts to unmount all the children of the previous portal container, however - they do not exist since we've removed that DOM node entirely (using .html('')), and we run into an error within ReactDOM where the child is not found.\r\n\r\n```\r\nfunction removeChildFromContainer(container, child) {\r\n  if (container.nodeType === COMMENT_NODE) {\r\n    container.parentNode.removeChild(child);\r\n  } else {\r\n    container.removeChild(child); // Error on this line. \r\n  }\r\n}\r\n```\r\nI've attempted to remove unmount the portal by sending a custom event before the existing code removes the DOM container.\r\n\r\n    //Derender the previous portal if it exists\r\n    if (window.isEvalTool) {\r\n        console.log('removing the portal')\r\n        // Send an event to React to unmount the previous portal node for IE\r\n        var container = document.getElementById('eval-panel-root');\r\n        var removePortal = new CustomEvent(\"readyForPortalRemoval\", {\r\n            detail: container\r\n        });\r\n        window.dispatchEvent(removePortal);\r\n    }\r\n    $(findingContainer).html('');\r\n\r\n\r\n// Code that should unmount the component manually\r\n```\r\n        window.addEventListener('readyForPortalRemoval', function (event) {\r\n            console.log('removing previous portal container');\r\n            var removed = ReactDOM.unmountComponentAtNode(event.detail);\r\n            console.log(removed); // This usually returns false, meaning it \r\n            // couldn't find it. \r\n        })\r\n```\r\nRight now the problem is that unmountComponentAtNode doesn't seem to work for my portal (which is a classical component) - even when passing the direct parent container. I thought it might be because events aren't guaranteed to fire immediately and so it might be looking for the container only after the .html('') call, but that isn't the issue, after placing the remove portal event right after the create portal event (no removal of html between those two calls).\r\n\r\nAny information on how I can gracefully unmount and derender the portal before its parent container gets replaced by Blaze would be extremely helpful!\r\n\r\nThanks in advance.\r\n\r\nI expected to at least have a successful removal of the portal at some point but have not. I cannot remove the html.('') call because that is how the current templating engine replaces templates.",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
