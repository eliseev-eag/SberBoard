{
  "url": "https://api.github.com/repos/facebook/react/issues/9477",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9477/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9477/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9477/events",
  "html_url": "https://github.com/facebook/react/issues/9477",
  "id": 223350635,
  "node_id": "MDU6SXNzdWUyMjMzNTA2MzU=",
  "number": 9477,
  "title": "Implement Setting Unknown Attributes",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 588833528,
      "node_id": "MDU6TGFiZWw1ODg4MzM1Mjg=",
      "url": "https://api.github.com/repos/facebook/react/labels/Difficulty:%20medium",
      "name": "Difficulty: medium",
      "color": "fbca04",
      "default": false
    },
    {
      "id": 40929153,
      "node_id": "MDU6TGFiZWw0MDkyOTE1Mw==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Enhancement",
      "name": "Type: Enhancement",
      "color": "84b6eb",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 25,
  "created_at": "2017-04-21T10:59:30Z",
  "updated_at": "2017-08-07T17:55:42Z",
  "closed_at": "2017-08-07T17:55:42Z",
  "author_association": "MEMBER",
  "body": "We are currently warning about “unknown properties” in the DOM.\r\nFor example if you render:\r\n\r\n```js\r\n<div foo=\"bar\" />\r\n```\r\n\r\nyou’re going to see a warning from React, and `foo` won’t actually turn up in the DOM.\r\n\r\nPeople have wanted support for custom attributes since forever: https://github.com/facebook/react/issues/140. Now that we've actually been warning for a whole release, I think it's a good time to flip this behavior, and to set any unknown attributes on the DOM instead of skipping them.\r\n\r\nSo the goal is that you would actually see `<div foo=\"bar\" />` in your DOM.\r\n\r\nThere is just one caveat: we still haven't updated all FB callsites to fix this warning. Ideally we want to stay synced with open source version of React, but I don't want React 16 to be delayed because of this, nor do I want delaying this change until React 17. So I think we should bite the bullet, introduce an [internal feature flag](https://github.com/facebook/react/blob/master/src/renderers/dom/shared/ReactDOMFeatureFlags.js) that will differ for our FB builds, and enable the new behavior in the open source version. Some time during React 16 we’ll finish updating our code, and remove the conditional code path.\r\n\r\nI don’t think anybody on the team has time to work on this right now, so I’d love this to be a community contribution. Requirements as I see them:\r\n\r\n* Introduce a new feature flag to `ReactDOMFeatureFlags`. Something like `shouldSetCustomAttributes`. Set it to `true`.\r\n* Keep the warning about unknown DOM props but only enable it if `shouldSetCustomAttributes` is `false`. Make sure tests still cover this case (you can override feature flag in tests—see existing tests concerning feature flags for how to do it).\r\n* Add new behavior of falling back to `setAttribute` for any unknown properties (rather than skipping them like we do now). Add tests for it. Those tests shouldn’t need to touch the feature flag (since it’s the new default behavior). Make sure this works both for SVG and HTML.\r\n* Make sure Fiber tests pass (when you create a PR, there are instructions on running them).\r\n* This might affect server rendering test suite previously added by @aickin. You might need to change those tests to verify the new behavior. It’s fine to only verify the *new* behavior there (with flag set to `true`) since we don’t use server rendering ourselves.\r\n* Good point from @syranide: https://github.com/facebook/react/issues/9477#issuecomment-296170676. We should still warn for known attributes that are miscapitalized. (It’s fine if that’s a different warning message than the one behind the flag.)\r\n* Send the PR!\r\n\r\nPlease let me know if you’d like to take this. It could turn out a little complicated (there won’t be a *lot* of guidance from us on this so we probably can’t coach a completely new contributor for this task). But if you sent a PR or two to React, you should be able to do it.\r\n\r\n--\r\n\r\n## Update: @nhunzaker already started a PR on this a while back (https://github.com/facebook/react/pull/7311) and might be able to rebase it. Let’s discuss the plan more in more specifics below (https://github.com/facebook/react/issues/9477#issuecomment-296179889).",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
