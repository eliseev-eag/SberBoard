{
  "url": "https://api.github.com/repos/facebook/react/issues/13867",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13867/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13867/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13867/events",
  "html_url": "https://github.com/facebook/react/issues/13867",
  "id": 370884667,
  "node_id": "MDU6SXNzdWUzNzA4ODQ2Njc=",
  "number": 13867,
  "title": "Need a react component function to check nextprops just before re-render to stop a redirecting action in react component. ",
  "user": {
    "login": "deepa-a",
    "id": 5584624,
    "node_id": "MDQ6VXNlcjU1ODQ2MjQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/5584624?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/deepa-a",
    "html_url": "https://github.com/deepa-a",
    "followers_url": "https://api.github.com/users/deepa-a/followers",
    "following_url": "https://api.github.com/users/deepa-a/following{/other_user}",
    "gists_url": "https://api.github.com/users/deepa-a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/deepa-a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/deepa-a/subscriptions",
    "organizations_url": "https://api.github.com/users/deepa-a/orgs",
    "repos_url": "https://api.github.com/users/deepa-a/repos",
    "events_url": "https://api.github.com/users/deepa-a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/deepa-a/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-10-17T03:34:28Z",
  "updated_at": "2018-10-19T18:54:27Z",
  "closed_at": "2018-10-19T18:54:26Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nNeed help with an edge case. Not sure what is the good practice.\r\n\r\n**What is the current behavior?**\r\nUsing react + redux + redux saga for my application.\r\n\r\nI have a 'Home' screen with a search bar, where I search for a subscriber. The action is dispatched and the saga does the API call and the requirement is to redirect to the 'Subscriber' screen with the result. I read the good practice is not to redirect from the sagas/reducers and redirect from the component using `<Redirect>` of react-router-dom. \r\nSo In my 'Home' component, I check for the props and if I have the result, I redirect to the 'Subscriber' results page.\r\nThe issue is Redux stores the state and every time I navigate to 'Home' it gets redirected because the store persist the results.\r\n\r\n```jsx\r\nclass Home extends React.Component {\r\n  render() {\r\n    const { actions, subscriberDetails } = this.props;\r\n    if (subscriberDetails) {\r\n      return <Redirect to=\"/subscriber-details\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Search subscriber</h1>\r\n        <input type=\"text\" name=\"Subscriber\" />\r\n        <button onClick={actions.getSubscriber}>Get Subscriber</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  actions: PropTypes.object.isRequired,\r\n  subscriberDetails: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state, ownprops) => {\r\n  return {\r\n    subscriberDetails: state.subscriber.details\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(subscriberActions, dispatch)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n```\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nThe redirect should happen only when I search for the a 'Subscriber' and not every time I navigate to the Home screen (results are persisted).\r\n\r\nTo solve this I need a function which is called just before the component re renders on update to check the 'props' in my 'Home' component, where I can see if the props has the result and redirects to the required screen. The 'componentWillRecieveProps' function has made unsafe. \r\nI use shouldComponentUpdate function to solve this issue, where I check for nextprops and set a variable to redirect only when the component update. Which works fine. \r\n\r\n```js\r\nshouldComponentUpdate(nextprops, nextstate){\r\n        this.redir = nextprops.subscriberDetails? <Redirect to='/subscriber-details'/> : null;\r\n        return true;\r\n}\r\n```\r\n\r\nI just need to confirm is there any other way to solve this issue or can I use `shouldComponentUpdate` function for this?\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nWindows\r\n`\"react\": \"^16.5.2\"`\r\n `\"react-dom\": \"^16.5.2\"`\r\n`\"react-router-dom\": \"^4.3.1\"`\r\n`\"redux\": \"^4.0.0\"`\r\n`\"redux-saga\": \"^0.16.2\"`",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
