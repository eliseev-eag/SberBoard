{
  "url": "https://api.github.com/repos/facebook/react/issues/3227",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3227/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3227/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3227/events",
  "html_url": "https://github.com/facebook/react/issues/3227",
  "id": 58488339,
  "node_id": "MDU6SXNzdWU1ODQ4ODMzOQ==",
  "number": 3227,
  "title": "Optimizing Compiler: Tagging ReactElements",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 180616330,
      "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
      "name": "Component: Optimizing Compiler",
      "color": "bfdadc",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2015-02-22T03:21:18Z",
  "updated_at": "2016-01-22T20:55:02Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "body": "We can make more optimized reconciliation by tagging ReactElements with the \"hidden class\" of their props.\n\nFor example, this is guaranteed to always have three props: `className`, `width`, `children`.\n\n``` javascript\n<div className=\"foo\" style={{ width: w, height: 100 }}>{c}</div>\n```\n\nIf we could tag every element with these properties with a unique ID:\n\n``` javascript\n{ __t: 7, type: 'div', props: { className: 'foo', style: { width: w, height: 5 }, children: c } }\n```\n\nThen we could use the hidden class to generate an optimized diffing algorithm for these instead of iterating over the properties. Presumably, we would only need to do this for `type: <string>` since we only diff native components.\n\nBonus points if we can determine which properties are constant. Perhaps using a property descriptor object:\n\n``` javascript\n// Constant properties are annotated as 1, other properties are excluded and inferred by props.\nvar t = { className: 1, style: { height: 1 } };\n{ __t: t, type: 'div', props: { className: 'foo', style: { width: w, height: 5 }, children: c } }\n```\n\nWe would use a heuristic inside React to determine when to create an optimized differ. For example, after 10+ updates to the same component. Just like a JIT would do.\n\n``` javascript\nif (oldElement.__t === newElement.__t) {\n  numberOfUpdates++;\n} else {\n  numberOfUpdates = 0;\n}\n\nif (numberOfUpdates === 10) {\n  optimizedDiffer = generateOptimizedDiffer(newElement);\n  optimizedDiffer(oldElement, newElement);\n} else if (numberOfUpdates > 10) {\n  optimizedDiffer(oldElement, newElement);\n} else {\n  manualDiffing(oldElement, newElement);\n}\n```\n",
  "closed_by": null
}
