{
  "url": "https://api.github.com/repos/facebook/react/issues/14447",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14447/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14447/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14447/events",
  "html_url": "https://github.com/facebook/react/issues/14447",
  "id": 391429758,
  "node_id": "MDU6SXNzdWUzOTE0Mjk3NTg=",
  "number": 14447,
  "title": "Q: About function as state",
  "user": {
    "login": "jascodes",
    "id": 1231593,
    "node_id": "MDQ6VXNlcjEyMzE1OTM=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1231593?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jascodes",
    "html_url": "https://github.com/jascodes",
    "followers_url": "https://api.github.com/users/jascodes/followers",
    "following_url": "https://api.github.com/users/jascodes/following{/other_user}",
    "gists_url": "https://api.github.com/users/jascodes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jascodes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jascodes/subscriptions",
    "organizations_url": "https://api.github.com/users/jascodes/orgs",
    "repos_url": "https://api.github.com/users/jascodes/repos",
    "events_url": "https://api.github.com/users/jascodes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jascodes/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-12-16T02:45:27Z",
  "updated_at": "2018-12-21T17:54:23Z",
  "closed_at": "2018-12-21T17:54:23Z",
  "author_association": "NONE",
  "body": "The follow example I try to use function as state and setPlusTen assignment doen't work and maybe not suppose to work.\r\n```\r\nimport React, { useEffect, useState, useLayoutEffect, useRef } from \"react\"\r\nimport { render } from \"react-dom\"\r\n\r\nexport const App = () =>\r\n{\r\n    const [time, setTime] = useState( 0 )\r\n    const [plusTen, setPlusTen] = useState<( () => void ) | null>( null )\r\n\r\n    useLayoutEffect( () =>\r\n    {\r\n        const timeUpdate = () =>\r\n        {\r\n            console.log( \"time update\" )\r\n            setTime( time => time + 1 )\r\n        }\r\n\r\n        const plusTen_ = () =>\r\n        {\r\n            console.log( \"+10\" )\r\n            setTime( time => time + 10 )\r\n        }\r\n\r\n        setPlusTen( plusTen_ )\r\n        console.log( plusTen_ )\r\n        console.log( plusTen )\r\n\r\n        const interval = setInterval( timeUpdate, 1000 )\r\n\r\n        return () =>\r\n        {\r\n            console.log( \"clear\" )\r\n            clearInterval( interval )\r\n        }\r\n    }, [] )\r\n\r\n    return (\r\n        <>\r\n            <div>{ time }</div>\r\n            <button onClick={ () => { console.log( \"plusTen:\", ( plusTen ) ) } }> +10</button>\r\n        </>\r\n    )\r\n}\r\nrender( <App />, document.getElementById( \"root\" ) )\r\n\r\n```\r\nThe way I am able to do it is using refs like following\r\n```\r\nimport React, { useEffect, useState, useLayoutEffect, useRef } from \"react\"\r\nimport { render } from \"react-dom\"\r\n\r\nexport const App = () =>\r\n{\r\n    const [time, setTime] = useState( 0 )\r\n    const fun = useRef<() => {}>( null )\r\n    useLayoutEffect( () =>\r\n    {\r\n        const timeUpdate = () =>\r\n        {\r\n            console.log( \"time update\" )\r\n            setTime( time => time + 1 )\r\n        }\r\n        const plusTen = () =>\r\n        {\r\n            console.log( \"+10\" )\r\n            setTime( time => time + 10 )\r\n        }\r\n        fun.current = { plusTen }\r\n        const interval = setInterval( timeUpdate, 1000 )\r\n\r\n        return () =>\r\n        {\r\n            console.log( \"clear\" )\r\n            clearInterval( interval )\r\n        }\r\n    }, [] )\r\n    return (\r\n        <>\r\n            <div>{ time }</div>\r\n            <button onClick={ () =>\r\n            {\r\n                console.log( fun )\r\n                fun.current.plusTen()\r\n            } } > +10</button>\r\n        </>\r\n    )\r\n}\r\nrender( <App />, document.getElementById( \"root\" ) )\r\n```\r\nThe issue with this is `fun.current = { plusTen }` as ref.current is supposed to be readonly atleast in @types/react.\r\n\r\nI would really appreciate a less hacky way of doing this. \r\n\r\nThx \r\n",
  "closed_by": {
    "login": "jascodes",
    "id": 1231593,
    "node_id": "MDQ6VXNlcjEyMzE1OTM=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1231593?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jascodes",
    "html_url": "https://github.com/jascodes",
    "followers_url": "https://api.github.com/users/jascodes/followers",
    "following_url": "https://api.github.com/users/jascodes/following{/other_user}",
    "gists_url": "https://api.github.com/users/jascodes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jascodes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jascodes/subscriptions",
    "organizations_url": "https://api.github.com/users/jascodes/orgs",
    "repos_url": "https://api.github.com/users/jascodes/repos",
    "events_url": "https://api.github.com/users/jascodes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jascodes/received_events",
    "type": "User",
    "site_admin": false
  }
}
