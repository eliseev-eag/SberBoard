{
  "url": "https://api.github.com/repos/facebook/react/issues/3392",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3392/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3392/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3392/events",
  "html_url": "https://github.com/facebook/react/issues/3392",
  "id": 60842605,
  "node_id": "MDU6SXNzdWU2MDg0MjYwNQ==",
  "number": 3392,
  "title": "Use parent-context if owner-context is undefined ?",
  "user": {
    "login": "slorber",
    "id": 749374,
    "node_id": "MDQ6VXNlcjc0OTM3NA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/749374?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slorber",
    "html_url": "https://github.com/slorber",
    "followers_url": "https://api.github.com/users/slorber/followers",
    "following_url": "https://api.github.com/users/slorber/following{/other_user}",
    "gists_url": "https://api.github.com/users/slorber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slorber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slorber/subscriptions",
    "organizations_url": "https://api.github.com/users/slorber/orgs",
    "repos_url": "https://api.github.com/users/slorber/repos",
    "events_url": "https://api.github.com/users/slorber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slorber/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2015-03-12T16:01:09Z",
  "updated_at": "2015-03-18T15:17:54Z",
  "closed_at": "2015-03-13T12:10:33Z",
  "author_association": "CONTRIBUTOR",
  "body": "Hi,\n\nI'm a library author (https://github.com/stample/atom-react) trying to migrate to 0.13.\n\nI call React.withContext outside of React around a top-level layout component, so it seems I'm in the special case of parent != owner as there is (I guess), no parent for my top-level component.\n\nAs `React.withContext` is deprecated, I'm trying to replace it with a top-level wrapper component.\n\n```\nvar ChildContextProvider = React.createFactory(React.createClass({\n    displayName: \"ChildContextProvider\",\n    childContextTypes: {\n\n        locales: React.PropTypes.any.isRequired,\n        messages: React.PropTypes.any.isRequired,\n        appContext: React.PropTypes.any.isRequired,\n\n        atom: React.PropTypes.any.isRequired,\n        publishEvent: React.PropTypes.any.isRequired,\n        publishEvents: React.PropTypes.any.isRequired,\n        publishCommand: React.PropTypes.any.isRequired,\n        addEventListener: React.PropTypes.any.isRequired,\n        removeEventListener: React.PropTypes.any.isRequired\n    },\n    getChildContext: function() {\n        return this.props.context;\n    },\n    render: function() {\n        return React.DOM.div({children: this.props.children});\n    }\n}));\n\n\nfunction renderWithContext(component,domNode,context) {\n    var componentWithContext = ChildContextProvider({children: component, context: context});\n    React.render(componentWithContext,domNode);\n}\n\nrenderWithContext(component,node,reactContext);\n```\n\nThis does not work: \n\n```\nWarning: Failed Context Types: Required context `atom` was not specified in `LayoutSection`. warning.js:48\nWarning: Failed Context Types: Required context `publishCommand` was not specified in `LayoutSection`. warning.js:48\nWarning: Failed Context Types: Required context `publishEvents` was not specified in `LayoutSection`. warning.js:48\nWarning: Failed Context Types: Required context `addEventListener` was not specified in `LayoutSection`. warning.js:48\nWarning: Failed Context Types: Required context `removeEventListener` was not specified in `LayoutSection`. warning.js:48\nWarning: owner-based and parent-based contexts differ (values: `undefined` vs `function () { [native code] }`) for key (addEventListener) while mounting LayoutSection (see: http://fb.me/react-context-by-parent) warning.js:48\nWarning: owner-based and parent-based contexts differ (values: `undefined` vs `[object Object]`) for key (atom) while mounting LayoutSection (see: http://fb.me/react-context-by-parent) warning.js:48\nWarning: owner-based and parent-based contexts differ (values: `undefined` vs `function () { [native code] }`) for key (publishCommand) while mounting LayoutSection (see: http://fb.me/react-context-by-parent) warning.js:48\nWarning: owner-based and parent-based contexts differ (values: `undefined` vs `function () { [native code] }`) for key (publishEvents) while mounting LayoutSection (see: http://fb.me/react-context-by-parent) warning.js:48\nWarning: owner-based and parent-based contexts differ (values: `undefined` vs `function () { [native code] }`) for key (removeEventListener) while mounting LayoutSection (see: http://fb.me/react-context-by-parent) \n```\n\nTo make it work, I have to use:\n\n```\nfunction renderWithContext(component,domNode,context) {\n    var componentWithContext = ChildContextProvider({children: component, context: context});\n    React.render(componentWithContext,domNode);\n}\n\nReact.withContext(reactContext,function() {\n    renderWithContext(component,node,reactContext);\n}.bind(this));\n```\n\nA weird this is that the following, which is barely the same to me (providing an \"owner\"?), does not work:\n\n```\nfunction renderWithContext(component,domNode,context) {\n    React.withContext(context,function() {\n        var componentWithContext = ChildContextProvider({children: component, context: context});\n        React.render(componentWithContext, domNode);\n    });\n}\n\nrenderWithContext(component,node,reactContext);\n```\n\n---\n# Summary\n\nIt seems to me there's a little problem when parent != owner.\n- Parent provided, owner not provided: context is not accessible as it still uses the owner. App complains a lot (warning owner = undefined VS parent = defined).\n- Parent not provided, owner provided: context is accessible and app works fine. App complains a lot (warning owner = defined VS parent = undefined).\n- Both provided: app works, there's only a deprecation warning for `withContext`\n\nSo in any case, I can't get rid of all warnings and I'm forced to keep using a deprecated feature.\n\nAnd the best case (providing both owner context = parent context) leads to keeping some code like this:\n\n```\nfunction renderWithContext(component,domNode,context) {\n    var componentWithContext = ChildContextProvider({children: component, context: context});\n    React.render(componentWithContext,domNode);\n}\n\nReact.withContext(reactContext,function() {\n    renderWithContext(component,node,reactContext);\n}.bind(this));\n```\n\nI think maybe if owner context is never used in the whole app, maybe React could use parent context instead of owner context\n",
  "closed_by": {
    "login": "slorber",
    "id": 749374,
    "node_id": "MDQ6VXNlcjc0OTM3NA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/749374?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slorber",
    "html_url": "https://github.com/slorber",
    "followers_url": "https://api.github.com/users/slorber/followers",
    "following_url": "https://api.github.com/users/slorber/following{/other_user}",
    "gists_url": "https://api.github.com/users/slorber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slorber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slorber/subscriptions",
    "organizations_url": "https://api.github.com/users/slorber/orgs",
    "repos_url": "https://api.github.com/users/slorber/repos",
    "events_url": "https://api.github.com/users/slorber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slorber/received_events",
    "type": "User",
    "site_admin": false
  }
}
