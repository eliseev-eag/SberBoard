{
  "url": "https://api.github.com/repos/facebook/react/issues/15012",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15012/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15012/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15012/events",
  "html_url": "https://github.com/facebook/react/issues/15012",
  "id": 417046710,
  "node_id": "MDU6SXNzdWU0MTcwNDY3MTA=",
  "number": 15012,
  "title": "`data-reactroot=\"\"` lost in server render if element inside `<Context.Provider>`",
  "user": {
    "login": "overlookmotel",
    "id": 557937,
    "node_id": "MDQ6VXNlcjU1NzkzNw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/557937?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/overlookmotel",
    "html_url": "https://github.com/overlookmotel",
    "followers_url": "https://api.github.com/users/overlookmotel/followers",
    "following_url": "https://api.github.com/users/overlookmotel/following{/other_user}",
    "gists_url": "https://api.github.com/users/overlookmotel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/overlookmotel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/overlookmotel/subscriptions",
    "organizations_url": "https://api.github.com/users/overlookmotel/orgs",
    "repos_url": "https://api.github.com/users/overlookmotel/repos",
    "events_url": "https://api.github.com/users/overlookmotel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/overlookmotel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710332294,
      "node_id": "MDU6TGFiZWw3MTAzMzIyOTQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Server%20Rendering",
      "name": "Component: Server Rendering",
      "color": "d4c5f9",
      "default": false
    },
    {
      "id": 40929151,
      "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
      "name": "Type: Bug",
      "color": "b60205",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-03-04T23:46:54Z",
  "updated_at": "2019-03-25T21:07:33Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug.\r\n\r\n**What is the current behavior?**\r\n\r\nCalling `.renderToString()` on `<React.Fragment><div>Hello!</div></React.Fragment>` produces `<div data-reactroot=\"\">Hello!</div>`.\r\n\r\nHowever, many other combinations of DOM root element within \"invisible\" React elements are rendered without `data-reactroot=\"\"`.\r\n\r\ne.g. all of the following produce `<div>Hello!</div>` (without `data-reactroot=\"\"`):\r\n\r\n```\r\n<React.Fragment><React.Fragment><div>Hello!</div></React.Fragment></React.Fragment>\r\n\r\n<Context.Provider><div>Hello!</div></Context.Provider>\r\n\r\n<Context.Consumer>{() => <div>Hello!</div>}</Context.Consumer>\r\n\r\n<React.StrictMode><div>Hello!</div></React.StrictMode>\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nSee above.\r\n\r\n**What is the expected behavior?**\r\n\r\nI assume that any of the above examples should produce markup including `data-reactroot=\"\"` on the `div` element.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nIssue present in all versions >= 16.7.0, possibly earlier versions too.\r\n\r\nThis is a minor issue - I guess would only affect where the markup is rehydrated on client side using `.render()` rather than `.hydrate()` - usage which is discouraged. However, using `.render()` to rehydrate is still officially supported.\r\n\r\nI can implement a fix and make a PR. But can anyone confirm that the expected behavior is what I think it is, and that this is indeed a bug?",
  "closed_by": null
}
