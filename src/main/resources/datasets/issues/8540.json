{
  "url": "https://api.github.com/repos/facebook/react/issues/8540",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8540/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8540/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8540/events",
  "html_url": "https://github.com/facebook/react/issues/8540",
  "id": 194583168,
  "node_id": "MDU6SXNzdWUxOTQ1ODMxNjg=",
  "number": 8540,
  "title": "Attach ReactEventListener for ajax/dynamically loaded content",
  "user": {
    "login": "pavelthq",
    "id": 3625675,
    "node_id": "MDQ6VXNlcjM2MjU2NzU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/3625675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pavelthq",
    "html_url": "https://github.com/pavelthq",
    "followers_url": "https://api.github.com/users/pavelthq/followers",
    "following_url": "https://api.github.com/users/pavelthq/following{/other_user}",
    "gists_url": "https://api.github.com/users/pavelthq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pavelthq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pavelthq/subscriptions",
    "organizations_url": "https://api.github.com/users/pavelthq/orgs",
    "repos_url": "https://api.github.com/users/pavelthq/repos",
    "events_url": "https://api.github.com/users/pavelthq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pavelthq/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-12-09T12:16:20Z",
  "updated_at": "2016-12-12T07:22:20Z",
  "closed_at": "2016-12-12T07:22:19Z",
  "author_association": "NONE",
  "body": "Is there any way to attach onChange event listening like we do in Render function. HTML that loaded with AJAX and inserted via `dangerouslySetInnerHTML`\r\n\r\nExample:\r\ntop:\r\n```\r\nimport ChangeEventPlugin from 'react/lib/ChangeEventPlugin'\r\nimport EventConstants from 'react/lib/EventConstants'\r\n```\r\non Render:\r\n` <div ref=\"form\" dangerouslySetInnerHTML={{ __html: this.state.formContent || '' }} />`\r\n\r\nonDidMount:\r\n```\r\najax-> this.setState({\r\n          formContent: response.html\r\n        })\r\n```\r\n\r\nonDidUpdate:\r\n```\r\nthis.refs.form.querySelectorAll('input, textarea, select').forEach((node) => {\r\n      let topChange = EventConstants.topLevelTypes.topChange\r\n      node._hostNode = node\r\n      let event = ChangeEventPlugin.extractEvents(topChange, node, ???)\r\n      console.log(event)\r\n    })\r\n```\r\n\r\nBut can't get it work with callback.\r\n\r\nThe issue is when `dispatchEvent` called `bookKeeping` variable refs to `div` not on dynamically loaded Nodes.\r\n\r\nAny suggestion will be great.\r\n\r\nEDIT:\r\nPossibly looks like I want to trigger `enqueuePutListener` from React Dom manually\r\n\r\nP.S.\r\nI'm trying to work only with Native things. Do not suggest jQuery or document.addEventListener (I looking for multi-browser and multi-input types solutions like is done in React).",
  "closed_by": {
    "login": "pavelthq",
    "id": 3625675,
    "node_id": "MDQ6VXNlcjM2MjU2NzU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/3625675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pavelthq",
    "html_url": "https://github.com/pavelthq",
    "followers_url": "https://api.github.com/users/pavelthq/followers",
    "following_url": "https://api.github.com/users/pavelthq/following{/other_user}",
    "gists_url": "https://api.github.com/users/pavelthq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pavelthq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pavelthq/subscriptions",
    "organizations_url": "https://api.github.com/users/pavelthq/orgs",
    "repos_url": "https://api.github.com/users/pavelthq/repos",
    "events_url": "https://api.github.com/users/pavelthq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pavelthq/received_events",
    "type": "User",
    "site_admin": false
  }
}
