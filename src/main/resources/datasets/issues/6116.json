{
  "url": "https://api.github.com/repos/facebook/react/issues/6116",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6116/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6116/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6116/events",
  "html_url": "https://github.com/facebook/react/issues/6116",
  "id": 136278089,
  "node_id": "MDU6SXNzdWUxMzYyNzgwODk=",
  "number": 6116,
  "title": "a way to render subcomponents into different DOM roots would be a huge win",
  "user": {
    "login": "jedwards1211",
    "id": 1448194,
    "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jedwards1211",
    "html_url": "https://github.com/jedwards1211",
    "followers_url": "https://api.github.com/users/jedwards1211/followers",
    "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
    "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
    "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
    "repos_url": "https://api.github.com/users/jedwards1211/repos",
    "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-02-25T04:35:44Z",
  "updated_at": "2016-02-25T14:09:14Z",
  "closed_at": "2016-02-25T05:47:28Z",
  "author_association": "CONTRIBUTOR",
  "body": "I've been trying to accomplish something that, if only I could figure out a way to do it, would be a killer paradigm for elegant, reusable view components.\n\nI've gotten in the habit of rendering my views like this:\n\n``` jsx\nconst MyView = props => <View {...props}>\n      <Header>\n        <Title>\n          ...\n        </Title>\n      </Header>\n      <Body>\n         ...\n      </Body>\n      <Footer>\n        ...\n      </Footer>\n    </View>;\n```\n\n`<View>`, `<Header>`, etc. are magic components that actually render a component injected via context.  This means that, for instance, in one fell swoop, I can reskin any view as a bootstrap modal or panel, etc.:\n\n``` jsx\nclass Modal extends Component {\n  static childContextTypes: {\n    HeaderSkin: PropTypes.any,\n    TitleSkin: PropTypes.any,\n    ...\n  };\n  getChildContext() {\n    return {\n      HeaderSkin: ModalHeaderSkin, // (adds 'modal-header' class)\n      TitleSkin: ModalTitleSkin, // (adds 'modal-title' class)\n      ...\n    };\n  }\n  ...\n}\n\nclass Panel extends Component {\n  ...\n}\n\nconst modalView = <Modal>\n  <MyView/>\n</Modal>;\n\nconst panelView = <Panel>\n  <MyView/>\n</Panel>;\n```\n\nThis is awesome, and I highly recommend it.  There's just one pesky little thing I can't do in all cases: **animate `Header`, `Body`, and `Title` transitions individually when switching between views**.\n\nI created a `Drilldown` component that provides a special `HeaderSkin` and `BodySkin` to animate transitions from the `Header` and `Body` of one view to those of another.  It crossfades the header and pans the body horizontally, like typical drilldowns.  The transitions work when the two views are of the same React Component type, but not when they are different -- because React can't keep the same Component instance mounted.\n\n**I'm wondering if there could be a well-designed system for rendering components like my `Header`, `Body`, etc. _through some kind of wormhole_ into a placeholder controlled by an ancestor component.** With that capability, it would then be possible to drop view components of any type into my `Drilldown` and animate the transitions between their subcomponents.\n\nI remember trying to create such a wormhole once when I was less experienced with React.  But it quickly became hacky and I never got it working completely.  It basically revolved around **passing elements to some callback in `this.context` inside `render()` methods**, and the callback would then put the rendered element in the desired location in the ancestor.  I seem to remember there being a problem with things like refs though, and also needing to use `setTimeout` to delay the rendering of the wormholed component (since `render()` triggering other rendering is not kosher).\n\nHas anyone tried to do similar things?  Thoughts?\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
