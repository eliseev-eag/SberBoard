{
  "url": "https://api.github.com/repos/facebook/react/issues/3292",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3292/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3292/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3292/events",
  "html_url": "https://github.com/facebook/react/issues/3292",
  "id": 59405574,
  "node_id": "MDU6SXNzdWU1OTQwNTU3NA==",
  "number": 3292,
  "title": "Memory leak",
  "user": {
    "login": "omerts",
    "id": 4996164,
    "node_id": "MDQ6VXNlcjQ5OTYxNjQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/4996164?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/omerts",
    "html_url": "https://github.com/omerts",
    "followers_url": "https://api.github.com/users/omerts/followers",
    "following_url": "https://api.github.com/users/omerts/following{/other_user}",
    "gists_url": "https://api.github.com/users/omerts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/omerts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/omerts/subscriptions",
    "organizations_url": "https://api.github.com/users/omerts/orgs",
    "repos_url": "https://api.github.com/users/omerts/repos",
    "events_url": "https://api.github.com/users/omerts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/omerts/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2015-03-01T16:58:07Z",
  "updated_at": "2015-03-01T17:05:58Z",
  "closed_at": "2015-03-01T17:05:23Z",
  "author_association": "NONE",
  "body": "## Sorry it was a bug in my code.\n\nHey,\n\nI did a few performance comparisons with Polymer.js. \nI am basically requesting a JSON file with about 10,000 colors, shuffling the colors, and setting the new colors array as the state (not concating, but replacing the previous array). It is working fast and nice, but looking at chorme's task manager, it looks like there is a memory leak. \n\nThis is what it looks like:\n![image](https://cloud.githubusercontent.com/assets/4996164/6431746/0e5e85ce-c043-11e4-92b0-aaee8fea8ec5.png)\n\nTask Manager:\n![image](https://cloud.githubusercontent.com/assets/4996164/6431750/3d55b01e-c043-11e4-997b-8271f01adeca.png)\n\nThe code:\n\n``` html\n<!DOCTYPE html>\n<html>\n\n<head>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\">\n  <title>Polymer vs React, the SHOWDOWN!</title>\n  <script src=\"build/react.js\"></script>\n  <script src=\"build/JSXTransformer.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n  <style>\n    ul {list-style-type: none;}\n  </style>\n  <script>\n  function shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n  </script>\n</head>\n\n<body>\n\n  <script type=\"text/jsx\">\n    var SquareTest = React.createClass({\n    loadCommentFromServer: function(){ \n      this.state.counter++;     \n      $.ajax({\n        url: this.props.url,\n        dataType: 'json',\n        success: function(data) {\n          var shuffled = shuffle(data);\n          this.setState({data: shuffled});\n        }.bind(this),\n        error: function(xhr, status, err) {\n          console.error(this.props.url, status, err.toString());\n        }.bind(this)\n      });\n    },\n    componentDidMount: function(){\n      setInterval(this.loadCommentFromServer, this.props.pollInterval);\n    },\n    getInitialState: function() {\n      return {data: [], counter: 0};\n    },\n    render: function() {      \n      var squares = this.state.data.map(function(square) {\n            return (<li style={{\"backgroundColor\": square.color}}>\n                      {square.color}\n                    </li>);           \n      });\n\n      return (<div>\n                <div>Cycles: {this.state.counter}</div>\n                <div>Count: {this.state.data.length}</div>\n                <ul>{squares}</ul>\n              </div>);      \n      }\n    });\n\n    React.render(<SquareTest url=\"colors.json\" pollInterval={1000} />,\n                 document.getElementById('squarePlaceHolder'));\n  </script>\n\n  <div id=\"squarePlaceHolder\"></div> \n\n</body>\n</html>\n```\n",
  "closed_by": {
    "login": "omerts",
    "id": 4996164,
    "node_id": "MDQ6VXNlcjQ5OTYxNjQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/4996164?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/omerts",
    "html_url": "https://github.com/omerts",
    "followers_url": "https://api.github.com/users/omerts/followers",
    "following_url": "https://api.github.com/users/omerts/following{/other_user}",
    "gists_url": "https://api.github.com/users/omerts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/omerts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/omerts/subscriptions",
    "organizations_url": "https://api.github.com/users/omerts/orgs",
    "repos_url": "https://api.github.com/users/omerts/repos",
    "events_url": "https://api.github.com/users/omerts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/omerts/received_events",
    "type": "User",
    "site_admin": false
  }
}
