{
  "url": "https://api.github.com/repos/facebook/react/issues/5951",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5951/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5951/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5951/events",
  "html_url": "https://github.com/facebook/react/issues/5951",
  "id": 130208289,
  "node_id": "MDU6SXNzdWUxMzAyMDgyODk=",
  "number": 5951,
  "title": "Cannot declaratively specificy select position for controlled input elements",
  "user": {
    "login": "dminkovsky",
    "id": 218725,
    "node_id": "MDQ6VXNlcjIxODcyNQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/218725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dminkovsky",
    "html_url": "https://github.com/dminkovsky",
    "followers_url": "https://api.github.com/users/dminkovsky/followers",
    "following_url": "https://api.github.com/users/dminkovsky/following{/other_user}",
    "gists_url": "https://api.github.com/users/dminkovsky/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dminkovsky/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dminkovsky/subscriptions",
    "organizations_url": "https://api.github.com/users/dminkovsky/orgs",
    "repos_url": "https://api.github.com/users/dminkovsky/repos",
    "events_url": "https://api.github.com/users/dminkovsky/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dminkovsky/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2016-01-31T23:01:44Z",
  "updated_at": "2016-12-05T16:29:45Z",
  "closed_at": "2016-02-25T23:23:33Z",
  "author_association": "NONE",
  "body": "I am working on a component that has a controlled `input` element. The component has an `onChange` handler that manipulates user input before setting the value back on the `input`'s `value` prop. As a result of this manipulation, the caret position as restored by React may be different than where the user was typing.\n\nTo control this situation, I keep track of the caret position in the component's state:\n\n```\nonKeyUp({ target }) {                    // also in `onChange`, `onMouseUp`, etc\n    this.saveSelectState(target);\n}\n```\n\nand then set it back to the desired position after the component updates:\n\n```\ncomponentDidUpdate() {\n    const { selectionStart, selectionEnd } = this.state;\n    const { input } = this.refs;\n\n    try {        \n        if (input === document.activeElement) {\n            input.setSelectionRange(selectionStart, selectionEnd);\n        }\n    } catch(e) {}\n}\n```\n\nThe API I desire, however, would be more like: \n\n```\n<input\n    type='text'\n    selectionStart={ 5 }\n    selectionEnd={ 5 }\n    ... and so on\n/>\n```\n\nIt was pretty simple to implement this abstraction for myself, but it seems like something that's actually missing from React. I think this goes along well with the idea that React is an API for declaratively controlling UI components' state.\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
