{
  "url": "https://api.github.com/repos/facebook/react/issues/13724",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13724/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13724/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13724/events",
  "html_url": "https://github.com/facebook/react/issues/13724",
  "id": 363535581,
  "node_id": "MDU6SXNzdWUzNjM1MzU1ODE=",
  "number": 13724,
  "title": "setState is not working component remounte",
  "user": {
    "login": "azatTemirbek",
    "id": 12012594,
    "node_id": "MDQ6VXNlcjEyMDEyNTk0",
    "avatar_url": "https://avatars3.githubusercontent.com/u/12012594?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/azatTemirbek",
    "html_url": "https://github.com/azatTemirbek",
    "followers_url": "https://api.github.com/users/azatTemirbek/followers",
    "following_url": "https://api.github.com/users/azatTemirbek/following{/other_user}",
    "gists_url": "https://api.github.com/users/azatTemirbek/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/azatTemirbek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/azatTemirbek/subscriptions",
    "organizations_url": "https://api.github.com/users/azatTemirbek/orgs",
    "repos_url": "https://api.github.com/users/azatTemirbek/repos",
    "events_url": "https://api.github.com/users/azatTemirbek/events{/privacy}",
    "received_events_url": "https://api.github.com/users/azatTemirbek/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-09-25T11:40:34Z",
  "updated_at": "2018-09-25T11:53:05Z",
  "closed_at": "2018-09-25T11:53:05Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n![ezgif-5-aed21438cf](https://user-images.githubusercontent.com/12012594/46012123-da1f1200-c0d0-11e8-8d8b-a66798a1abf2.gif)\r\n\r\n**setState() *bug* when triggered from child component with callback**\r\n\r\n**component mounts first time, unmounts and then when mounts again button onclick=>closeTab=> method`s  setState is not mutating the state **\r\n\r\n** i can not share fullcode becouse it will not work since im using serverside component generator and injecting it with eval() function**\r\n##Code:\r\n```js\r\nclass XPage extends React.PureComponent {\r\n  constructor(props) {\r\n    if (iwb.debugConstructor && iwb.debug) console.log(\"XPage.constructor\", props);\r\n    super(props);\r\n    document.getElementById(\"id-breed\").innerHTML = this.props.grid.name;\r\n    iwb.killGlobalSearch();\r\n    this.state = { activeTab: \"x\" };\r\n    this.tabs = (iwb.tabs[this.props.grid.id])?[...iwb.tabs[this.props.grid.id]]:[{ name: \"x\", icon:\"icon-list\", title: \"Liste\", value: props.grid }];\r\n    /**\r\n     * @description\r\n     * a Function to toggle between tabs\r\n     * @param {Event} event - click event from tab\r\n     */\r\n    this.toggle = event => {\r\n      var activeTab = event.target ? event.target.getAttribute(\"name\") : event;\r\n      if (this.state.activeTab !== activeTab) {\r\n        var {\r\n          tabs\r\n        } = this;\r\n        tabs &&\r\n          tabs.forEach(tempTab => {\r\n            if (tempTab.name === activeTab) {\r\n              this.setState({\r\n                activeTab\r\n              });\r\n              return true;\r\n            }\r\n          });\r\n      }\r\n      return false;\r\n    };\r\n    this.isActionInTabList = action => {\r\n      var {\r\n        tabs\r\n      } = this;\r\n      var stopToFetch = false;\r\n      tabs &&\r\n        tabs.forEach(tempTab => {\r\n          if (tempTab.name === action) {\r\n            this.toggle(action);\r\n            stopToFetch = true;\r\n          }\r\n        });\r\n      return stopToFetch;\r\n    };\r\n    /**\r\n     * @description\r\n     * A function responsible for opening tab getting component from the server and evaluating it on the page\r\n     * @param {String} action - ['1-&toffer_id=4'] EditForm satrts 1-* , InsertForm satrts 2-*\r\n     * @param {String} url - ['showForm?a=1&_fid=3988&twork_position_id=1']\r\n     * @param {Object} params - a varible wich holds request body params\r\n     * @param {Object} callAttributes - [{modal:false}] a variable used to pass params to a component which comes from the server\r\n     */\r\n    this.openTab = (action, url, params, callAttributes) => {\r\n      if (this.state.activeTab !== action) {\r\n        if (this.isActionInTabList(action)) return;\r\n        fetch(url, {\r\n            body: JSON.stringify(params || {}), // must match 'Content-Type' header\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, same-origin, *omit\r\n            headers: {\r\n              \"content-type\": \"application/json\"\r\n            },\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, cors, *same-origin\r\n            redirect: \"follow\", // *manual, follow, error\r\n            referrer: \"no-referrer\" // *client, no-referrer\r\n          })\r\n          .then(\r\n            response =>\r\n            response.status === 200 || response.status === 0 ?\r\n            response.text() :\r\n            Promise.reject(\r\n              new Error(response.text() || response.statusText)\r\n            )\r\n          )\r\n          .then(\r\n            result => {\r\n              if (result) {\r\n                var f;\r\n                eval(\"f=(callAttributes, parentCt)=>{\\n\" + result + \"\\n}\");\r\n                var serverComponent = f(callAttributes || {}, this);\r\n                if (serverComponent) {\r\n                  if (callAttributes && callAttributes.modal) {\r\n                    //console.log(callAttributes);\r\n                    iwb.showModal({\r\n                      body: serverComponent,\r\n                      size: \"lg\",\r\n                      title: serverComponent.props && serverComponent.props.cfg ?\r\n                        serverComponent.props.cfg.name :\r\n                        \"\",\r\n                      color: \"primary\"\r\n                    });\r\n                  } else {\r\n                    var plus = action.substr(0, 1) == \"2\";\r\n                    if (this.isActionInTabList(action)) return;\r\n                    this.tabs.push({\r\n                      name: action,\r\n                      icon: plus ? \"icon-plus\" : \"icon-doc\",\r\n                      title: plus ? \" Yeni\" : \" DÃ¼zenle\",\r\n                      value: serverComponent\r\n                    });\r\n                    this.setState({\r\n                      activeTab: action\r\n                    });\r\n                  }\r\n                }\r\n              } else {\r\n                toastr.error(\"Sonuc Gelmedi\", \" Error\");\r\n              }\r\n            },\r\n            error => {\r\n              toastr.error(error, \"Connection Error\");\r\n            }\r\n          );\r\n      }\r\n    };\r\n    iwb.openTab = this.openTab;\r\n    /**\r\n     * @description\r\n     * A function responsible for closing tab and\r\n     * delating CurrentTab from the state of Xpage Component\r\n     * this function will be passed to whenever new tab is opened\r\n     */\r\n    this.closeTab = (event, forceRelaod = false) => {\r\n      if (this.state.activeTab == \"x\") return;\r\n      this.tabs = this.tabs && this.tabs.filter(tempTab => tempTab.name !== this.state.activeTab);\r\n      if (forceRelaod) {\r\n        this.tabs[\"0\"].value.forceRelaod = Math.floor(Math.random() * 1000);\r\n      }\r\n// simply setState({activeTab:'x'}) =>this is not working as well but this.toggle(\"x\")is working since i have tested by clicking tabs on UI \r\n      this.toggle(\"x\");\r\n    };\r\n    /**\r\n     * @description\r\n     * A function is used to open new FormTab\r\n     * @param {string} url\r\n     */\r\n    this.openForm = (url, callAttributes = {}) => {\r\n      if (url) this.openTab(\"1-\" + Math.random(), url, {}, callAttributes);\r\n      return false;\r\n    };\r\n    iwb.openForm = this.openForm;\r\n  }\r\n  componentWillUnmount() {\r\n    iwb.killGlobalSearch();\r\n    iwb.pages[this.props.grid.id] = Object.assign({},this.state);\r\n    iwb.tabs[this.props.grid.id] = [...this.tabs];\r\n  }\r\n  render() {\r\n    if (iwb.debugRender) if (iwb.debug) console.log(\"XPage.render\");\r\n    return _(\r\n      \"div\",\r\n      {},\r\n      _(\r\n        Row,\r\n        null,\r\n        _(\r\n          Col,\r\n          { className: \"mb-4\" },\r\n          _(\r\n            Nav,\r\n            { tabs: true, hidden: this.tabs.length == 1 },\r\n            this.tabs.map(({ name, icon, title }, index) => {\r\n              return _(\r\n                NavItem,\r\n                { key: \"NavItem\" + index },\r\n                _(\r\n                  NavLinkS,\r\n                  {\r\n                    className: classNames({\r\n                      active: this.state.activeTab === name\r\n                    }),\r\n                    name,\r\n                    onClick: event => this.toggle(event)\r\n                  },\r\n                  _(\"i\", {\r\n                    className: icon,\r\n                    name,\r\n                    title,\r\n                    onClick: event => this.toggle(event)\r\n                  }),\r\n                  title && name != \"x\" && this.state.activeTab === name && title\r\n                )\r\n              );\r\n            })\r\n          ),\r\n          _(\r\n            TabContent,\r\n            { activeTab: this.state.activeTab },\r\n            this.tabs.map(({ name, value }, index) => {\r\n              return _(\r\n                TabPane,\r\n                { key: \"TabPane\" + index, tabId: name },\r\n                value.gridId\r\n                  ? _(XMainGrid, {\r\n                      openTab: this.openTab,\r\n//#########sending event from the child####no need to bind since idecleared method in constructor\r\n                      closeTab: (e,b)=>{ this.closeTab(e,b); },\r\n                      ...value\r\n                    })\r\n                  : value\r\n              );\r\n            })\r\n          )\r\n        )\r\n      )\r\n    );\r\n  }\r\n}\r\n```\r\n** to setState when the component mounted for the second time. **\r\n\r\n**Tested: i have tested toggle by itself from the ui(pasing button), i have tesed state before setState (bu debuugging), i have tested using state clallback setSate({*},()=>{ /**this never runs on second mount**/ console.log(this.state) })  **\r\n\r\n**Tried on 16.3.0 16.5.0**\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
