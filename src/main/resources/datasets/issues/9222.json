{
  "url": "https://api.github.com/repos/facebook/react/issues/9222",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9222/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9222/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9222/events",
  "html_url": "https://github.com/facebook/react/issues/9222",
  "id": 215331178,
  "node_id": "MDU6SXNzdWUyMTUzMzExNzg=",
  "number": 9222,
  "title": "Feature Request: New lifecycle behavior to allow components to delay their own unmounting",
  "user": {
    "login": "bdwain",
    "id": 3982094,
    "node_id": "MDQ6VXNlcjM5ODIwOTQ=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/3982094?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bdwain",
    "html_url": "https://github.com/bdwain",
    "followers_url": "https://api.github.com/users/bdwain/followers",
    "following_url": "https://api.github.com/users/bdwain/following{/other_user}",
    "gists_url": "https://api.github.com/users/bdwain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bdwain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bdwain/subscriptions",
    "organizations_url": "https://api.github.com/users/bdwain/orgs",
    "repos_url": "https://api.github.com/users/bdwain/repos",
    "events_url": "https://api.github.com/users/bdwain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bdwain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-03-20T05:05:59Z",
  "updated_at": "2017-03-20T16:14:20Z",
  "closed_at": "2017-03-20T16:14:19Z",
  "author_association": "NONE",
  "body": "Doing some sort of animation right before a component unmounts is currently very difficult. Being able to delay unmounting by adding a callback to componentWillUnmount (like [react transition group's componentWillLeave](https://facebook.github.io/react/docs/animation.html#componentwillleave)), or adding a new lifecycle method with this functionality (componentIsReadyToUnmount?) would be very helpful for this.\r\n\r\nThe use case where this has come up for me is a list item with a button in it, where clicking the button dispatches a redux action that causes some async work to be done (instead of doing it right in the component). On success, the item is removed from the list. Before it is removed, I'd like to give feedback that the action was successful by showing a checkmark in the button for a second. \r\n\r\nIdeally, this logic would live in a button component, making it really easy to reuse anywhere you have a button. But in order for that to work, the button component itself needs to be able to delay its own unmounting. Ideally with something like this:\r\n\r\n```js\r\n//button.js\r\ncomponentIsReadyToUnmount(callback){\r\n  if(this.props.isSuccessful){\r\n     setTimeout(() => callback(), 1000);\r\n  }\r\n  else{\r\n     callback();\r\n  }\r\n}\r\n\r\n```\r\n\r\nCurrently, this has to be done by preventing all parents of the button from being unmounted also. My current implementation handles this all in redux by delaying the state updates caused by the async work. That logic is purely for display purposes though, and doesn't really belong there. It also makes it hard to replicate that behavior across different types of lists. \r\n\r\nI've also looked at react transition group for this also, but that only works if the transition group element itself is not unmounted. This would make it hard to keep around an object like a button that is deeply nested inside an element that will be removed. \r\n\r\nI recognize that misuse of this feature would lead to confusing/hard to debug behavior and very poor performance, but I think the risk is worth it considering the way this kind of behavior currently needs to be implemented. I think that risk could also be mitigated with useful development mode warnings. One example could be a warning logged if a component holds up unmounting for more than X seconds (X could be globally configurable somehow, with a sensible default).\r\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
