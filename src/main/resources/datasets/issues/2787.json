{
  "url": "https://api.github.com/repos/facebook/react/issues/2787",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2787/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2787/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2787/events",
  "html_url": "https://github.com/facebook/react/issues/2787",
  "id": 53120092,
  "node_id": "MDU6SXNzdWU1MzEyMDA5Mg==",
  "number": 2787,
  "title": "isMounted is not enough to know if you can setState",
  "user": {
    "login": "sbrandwoo",
    "id": 614392,
    "node_id": "MDQ6VXNlcjYxNDM5Mg==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/614392?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sbrandwoo",
    "html_url": "https://github.com/sbrandwoo",
    "followers_url": "https://api.github.com/users/sbrandwoo/followers",
    "following_url": "https://api.github.com/users/sbrandwoo/following{/other_user}",
    "gists_url": "https://api.github.com/users/sbrandwoo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sbrandwoo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sbrandwoo/subscriptions",
    "organizations_url": "https://api.github.com/users/sbrandwoo/orgs",
    "repos_url": "https://api.github.com/users/sbrandwoo/repos",
    "events_url": "https://api.github.com/users/sbrandwoo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sbrandwoo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 46,
  "created_at": "2014-12-30T14:48:39Z",
  "updated_at": "2018-02-22T07:21:51Z",
  "closed_at": "2017-05-28T01:08:21Z",
  "author_association": "NONE",
  "body": "For the sake of this, I will simplify the workflow into three stages:\n1. The component is mounting, you may call setState, isMounted is false\n2. The component is mounted, you may call setState, isMounted is true\n3. The component is unmounted, you must not call setState, isMounted is false\n\nThe particular case I'm worried about is when you trigger a promise (or similar delayed action) from componentWillMount:\n\n``` javascript\n    componentWillMount: function () {\n        doSomething(props).then(function (url) {\n            if (this.isMounted()) {\n                this.setState({url: url});\n            }\n        }.bind(this));\n    }\n```\n\nThe `.then()` could be called in two circumstances, synchronously in the same call stack, or asynchronously in a later stack (I know, mixing async and sync in the same signature is a bad idea, but for the sake of argument). \n\nIn the asynchronous case: the promise above could resolve at any time in the future, so in order to prevent calling setState when we aren't allowed to, we add the `isMounted()` check. But what if the promise resolves while the component is still in the mounting state, outside of the componentWillMount stack?\n- is it possible for this to happen? Is there a chance for other JS to run between componentWillMount and the component being mounted, or are they in the same cycle?\n- if it can, what will happen? Will an error be shown?\n\nIn the synchronous case: we will enter the block still in the mounting state, which means `isMounted()` will be false and my state won't be set.\n\nDepending on the answers to my async questions I can see two outcomes:\n1. Async cannot return before the component is mounted: this is a minor inconvenience that can be solved by coding such that you know what's async and what's not.\n2. Async can return before being mounted: there is no way to know if `setState()` is safe to call or not, as `isMounted()` is incomplete. The user has to manually track the state of the component and if it has been unmounted or not.\n\nThoughts? Have I invented an issue where none exists?\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
