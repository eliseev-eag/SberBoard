{
  "url": "https://api.github.com/repos/facebook/react/issues/94",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/94/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/94/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/94/events",
  "html_url": "https://github.com/facebook/react/issues/94",
  "id": 15587677,
  "node_id": "MDU6SXNzdWUxNTU4NzY3Nw==",
  "number": 94,
  "title": "Scoped css?",
  "user": {
    "login": "chenglou",
    "id": 1909539,
    "node_id": "MDQ6VXNlcjE5MDk1Mzk=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1909539?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chenglou",
    "html_url": "https://github.com/chenglou",
    "followers_url": "https://api.github.com/users/chenglou/followers",
    "following_url": "https://api.github.com/users/chenglou/following{/other_user}",
    "gists_url": "https://api.github.com/users/chenglou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chenglou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chenglou/subscriptions",
    "organizations_url": "https://api.github.com/users/chenglou/orgs",
    "repos_url": "https://api.github.com/users/chenglou/repos",
    "events_url": "https://api.github.com/users/chenglou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chenglou/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2013-06-15T06:52:52Z",
  "updated_at": "2013-07-21T17:13:59Z",
  "closed_at": "2013-07-21T17:13:59Z",
  "author_association": "CONTRIBUTOR",
  "body": "The way React renders DOM is really interesting. I was wondering if there's any plan to include a functionality that sets the style of the rendered content without css name pollution. Something like the following:\n\n``` js\nstyle: function() {\n  return {\n    fruit: {border: '1px solid black'}\n  };\n},\nrender: function() {\n  return <div className=\"fruit\">{'Hello'}</div>;\n}\n```\n\nAnd initialize the style at the beginning by changing the key to something unique, say `fruit-abrt2` (same for the rendered class name). Of course, then there's the concern that a css rule might not reach `fruit` anymore since the class name doesn't actually exists, but I see such a huge benefit here that I believe it's worth thinking over this and find a solution.\n",
  "closed_by": {
    "login": "vjeux",
    "id": 197597,
    "node_id": "MDQ6VXNlcjE5NzU5Nw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/197597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vjeux",
    "html_url": "https://github.com/vjeux",
    "followers_url": "https://api.github.com/users/vjeux/followers",
    "following_url": "https://api.github.com/users/vjeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/vjeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vjeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vjeux/subscriptions",
    "organizations_url": "https://api.github.com/users/vjeux/orgs",
    "repos_url": "https://api.github.com/users/vjeux/repos",
    "events_url": "https://api.github.com/users/vjeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vjeux/received_events",
    "type": "User",
    "site_admin": false
  }
}
