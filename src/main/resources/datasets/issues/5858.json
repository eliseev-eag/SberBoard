{
  "url": "https://api.github.com/repos/facebook/react/issues/5858",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5858/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5858/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5858/events",
  "html_url": "https://github.com/facebook/react/issues/5858",
  "id": 126956875,
  "node_id": "MDU6SXNzdWUxMjY5NTY4NzU=",
  "number": 5858,
  "title": "Callback method doesn't refer to the right \"this\"",
  "user": {
    "login": "manodupont",
    "id": 7568033,
    "node_id": "MDQ6VXNlcjc1NjgwMzM=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7568033?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/manodupont",
    "html_url": "https://github.com/manodupont",
    "followers_url": "https://api.github.com/users/manodupont/followers",
    "following_url": "https://api.github.com/users/manodupont/following{/other_user}",
    "gists_url": "https://api.github.com/users/manodupont/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/manodupont/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/manodupont/subscriptions",
    "organizations_url": "https://api.github.com/users/manodupont/orgs",
    "repos_url": "https://api.github.com/users/manodupont/repos",
    "events_url": "https://api.github.com/users/manodupont/events{/privacy}",
    "received_events_url": "https://api.github.com/users/manodupont/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2016-01-15T20:57:57Z",
  "updated_at": "2016-01-15T21:13:07Z",
  "closed_at": "2016-01-15T21:08:41Z",
  "author_association": "NONE",
  "body": "Let's say I have a component which will add a listener from the \"componentWillMount\" method that will callback a method that is declared into this component.\n\nThe listener gets kicked in, the method is executed, but inside the method, \"this\" doesn't refer to the component (which I want to). Why ?\n\nHeres the full component\n\n``` javascript\nimport React, { Component, PropTypes } from 'react';\nimport emptyFunction from 'fbjs/lib/emptyFunction';\nimport s from './App.scss';\nimport Header from '../Header';\nimport Feedback from '../Feedback';\nimport Footer from '../Footer';\nimport MediaQuery from 'react-responsive';\nimport Sidebar from 'react-sidebar';\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap style for whole project.\nimport '../../public/mybootstrap/dist/css/mybootstrap.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {sidebarOpen: false, sidebarDocked: false};\n  }\n\n  static propTypes = {\n    context: PropTypes.shape({\n      insertCss: PropTypes.func,\n      onSetTitle: PropTypes.func,\n      onSetMeta: PropTypes.func,\n      onPageNotFound: PropTypes.func,\n    }),\n    children: PropTypes.element.isRequired,\n    error: PropTypes.object,\n  };\n\n  static childContextTypes = {\n    insertCss: PropTypes.func.isRequired,\n    onSetTitle: PropTypes.func.isRequired,\n    onSetMeta: PropTypes.func.isRequired,\n    onPageNotFound: PropTypes.func.isRequired,\n  };\n\n  getChildContext() {\n    const context = this.props.context;\n    return {\n      insertCss: context.insertCss || emptyFunction,\n      onSetTitle: context.onSetTitle || emptyFunction,\n      onSetMeta: context.onSetMeta || emptyFunction,\n      onPageNotFound: context.onPageNotFound || emptyFunction,\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"Component App will mount\");\n    this.removeCss = this.props.context.insertCss(s);\n\n    if (canUseDOM) {\n      console.log(\"Component App will mount client side\");\n      var mql = window.matchMedia(`(min-width: 375px)`);\n      mql.addListener(this.mediaQueryChanged);\n      this.setState({mql: mql, sidebarDocked: mql.matches});\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeCss();\n\n    if (canUseDOM) {\n      this.state.mql.removeListener(this.mediaQueryChanged);\n    }\n  }\n\n\n  /**\n   * Open the side bar\n   */\n  onSetSidebarOpen(open) {\n    console.log(\"Set sidebar open\");\n    this.setState({sidebarOpen: open});\n  }\n\n  /**\n   * On Media Query changed (i.e mobile version comes in), we changes the state of the sidebar.\n   */\n  mediaQueryChanged() {\n    if (canUseDOM) {\n      this.setState({sidebarDocked: this.state.mql.matches});\n      console.log(\"media query changed. sidebarDocked = \", this.state.mql.matches);\n    }\n  }\n\n  render() {\n    var sidebarContent = <b>Sidebar content</b>;\n\n    return !this.props.error ? (\n      <div>\n        <Sidebar sidebar={sidebarContent}\n                 open={this.state.sidebarOpen}\n                 docked={this.state.sidebarDocked}\n                 onSetOpen={this.onSetSidebarOpen}>\n          <div>Testing</div>\n        </Sidebar>\n      </div>\n    ) : this.props.children;\n  }\n\n}\n\nexport default App;\n\n```\n\nSo in \"componentWillMount\" a trigger \"mediaQueryChanged\". When mediaQueryChanged is trigger, I set the state with this : \n\n``` javascript\n this.setState({sidebarDocked: this.state.mql.matches});\n```\n\nBut \"this\" doesn't refer to \"App\" (the component here). So Am i supposed to set the state of the component ?\n\nThanks\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
