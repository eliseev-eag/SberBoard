{
  "url": "https://api.github.com/repos/facebook/react/issues/6646",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6646/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6646/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6646/events",
  "html_url": "https://github.com/facebook/react/issues/6646",
  "id": 151721568,
  "node_id": "MDU6SXNzdWUxNTE3MjE1Njg=",
  "number": 6646,
  "title": "Sending events from parents to children easily",
  "user": {
    "login": "mosesoak",
    "id": 24345,
    "node_id": "MDQ6VXNlcjI0MzQ1",
    "avatar_url": "https://avatars1.githubusercontent.com/u/24345?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mosesoak",
    "html_url": "https://github.com/mosesoak",
    "followers_url": "https://api.github.com/users/mosesoak/followers",
    "following_url": "https://api.github.com/users/mosesoak/following{/other_user}",
    "gists_url": "https://api.github.com/users/mosesoak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mosesoak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mosesoak/subscriptions",
    "organizations_url": "https://api.github.com/users/mosesoak/orgs",
    "repos_url": "https://api.github.com/users/mosesoak/repos",
    "events_url": "https://api.github.com/users/mosesoak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mosesoak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2016-04-28T19:17:20Z",
  "updated_at": "2019-03-01T15:12:24Z",
  "closed_at": "2016-04-28T22:21:41Z",
  "author_association": "NONE",
  "body": "Been using React (Native) for half a year now, really enjoying it! I'm no expert but have run up against what seems like a weakness in the framework that I'd like to bring up.\n\n**The problem**\n\n_Sending one-off events down the chain (parent-to-child) in a way that works with the component lifecycle._\n\nThe issue arises from the fact that props are semi-persistent values, which differs in nature from one-time events. So for example if a deep-link URL was received you want to say 'respond to this once when you're ready', not 'store this URL'. The mechanism of caching a one-time event value breaks down if the same URL is then sent again, which is a valid event case.\n\nChildren have an easy and elegant way to communicate back to parents via callbacks, but there doesn't seem to be a way to do this same basic thing the other direction.\n\n**Example cases**\n- A deep-link was received and an app wants to tell child pages to respond appropriately\n- A tab navigator wants to tell a child to scroll to top on secondary tap\n- A list view wants to trigger all of its list items to animate each time the page is shown\n\nFrom everything I've read, the two normal ways to do this are 1)  call a method on a child directly using a ref, or 2) emit an event that children may listen for. But those ignore the component lifecycle, so the child isn't ready to receive a direct call or event yet. \n\nThese also feel clunky compared to the elegance of React's architecture. But React is a one-way top-down model, so the idea of passing one-time events down the component chain seems like it would fit nicely and be a real improvement.\n\n**Best workarounds we've found**\n- Add a 'trigger' state variable in the parent that is a number, and wire this to children. Children use a lifecycle method to sniff for a change to their trigger prop, and then do a known action. We've done this a bunch now to handle some of the cases listed above.\n- (really tacky) Set and then clear a prop immediately after setting it. Yuck.\n\nIs there is some React Way to solve this common need? If so, no one on our team knows of one, and the few articles I've found on the web addressing component communication only suggest dispatching events or calling methods directly refs. Thanks for the open discussion!\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
