{
  "url": "https://api.github.com/repos/facebook/react/issues/2883",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2883/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2883/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2883/events",
  "html_url": "https://github.com/facebook/react/issues/2883",
  "id": 54820926,
  "node_id": "MDU6SXNzdWU1NDgyMDkyNg==",
  "number": 2883,
  "title": "Invariant checking for component classes passed as mixins not fully correct",
  "user": {
    "login": "BinaryMuse",
    "id": 189606,
    "node_id": "MDQ6VXNlcjE4OTYwNg==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/189606?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BinaryMuse",
    "html_url": "https://github.com/BinaryMuse",
    "followers_url": "https://api.github.com/users/BinaryMuse/followers",
    "following_url": "https://api.github.com/users/BinaryMuse/following{/other_user}",
    "gists_url": "https://api.github.com/users/BinaryMuse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BinaryMuse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BinaryMuse/subscriptions",
    "organizations_url": "https://api.github.com/users/BinaryMuse/orgs",
    "repos_url": "https://api.github.com/users/BinaryMuse/repos",
    "events_url": "https://api.github.com/users/BinaryMuse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BinaryMuse/received_events",
    "type": "User",
    "site_admin": true
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-01-19T22:36:00Z",
  "updated_at": "2016-10-27T14:33:26Z",
  "closed_at": "2016-10-27T14:33:26Z",
  "author_association": "CONTRIBUTOR",
  "body": "In d9fe40e1476d056629b9b7a28d05fd50246c0ed3,\n\n``` javascript\nfunction mixSpecIntoComponent(Constructor, spec) {\n  // ...\n\n  invariant(\n    !ReactLegacyElement.isValidFactory(spec),\n    'ReactCompositeComponent: You\\'re attempting to ' +\n    'use a component class as a mixin. Instead, just use a regular object.'\n  );\n```\n\nchanged to\n\n``` javascript\nfunction mixSpecIntoComponent(Constructor, spec) {\n  // ...\n\n  invariant(\n    typeof spec !== 'function',\n    'ReactClass: You\\'re attempting to ' +\n    'use a component class as a mixin. Instead, just use a regular object.'\n  );\n```\n\nHowever, `spec` simply being a function doesn't correctly fully identify this error. As an example, I have the following code in Fluxxor:\n\n``` javascript\nvar FluxMixin = function(React) {\n  return {\n    componentWillMount: function() {\n      // ...\n    },\n\n    // ...\n  };\n};\n\nFluxMixin.componentWillMount = function() {\n  throw new Error(\"Fluxxor.FluxMixin is a function that takes React as a \" +\n    \"parameter and returns the mixin, e.g.: mixins[Fluxxor.FluxMixin(React)]\");\n};\n```\n\nTests around the messaging started failing when using React 0.13.0-alpha since `FluxMixin` is technically a function. Is there another conditional that would better identify passing a component class as a mixin?\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
