{
  "url": "https://api.github.com/repos/facebook/react/issues/7218",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7218/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7218/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7218/events",
  "html_url": "https://github.com/facebook/react/issues/7218",
  "id": 164413513,
  "node_id": "MDU6SXNzdWUxNjQ0MTM1MTM=",
  "number": 7218,
  "title": "Would like to make sure the lifecycle of React and usage of jQuery datatable with React.",
  "user": {
    "login": "Marswang92",
    "id": 14301745,
    "node_id": "MDQ6VXNlcjE0MzAxNzQ1",
    "avatar_url": "https://avatars0.githubusercontent.com/u/14301745?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Marswang92",
    "html_url": "https://github.com/Marswang92",
    "followers_url": "https://api.github.com/users/Marswang92/followers",
    "following_url": "https://api.github.com/users/Marswang92/following{/other_user}",
    "gists_url": "https://api.github.com/users/Marswang92/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Marswang92/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Marswang92/subscriptions",
    "organizations_url": "https://api.github.com/users/Marswang92/orgs",
    "repos_url": "https://api.github.com/users/Marswang92/repos",
    "events_url": "https://api.github.com/users/Marswang92/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Marswang92/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-07-07T21:39:35Z",
  "updated_at": "2016-07-07T22:33:20Z",
  "closed_at": "2016-07-07T22:33:20Z",
  "author_association": "NONE",
  "body": "Hey, guys. I'm a freshman of React and facing some problems now. I'd like to fetch some data from server and show them in a table. I create some features to deal with the loading and error statues. I'd like to render a spinner when the data is loading, an error message if there're some error occured, and the datatable if everything works perfectly. \n\nBut here's the issue, in which place should I run the **'ProductRun'** function which initialized the datatable? I tried to put it in ComponentDidMount and componentWillUpdate, but nothing works. I even trie to put it into the render function, but still got nothing. Anybody can show me a way to let it work? Really appreciate!\n\nHere's the component:\n\n```\nimport React from 'react';\nimport ContentWrapper from '../../components/Layout/ContentWrapper';\nimport { Grid, Row, Col, Panel, Button, Table } from 'react-bootstrap';\nimport ProductsRun from './products_run';\nimport { Link } from 'react-router';\nimport Spinner from '../../components/widgets/spinner';\n\nclass Products extends React.Component {\n    componentDidMount() {\n        this.props.fetchProducts();\n    }\n\n    componentWillUpdate(nextProps) {\n        if (!nextProps.isloading && !nextProps.error) {\n            ProductsRun();\n        }\n    }\n\n    // Helper function to render an icon for the stock statues of product.\n\n    renderStock(isInStock) {\n        if (isInStock) return <span className=\"label label-success\">Stock</span>;\n        else return <span className=\"label label-danger\">Out of Stock</span>\n    }\n\n    setCurrentProduct(e) {\n        const product = JSON.parse(e.target.dataset.product);\n        this.props.selectProduct(product);\n    }\n\n\n    // Helper function to render all attributes of the products in a table.\n\n    renderProducts() {\n        return this.props.products.map((product) => {\n\n            const {\n                ProductNum,\n                Name,\n                Description,\n                Item_Cost,\n                Reference_Price,\n                In_Stock,\n                Package,\n                Package_Size,\n                Product_Size,\n                Product_Group,\n                Product_Categories,\n                Vendor,\n                Default_Purchasor\n            } = product;\n\n            return (\n                <tr key={ProductNum}>\n                    <td>{ProductNum}</td>\n                    <td>{Name}</td>\n                    <td>{Description}</td>\n                    <td>{Item_Cost}</td>\n                    <td>{Reference_Price}</td>\n                    <td className=\"text-center\">\n                        {this.renderStock(In_Stock) }\n                    </td>\n                    <td>{Package}</td>\n                    <td>{Package_Size}</td>\n                    <td>{Product_Group}</td>\n                    <td>{Product_Categories}</td>\n                    <td>{Vendor}</td>\n                    <td>{Default_Purchasor}</td>\n                    <td>\n                        <Link to={\"products/\" + ProductNum}>\n                            <i className=\"fa fa-pencil-square-o\"\n                                onClick={this.setCurrentProduct.bind(this) }\n                                data-product={JSON.stringify(product) } />\n                        </Link>\n                    </td>\n                </tr>\n            )\n        }\n        )\n    }\n\n    render() {\n        if (this.props.isLoading && !this.props.error) return <ContentWrapper><br/><Spinner/></ContentWrapper>\n        else if (this.props.error) return <ContentWrapper><div className=\"alert alert-danger\">{this.props.error.message}</div></ContentWrapper>\n        else {\n            return (\n                <ContentWrapper>\n                    <div className=\"content-heading\">Products</div>\n                    <Table id=\"datatable1\" responsive striped hover className=\"b0\">\n                        <thead>\n                            <tr>\n                                <th style={{ minWidth: \"40px\" }}>\n                                    <strong>No.</strong>\n                                </th>\n                                <th>\n                                    <strong>Name</strong>\n                                </th>\n                                <th style={{ minWidth: \"200px\" }}>\n                                    <strong>Description</strong>\n                                </th>\n                                <th style={{ minWidth: \"75px\" }}>\n                                    <strong>Item Cost</strong>\n                                </th>\n                                <th style={{ minWidth: \"100px\" }}>\n                                    <strong>Reference Price</strong>\n                                </th>\n                                <th className=\"text-center\" style={{ minWidth: \"80px\" }}>\n                                    <strong>In Stock</strong>\n                                </th>\n                                <th>\n                                    <strong>Package</strong>\n                                </th>\n                                <th style={{ minWidth: \"90px\" }}>\n                                    <strong>Package Size</strong>\n                                </th>\n                                <th>\n                                    <strong>Group</strong>\n                                </th>\n                                <th style={{ width: \"80px\" }}>\n                                    <strong>Categories</strong>\n                                </th>\n                                <th>\n                                    <strong>Vendor</strong>\n                                </th>\n                                <th style={{ minWidth: \"110px\" }}>\n                                    <strong>Default Purchasor</strong>\n                                </th>\n                                <th>\n                                    <strong>VIEW</strong>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.renderProducts() }\n                        </tbody>\n                    </Table>\n                </ContentWrapper>\n            );\n        }\n    }\n\n}\n\nexport default Products;\n```\n\nHere's the ProductRun function:\n\n```\nexport default () => {\n    $('#datatable1').dataTable({\n        'paging': true, // Table pagination\n        'ordering': true, // Column ordering\n        'info': true, // Bottom left status text\n        // Text translation options\n        // Note the required keywords between underscores (e.g _MENU_)\n        oLanguage: {\n            sSearch: 'Search all columns:',\n            sLengthMenu: '_MENU_ records per page',\n            info: 'Showing page _PAGE_ of _PAGES_',\n            zeroRecords: 'Nothing found - sorry',\n            infoEmpty: 'No records available',\n            infoFiltered: '(filtered from _MAX_ total records)'\n        }\n    });\n}\n```\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
