{
  "url": "https://api.github.com/repos/facebook/react/issues/8111",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8111/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8111/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8111/events",
  "html_url": "https://github.com/facebook/react/issues/8111",
  "id": 185445324,
  "node_id": "MDU6SXNzdWUxODU0NDUzMjQ=",
  "number": 8111,
  "title": "Children components cannot always be a blackbox to their parent.",
  "user": {
    "login": "davidnormo",
    "id": 881849,
    "node_id": "MDQ6VXNlcjg4MTg0OQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/881849?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidnormo",
    "html_url": "https://github.com/davidnormo",
    "followers_url": "https://api.github.com/users/davidnormo/followers",
    "following_url": "https://api.github.com/users/davidnormo/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidnormo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidnormo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidnormo/subscriptions",
    "organizations_url": "https://api.github.com/users/davidnormo/orgs",
    "repos_url": "https://api.github.com/users/davidnormo/repos",
    "events_url": "https://api.github.com/users/davidnormo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidnormo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-10-26T16:31:02Z",
  "updated_at": "2016-10-26T16:55:29Z",
  "closed_at": "2016-10-26T16:39:41Z",
  "author_association": "NONE",
  "body": "Perhaps this is already solved but I've had trouble finding a solution I'm happy with. Our scenario is as follows:\n\n```\nfunction A() {\n  return <div>Hello world!</div>;\n}\n\nfunction Disable(props) {\n  return <div className=\"disabled\">{props.children}</div>;\n}\n\nfunction B() {\n  return <Disable><A /></Disable>;\n}\n```\n\nSo component A doesn't know anything about being disabled or not. Component B, the owner, decides to disable component A by wrapping it in component Disable. Easy enough so far. We like this pattern, it means we can disable any component we like.\n\nHowever we started getting into trouble when the div that Disable adds to the DOM starts to mess with styling, flexbox in most of our cases. Component A might have some styles such as `flex-shrink: 2` which now Disable needs to replicate some how.\n\nI think our tidiest solution has been for Component A to expose a `className` prop, that can be used to pass down the \"disabled\" class. But this means any component we may want to disable needs to also expose a `className` prop. Is this the accepted approach to the problem? Or is there something I'm missing?\n\nThanks\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
