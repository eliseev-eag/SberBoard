{
  "url": "https://api.github.com/repos/facebook/react/issues/14636",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14636/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14636/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14636/events",
  "html_url": "https://github.com/facebook/react/pull/14636",
  "id": 400948460,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ2MDE2OTg0",
  "number": 14636,
  "title": "Add eslint-plugin-react-hooks/exhaustive-deps rule to check stale closure dependencies",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": true,
  "assignee": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bvaughn",
      "id": 29597,
      "node_id": "MDQ6VXNlcjI5NTk3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2019-01-19T01:54:30Z",
  "updated_at": "2019-02-21T19:53:10Z",
  "closed_at": "2019-02-20T18:18:59Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/14636",
    "html_url": "https://github.com/facebook/react/pull/14636",
    "diff_url": "https://github.com/facebook/react/pull/14636.diff",
    "patch_url": "https://github.com/facebook/react/pull/14636.patch"
  },
  "body": "## For instructions and feedback, see the issue instead:\r\n## >>> https://github.com/facebook/react/issues/14920 <<<\r\n\r\n--------\r\n\r\nThere's some polish missing (see checklist below) but a basic version should be working.\r\n\r\n----------------------\r\n\r\n\r\nSupersedes https://github.com/facebook/react/pull/14048 and later https://github.com/facebook/react/pull/14052. (Thanks @calebmer for starting this and @jamiebuilds for fixing the issues in previous PR.)\r\n\r\nI've decided to largely start the reporting part from scratch. In particular, I feel like the previous reporting that was centered around usage sites was too noisy:\r\n\r\n<img width=\"301\" alt=\"screen shot 2019-01-19 at 12 06 48 am\" src=\"https://user-images.githubusercontent.com/810438/51420395-97a2a900-1b89-11e9-9ea3-e0caca4ac09a.png\">\r\n\r\n(^^ I **don't** this is the right approach)\r\n\r\nIt made it seem like there's something wrong with your function body, but the wrong part is in the dependency list. It was also unclear how autofix would work (would there be one autofix per missing dep?) Instead the ideal experience (IMO) is that you just make edits, and when the deps are wrong, only deps are highlighted. If you really know what you're trying, you just need to `eslint-disable` that line alone rather than many.\r\n\r\nWith that insight, the approach I'm taking is to:\r\n\r\n* **Always report the dependency array itself.** This ensures the user blames the array rather than the actual code. It's where you want to go to fix it, and where you can disable the line if you need to.\r\n* **Always allow auto-fix.** By default, auto-fix should make a reasonable attempt at guessing the deps. We might get it a bit wrong if the inputs are mutable but with special handling for refs (`.current`) we should be right most cases.\r\n* **Make minimal changes.** As much as possible, we should preserve the original code and intent. If the user wants to order them as alphabet, cool. If they want to add the new one at the end, fine. Auto-fix should suggest the closest \"fix\" to the list we already have, and shouldn't flag any other valid lists (e.g. `[props]` over `[props.x]`, or `[x, y]` over `[y, x]`) as needing fixes. User should not need to \"fight\" with auto-fix except rare use cases with mutability.\r\n\r\nWith those principles in mind, the algorithm is I'm gathering a list of ideal dependencies first. I collect violations into three buckets (missing, duplicate, unnecessary). Then I report them together. The autofix tries to do minimal possible changes — e.g. it leaves the current order intact for deps that *are* necessary, and only adds new ones at the end. This algorithm will need some changes as I deal with objects and properties. More on that in TODO below.\r\n\r\nAdding the array:\r\n\r\n![adding the array](https://duaw26jehqd4r.cloudfront.net/items/3g0h380K2B3u311D320J/Screen%20Recording%202019-01-19%20at%2001.25%20AM.gif?v=403292c1)\r\n\r\nRemoving a dependency:\r\n\r\n![removing a dep](https://duaw26jehqd4r.cloudfront.net/items/3u2T3k0T0w0Q2X2F242U/Screen%20Recording%202019-01-19%20at%2001.40%20AM.gif?v=f4998f40)\r\n\r\nIntroducing a dependency:\r\n\r\n![introducing a dep](https://duaw26jehqd4r.cloudfront.net/items/1L021b1A0L2E0j3L1v3z/Screen%20Recording%202019-01-19%20at%2001.41%20AM.gif?v=2e599fed)\r\n\r\nEditing dependencies:\r\n\r\n![editing deps](https://duaw26jehqd4r.cloudfront.net/items/0s07063Z2M3x271k3q03/Screen%20Recording%202019-01-19%20at%2001.43%20AM.gif?v=b2eb01c3)\r\n\r\nThere's a lot of missing stuff here but I feel like this is the right direction overall.\r\n\r\nTODO\r\n\r\n- [x] Re-add support for `obj.prop` / `obj.method()`\r\n- [x] Make sure `obj` “satisfies” `obj.prop`\r\n- [x] Be smart about `props.items.slice()` (don't suggest `[props.items.slice]`)\r\n- [x] Rewrite and fix tests, including autofix\r\n- [x] Be smart about `[ref.current]` (suggest `[ref]`)\r\n- [x] Consider not caring about dispatch and state setters if we can prove their origin\r\n  - [x] <s>Possible middle ground: generate them on autofix but don't complain if missing</s>\r\n  - [x] Possible middle ground: don't generate them on autofix but also don't complain if present\r\n- [x] Don't forget to add `useImperativeHandle`\r\n- [x] Polish: \"dependency\" when there's just one\r\n- [x] Add a special message for ref.current\r\n- [x] Handle undefined used variables gracefully\r\n- [x] Make sure we bail out unless all dep nodes are `foo` or `foo.bar.baz`\r\n- [x] Pick the name\r\n\r\nPotential follow-up:\r\n\r\n- [ ] Consider a heuristic where many deep accesses gives shared ancestor\r\n  - [ ] Maybe use <10 deps in array if possible as a guiding principle\r\n- [ ] Optimize it\r\n- [ ] Go through TODOs in tests and make more decisions\r\n- [ ] Autofix shouldn't delete comments other tokens\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
