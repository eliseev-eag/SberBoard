{
  "url": "https://api.github.com/repos/facebook/react/issues/7072",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7072/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7072/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7072/events",
  "html_url": "https://github.com/facebook/react/issues/7072",
  "id": 161042760,
  "node_id": "MDU6SXNzdWUxNjEwNDI3NjA=",
  "number": 7072,
  "title": "Call other props' checkType() in the validation function",
  "user": {
    "login": "artkravchenko",
    "id": 12209129,
    "node_id": "MDQ6VXNlcjEyMjA5MTI5",
    "avatar_url": "https://avatars2.githubusercontent.com/u/12209129?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/artkravchenko",
    "html_url": "https://github.com/artkravchenko",
    "followers_url": "https://api.github.com/users/artkravchenko/followers",
    "following_url": "https://api.github.com/users/artkravchenko/following{/other_user}",
    "gists_url": "https://api.github.com/users/artkravchenko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/artkravchenko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/artkravchenko/subscriptions",
    "organizations_url": "https://api.github.com/users/artkravchenko/orgs",
    "repos_url": "https://api.github.com/users/artkravchenko/repos",
    "events_url": "https://api.github.com/users/artkravchenko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/artkravchenko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-06-18T20:50:38Z",
  "updated_at": "2016-06-21T10:25:29Z",
  "closed_at": "2016-06-21T10:25:29Z",
  "author_association": "NONE",
  "body": "For example, we have\n\n``` javascript\n// inside some component's class definition\nstatic propTypes = {\n  tag: Tag\n};\n```\n\nwhere `Tag` is\n\n``` javascript\nconst Tag = PropTypes.shape({\n  name: PropTypes.string,\n  // other props\n});\n```\n\n---\n\nThe question: Can we define custom prop type that'll use its own validator like this:\n\n``` javascript\nfunction TagContainer(props, propName, componentName) { /* ... */ }\n```\n\nand use other prop's validation function anywhere inside of this function?\n\n``` javascript\nconst error = Tag(/* params... */);\n```\n\n`Tag` has the signature as `function checkType(isRequired, props, propName, componentName, location, propFullName)` but whatever I pass to it as arguments it always returns `null`.\n\nAm I doing something wrong here or is it impossible to check the type this way?\nThanks.\n",
  "closed_by": {
    "login": "artkravchenko",
    "id": 12209129,
    "node_id": "MDQ6VXNlcjEyMjA5MTI5",
    "avatar_url": "https://avatars2.githubusercontent.com/u/12209129?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/artkravchenko",
    "html_url": "https://github.com/artkravchenko",
    "followers_url": "https://api.github.com/users/artkravchenko/followers",
    "following_url": "https://api.github.com/users/artkravchenko/following{/other_user}",
    "gists_url": "https://api.github.com/users/artkravchenko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/artkravchenko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/artkravchenko/subscriptions",
    "organizations_url": "https://api.github.com/users/artkravchenko/orgs",
    "repos_url": "https://api.github.com/users/artkravchenko/repos",
    "events_url": "https://api.github.com/users/artkravchenko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/artkravchenko/received_events",
    "type": "User",
    "site_admin": false
  }
}
