{
  "url": "https://api.github.com/repos/facebook/react/issues/16625",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16625/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16625/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16625/events",
  "html_url": "https://github.com/facebook/react/issues/16625",
  "id": 487663040,
  "node_id": "MDU6SXNzdWU0ODc2NjMwNDA=",
  "number": 16625,
  "title": "[ESLint] 'Run on mount' use case for 'exhaustive-deps' lint rule",
  "user": {
    "login": "dkthehuman",
    "id": 535248,
    "node_id": "MDQ6VXNlcjUzNTI0OA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535248?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dkthehuman",
    "html_url": "https://github.com/dkthehuman",
    "followers_url": "https://api.github.com/users/dkthehuman/followers",
    "following_url": "https://api.github.com/users/dkthehuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/dkthehuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dkthehuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dkthehuman/subscriptions",
    "organizations_url": "https://api.github.com/users/dkthehuman/orgs",
    "repos_url": "https://api.github.com/users/dkthehuman/repos",
    "events_url": "https://api.github.com/users/dkthehuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dkthehuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2019-08-30T20:41:20Z",
  "updated_at": "2019-09-05T20:04:40Z",
  "closed_at": "2019-08-30T21:42:43Z",
  "author_association": "NONE",
  "body": "I'm unsure how best to resolve the `react-hooks/exhaustive-deps` lint rule when trying to run something only the first time the user sees something and would appreciate some pointers.\r\n\r\nPer @gaearon's recommendation in an [older thread about this lint rule](https://github.com/facebook/create-react-app/issues/6880#issuecomment-486875202), I'll try to explain from a user-oriented perspective rather than one that is mount/update-oriented.\r\n\r\n## Use Case\r\n\r\nWhen a user initially loads my app, a random element should be generated. There is a button that changes the random element which should be different from the previously generated element.\r\n\r\nIn my particular application, I'm generating [guitar chords](https://dkthehuman.com/chord-bunny/), but for the sake of simplicity, let's say that we're generating random numbers.\r\n\r\n### Setting random element in `useState`\r\n\r\nMy initial approach was to use the initial state to generate the random number: https://codesandbox.io/s/generate-rand-num-as-initial-state-mf49x\r\n\r\nThis works well, but ended up being problematic when I added server-side rendering because there would be a noticeable flicker between the random number in the HTML (generated on the server) and the random number created when the page is loaded (generated on the client).\r\n\r\n### Setting random element in `useEffect`\r\n\r\nMy current approach is to set the initial state to `null` and generate the number when the user first loads the page (on mount) using `useEffect`: https://codesandbox.io/s/generate-rand-num-as-effect-46cne\r\n\r\nThis works but triggers the `exhaustive-deps` warning: `React Hook useEffect has a missing dependency: 'changeNum'. Either include it or remove the dependency array  react-hooks/exhaustive-deps`\r\n\r\n### Potential Solutions\r\n\r\nHaving read through much of [the feedback thread for this rule](https://github.com/facebook/react/issues/14920), [another discussion about it](https://github.com/facebook/create-react-app/issues/6880), and the [Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#is-it-safe-to-omit-functions-from-the-list-of-dependencies), I know that I can wrap `changeNum` into the `useCallback` hook, but I can't help but feel that there must be a better way.\r\n\r\nI suspect I may be thinking too imperatively rather than declaratively, but I'm having a hard time figuring out what the idiomatic solution would be here. (If the answer is to just use the `useCallback` hook, so be it.) Any pointers would be greatly appreciated. Thanks!",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
