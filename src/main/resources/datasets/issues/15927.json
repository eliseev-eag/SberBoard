{
  "url": "https://api.github.com/repos/facebook/react/issues/15927",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15927/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15927/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15927/events",
  "html_url": "https://github.com/facebook/react/pull/15927",
  "id": 458089958,
  "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg5NzY3NzA4",
  "number": 15927,
  "title": "[Flare] Add useEvent hook implementation",
  "user": {
    "login": "trueadm",
    "id": 1519870,
    "node_id": "MDQ6VXNlcjE1MTk4NzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1519870?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trueadm",
    "html_url": "https://github.com/trueadm",
    "followers_url": "https://api.github.com/users/trueadm/followers",
    "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
    "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
    "organizations_url": "https://api.github.com/users/trueadm/orgs",
    "repos_url": "https://api.github.com/users/trueadm/repos",
    "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trueadm/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    },
    {
      "id": 1296748300,
      "node_id": "MDU6TGFiZWwxMjk2NzQ4MzAw",
      "url": "https://api.github.com/repos/facebook/react/labels/React%20Flare",
      "name": "React Flare",
      "color": "63f2ff",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 25,
  "created_at": "2019-06-19T15:45:03Z",
  "updated_at": "2019-06-21T02:12:41Z",
  "closed_at": "2019-06-21T02:12:40Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/15927",
    "html_url": "https://github.com/facebook/react/pull/15927",
    "diff_url": "https://github.com/facebook/react/pull/15927.diff",
    "patch_url": "https://github.com/facebook/react/pull/15927.patch"
  },
  "body": "This PR adds a new primitive hook to React called `useEvent`. For now it's behind the React Flare flag and is labelled `unstabled_useEvent` on the React object. This implementation might have bugs in, as it's not been hooked up and tested with the various event responder modules, like Press, Hover etc. This isn't intended to be a bug-free PR, more it's an initial implementation that should aim to get the wiring right between fibers and the hook.\r\n\r\nThe principal way of using this, is to leverage existing event components within a component. For example:\r\n\r\n```jsx\r\nimport React, {unstable_useEvent} from 'react';\r\nimport Press from 'react-events/press';\r\n\r\nfunction MyComponent() {\r\n  unstable_useEvent(Press, {onPress: handlePressFromHook});\r\n\r\n  function handlePressFromHook() {\r\n    console.log('hook');\r\n  } \r\n  function handlePressFromEventComponent() {\r\n    console.log('event component');\r\n  } \r\n  \r\n  return (\r\n    <Press onPress={handlePressFromEventComponent}>\r\n      <div>Press me</div>\r\n    </Press>\r\n  );\r\n}\r\n```\r\n\r\nAny event components in the **same** branch of an event component (not above the event component), will fire for the same type of event component. If there are no event components used in the branch of the function component that has the hooks, then the hook props will never fire. So this won't work:\r\n\r\n```jsx\r\nfunction MyComponent() {\r\n  unstable_useEvent(Press, {onPress: handlePressFromHook});\r\n  \r\n  // You need to use a <Press> somewhere in this branch\r\n  return (\r\n    <div>Press me</div>\r\n  );\r\n}\r\n```\r\n\r\nWhat is powerful about the hook form of event components, is that they can track events occurring in their tree without needing to worry about propagation rules. All events will propagate to the hook form of these events, which is different to the event component form, where events stop propagation to the same type of event components.\r\n\r\nEvent responders can opt out of support hooks, for example `FocusScope` will not support hook form right now, so the responder module has `allowEventHooks` set to `false`.\r\n\r\nThe hook forms thus allow for control of events on children, where their implementation is not fully known or controller by the parent component. The only exception to this, is if an event responder takes global ownership, then no other events components or hooks will fire â€“ this is intentional.\r\n\r\nFurthermore, `displayName` is now no longer on event components and has instead been moved to the responders. This is to allow for hooks to have display names, via the responder.",
  "closed_by": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  }
}
