{
  "url": "https://api.github.com/repos/facebook/react/issues/8800",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8800/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8800/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8800/events",
  "html_url": "https://github.com/facebook/react/issues/8800",
  "id": 200881664,
  "node_id": "MDU6SXNzdWUyMDA4ODE2NjQ=",
  "number": 8800,
  "title": "Expose more through __REACT_DEVTOOLS_GLOBAL_HOOK__.inject",
  "user": {
    "login": "roncohen",
    "id": 744,
    "node_id": "MDQ6VXNlcjc0NA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/744?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/roncohen",
    "html_url": "https://github.com/roncohen",
    "followers_url": "https://api.github.com/users/roncohen/followers",
    "following_url": "https://api.github.com/users/roncohen/following{/other_user}",
    "gists_url": "https://api.github.com/users/roncohen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/roncohen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/roncohen/subscriptions",
    "organizations_url": "https://api.github.com/users/roncohen/orgs",
    "repos_url": "https://api.github.com/users/roncohen/repos",
    "events_url": "https://api.github.com/users/roncohen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/roncohen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710573595,
      "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
      "name": "Component: Developer Tools",
      "color": "fbca04",
      "default": false
    },
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-01-15T17:26:32Z",
  "updated_at": "2017-10-04T16:26:01Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "This feature request came out of a brief discussion on twitter with @gaearon: https://twitter.com/dan_abramov/status/820356665899945984\r\n\r\n`__REACT_DEVTOOLS_GLOBAL_HOOK__.inject` exposes access to `getClosestInstanceFromNode`, `getNodeFromInstance`, `ReactMount` and `ReactReconciler`. This is great, and we use it to collect component level performance metrics for our customers in production, however, there are more things we'd love to have access to for the purpose of helping our users pinpoint performance issues in their applications.\r\n\r\nThis \"issue\" includes some initial observations, but I hope we can keep an open dialogue about this - in particular considering Fiber will probably change the landscape with regards to what the most common performance problems are and we'd instrument according to that.\r\n\r\nI understand the urge to keep the API surface area as small as possible in order to create minimal commitment to APIs to allow for internals to move fast. Exposing additional internals with the explicit warning that you are not committed to their API is fine for us, as a tool vendor.\r\n\r\nWe've looked at using `batchedUpdates` to highlight the batched nature of the work performed by React. E.g. is the work in your application getting batched properly. If we only have access to the component updating methods on `ReactReconciler` (`mountComponent`, `receiveComponent`, `unmountComponent` etc) we can't really know when a batch of work starts and when it ends. `batchedUpdates` is available in ReactDOM with the `unstable_` prefix, but exposing it in the `inject` hook would be very useful: https://github.com/facebook/react/blob/master/src/renderers/dom/ReactDOM.js#L38\r\n\r\nWe've also (experimentally) hooked into `EventPluginUtils.executeDispatchesInOrder` in order to capture events and measure the work resulting from these, but i suspect there is a better place to do this (`ReactEventListener.dispatchEvent`?). In any case, having access to the event system would be very useful. Again, using the \"unstable_\" prefix to indicate non-committal would be fine for us.\r\n\r\nI've not had much time to look into what we'd need access to for Fiber instrumentation, but so far it looks like a hook into `beginWork` would be very useful: https://github.com/facebook/react/blob/199db638c4d0fbc6e4d99534be0060deea518a32/src/renderers/shared/fiber/ReactFiberBeginWork.js#L640",
  "closed_by": null
}
