{
  "url": "https://api.github.com/repos/facebook/react/issues/14595",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14595/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14595/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14595/events",
  "html_url": "https://github.com/facebook/react/issues/14595",
  "id": 399169372,
  "node_id": "MDU6SXNzdWUzOTkxNjkzNzI=",
  "number": 14595,
  "title": "Question: How should libraries export custom hooks?",
  "user": {
    "login": "sampathsris",
    "id": 3192154,
    "node_id": "MDQ6VXNlcjMxOTIxNTQ=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/3192154?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sampathsris",
    "html_url": "https://github.com/sampathsris",
    "followers_url": "https://api.github.com/users/sampathsris/followers",
    "following_url": "https://api.github.com/users/sampathsris/following{/other_user}",
    "gists_url": "https://api.github.com/users/sampathsris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sampathsris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sampathsris/subscriptions",
    "organizations_url": "https://api.github.com/users/sampathsris/orgs",
    "repos_url": "https://api.github.com/users/sampathsris/repos",
    "events_url": "https://api.github.com/users/sampathsris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sampathsris/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-01-15T03:06:21Z",
  "updated_at": "2019-01-17T23:05:05Z",
  "closed_at": "2019-01-17T21:31:04Z",
  "author_association": "NONE",
  "body": "I've just hooked into React Hooks and done some experiments. I'm having some doubts about React's advice on [Building My Own Hooks](https://reactjs.org/docs/hooks-custom.html).\r\n\r\nDocumentations tells me that,\r\n\r\n> A custom Hook is a JavaScript function whose name starts with \"use\" and that may call other Hooks.\r\n\r\nSo the idea I get is that, if I were to write an NPM package exporting a custom hook, I have to export a function and add React as a dependency to my package. Let's take a couple of examples:\r\n\r\n\r\n```js\r\n// Example 01 (from https://reactjs.org/docs/hooks-custom.html):\r\nconst [isOnline, setIsOnline] = useState(null);\r\n\r\nfunction handleStatusChange(status) {\r\n    setIsOnline(status.isOnline);\r\n}\r\n\r\nuseEffect(() => {\r\n    ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\r\n    return () => {\r\n        ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\r\n    };\r\n});\r\n\r\n// Example 02 (detect user pressing escape key):\r\nfunction handleEscapeKey (e) {\r\n    if (e.key === 'Escape') { /* do something with escape key */ }\r\n}\r\n\r\nuseEffect(() => {\r\n    window.addEventListener('keydown', handleEscapeKey);\r\n    return () => {\r\n        window.removeEventListener('keydown', handleEscapeKey);\r\n    }\r\n});\r\n```\r\n\r\nSo if I were to create two NPM packages for these, I would first import React as a dependency,\r\n\r\n```js\r\nimport { useState, useEffect } from 'react';\r\n```\r\n\r\nAnd then implement the packages in this manner:\r\n\r\n```js\r\n// Example 01:\r\nexport function useFriendStatus(friendID) {\r\n    const [isOnline, setIsOnline] = useState(null);\r\n    \r\n    function handleStatusChange(status) {\r\n        setIsOnline(status.isOnline);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\r\n        return () => {\r\n            ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\r\n        };\r\n    });\r\n    \r\n    return isOnline;\r\n}\r\n\r\n// Example 02\r\nexport function useWindowKeydown(handler) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handler);\r\n        return () => {\r\n            window.removeEventListener('keydown', handler);\r\n        }\r\n    });\r\n}\r\n```\r\n\r\nHowever, I feel that these packages are trying to do too much. For example,\r\n\r\n - In the first example the custom hook is initializing the state, which may be better done by a component.\r\n - Also, why do they both have to be aware about React. They are both trying to abstract away a pair of subscribe/unsubscribe functions.\r\n\r\nRather, we could export just the functionality we are trying to abstract away. And if we need any state or state-setters, we can pass them as arguments.\r\n\r\n```js\r\n// Example 01: package `hook-friend-status`\r\nexport function hookFriendStatus(friendId, handleStatusChange) {\r\n    return () => {\r\n        ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\r\n        return () => {\r\n            ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\r\n        };\r\n    }\r\n}\r\n\r\n// Example 02: package `hook-window-keydown`\r\nexport function hookWindowKeydown(handler) {\r\n    return () => {\r\n        window.addEventListener('keydown', handler);\r\n        return () => {\r\n            window.removeEventListener('keydown', handler);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd then we can use it inside our component in the following manner:\r\n\r\n```js\r\nimport React, { useState, useEffect } from 'react'\r\nimport hookFriendStatus from 'hook-friend-status';\r\nimport hookWindowKeydown from 'hook-window-keydown';\r\n\r\nfunction MyAwesomeComponent ({ friendId }) {\r\n    const [isOnline, setIsOnline] = useState(\r\n        // component can decide how to initialize state.\r\n        false\r\n    );\r\n    function handleStatusChange(status) {\r\n        setIsOnline(status.isOnline);\r\n    }\r\n    useEffect(hookFriendStatus(friendId, handleStatusChange));\r\n    \r\n    function handleEscapeKey (e) {\r\n        if (e.key === 'Escape') { /* do something with escape key */ }\r\n    }\r\n    useEffect(hookWindowKeydown(handleEscapeKey));\r\n\r\n    return (/** jsx */)\r\n}\r\n```\r\n\r\nI think this way is much cleaner:\r\n\r\n - The concerns are separated better.\r\n - Packages/libraries don't have to be aware of React (which also means these libraries can be used outside React as well).\r\n - I would presume it will be easier to test the packages/libraries, because they are not calling react hooks (less mocking).\r\n - Linter can stop searching after they scanned the component, so could the humans when doing the code review.\r\n\r\nIt might be a premature judgement that I have reached, as we are yet to see what people are exactly doing with hooks. Let me know what you guys think. Thanks.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
