{
  "url": "https://api.github.com/repos/facebook/react/issues/5384",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5384/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5384/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5384/events",
  "html_url": "https://github.com/facebook/react/issues/5384",
  "id": 114965229,
  "node_id": "MDU6SXNzdWUxMTQ5NjUyMjk=",
  "number": 5384,
  "title": "Should there be a requestUpdate or setState use deep merge?",
  "user": {
    "login": "mikkoh",
    "id": 496903,
    "node_id": "MDQ6VXNlcjQ5NjkwMw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/496903?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mikkoh",
    "html_url": "https://github.com/mikkoh",
    "followers_url": "https://api.github.com/users/mikkoh/followers",
    "following_url": "https://api.github.com/users/mikkoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/mikkoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mikkoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mikkoh/subscriptions",
    "organizations_url": "https://api.github.com/users/mikkoh/orgs",
    "repos_url": "https://api.github.com/users/mikkoh/repos",
    "events_url": "https://api.github.com/users/mikkoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mikkoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2015-11-04T04:06:57Z",
  "updated_at": "2015-11-05T04:21:43Z",
  "closed_at": "2015-11-05T04:21:43Z",
  "author_association": "NONE",
  "body": "Currently we have `forceUpdate`. But I think a common case is to have deferred rendering in the same way that `setState` will render after a period of time.\n\nFrom what I see `forceUpdate` renders immediately. This is an issue if lets say if you wanted to update two css properties and then render. Of course you could use `setState` however since it uses shallow merging updating states would cause overwriting the previous state.\n\nExample:\n\n```\nthis.setState({\n  style: {\n    top: 10\n  }\n});\n```\n\nThen before the next render-\n\n```\nthis.setState({\n  style: {\n    left: 10\n  }\n});\n```\n\nWhen render is resolved state would be:\n\n```\n{\n  style: {\n    left: 10\n  }\n}\n```\n\nIn order to solve this you could circumvent the `state` object and create a second object which contains computed styles and render requests could happen through a call to a function like `requestUpdate`.\n\nOf course ignoring state and using another object to manage style would create the side effect of state being contained in two objects. (this is not nice) So in the end having deep merge for state would be the best however this obviously is a huge change and may create large performance drawbacks.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
