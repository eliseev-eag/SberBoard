{
  "url": "https://api.github.com/repos/facebook/react/issues/14187",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14187/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14187/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14187/events",
  "html_url": "https://github.com/facebook/react/issues/14187",
  "id": 379423407,
  "node_id": "MDU6SXNzdWUzNzk0MjM0MDc=",
  "number": 14187,
  "title": "Reusing refs",
  "user": {
    "login": "webdeb",
    "id": 14992140,
    "node_id": "MDQ6VXNlcjE0OTkyMTQw",
    "avatar_url": "https://avatars3.githubusercontent.com/u/14992140?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/webdeb",
    "html_url": "https://github.com/webdeb",
    "followers_url": "https://api.github.com/users/webdeb/followers",
    "following_url": "https://api.github.com/users/webdeb/following{/other_user}",
    "gists_url": "https://api.github.com/users/webdeb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/webdeb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/webdeb/subscriptions",
    "organizations_url": "https://api.github.com/users/webdeb/orgs",
    "repos_url": "https://api.github.com/users/webdeb/repos",
    "events_url": "https://api.github.com/users/webdeb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/webdeb/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-11-10T13:42:44Z",
  "updated_at": "2018-11-12T19:35:33Z",
  "closed_at": "2018-11-12T16:24:07Z",
  "author_association": "NONE",
  "body": "There are some jquery-like, DOM-based libraries that depend on a specific DOM structure. Lets say an image slider, which has the items-list and controls.\r\n\r\n```\r\ncomponendDidMount() {\r\n   $('#my-slider').slider.init()\r\n}\r\n\r\n<div id=\"my-slider\" className=\"slider\">\r\n  <ul className=\"slider-list\">{items.map(item =>\r\n     <li className=\"slider-item\">{item}</li>\r\n  )}\r\n  <div className=\"slider-controls\" />\r\n</div>\r\n```\r\n\r\nNote the `slider-controls` div is completely empty, this will be generated by the `slider` lib during initialisation in `componentDidMount`\r\n\r\nThe structure is closed, and you cannot just take the `slider-controls` and put them at another place, the `$.slider()` lib would not work. But I found another technique how to accomplish this, by using `refs`\r\n\r\nThe structure became:\r\n\r\n```\r\ncontrols = React.createRef()\r\ncomponentDidMount = () => {\r\n  $('#my-slider').slider.init()\r\n  this.forceUpdate();\r\n}\r\n<div className=\"page\">\r\n  <div id=\"my-slider\">\r\n    <ul ... />\r\n    <div className=\"hide\"> // hide this controls\r\n      <div ref={this.controls} className=\"slider-controls\" />\r\n    </div>\r\n  </div>\r\n  { this.controls.current ? <div\r\n        className=\"reuse-controls-somewhere-else\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: this.controls.current.innerHTML\r\n        }}\r\n    /> : null\r\n  }\r\n</div>\r\n```\r\n\r\nThis stuff works, its great, but I thought maybe there is a better technique to reuse `refs`? If so, I could't find anything in the docs, so maybe it would be a good idea to fill the gap.\r\n\r\nThanks!",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
