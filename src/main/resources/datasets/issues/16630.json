{
  "url": "https://api.github.com/repos/facebook/react/issues/16630",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16630/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16630/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16630/events",
  "html_url": "https://github.com/facebook/react/issues/16630",
  "id": 487775992,
  "node_id": "MDU6SXNzdWU0ODc3NzU5OTI=",
  "number": 16630,
  "title": "Can't use instance values without refs",
  "user": {
    "login": "ysulyma",
    "id": 453486,
    "node_id": "MDQ6VXNlcjQ1MzQ4Ng==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/453486?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysulyma",
    "html_url": "https://github.com/ysulyma",
    "followers_url": "https://api.github.com/users/ysulyma/followers",
    "following_url": "https://api.github.com/users/ysulyma/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysulyma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysulyma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysulyma/subscriptions",
    "organizations_url": "https://api.github.com/users/ysulyma/orgs",
    "repos_url": "https://api.github.com/users/ysulyma/repos",
    "events_url": "https://api.github.com/users/ysulyma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysulyma/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1109410193,
      "node_id": "MDU6TGFiZWwxMTA5NDEwMTkz",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Hooks",
      "name": "Component: Hooks",
      "color": "c2f27b",
      "default": false
    },
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-08-31T14:31:51Z",
  "updated_at": "2019-09-05T09:01:57Z",
  "closed_at": "2019-09-05T09:01:56Z",
  "author_association": "NONE",
  "body": "I am experimenting with migrating some of my class components to Hooks. My use case is explained in detail [here](https://stackoverflow.com/questions/57722818/idiomatic-react-with-heavy-dom-manipulation-mathjax), but I can quickly explain the idea.\r\n\r\nI have a class component `<MJX>` which exposes a `.ready` Promise. Since `<MJX>` produces a `<span>` element, I guess I can use the `useImperativeHandle` hook to attach `.ready` to the ref I use for the `<span>`. This is no problem.\r\n\r\nHowever, I also have a class component `<RenderGroup>` which uses `React.Children` to collect the `.ready` Promises from all its `<MJX>` descendants, and exposes `Promise.all` of that array of Promises as its own `.ready` value. Since `<RenderGroup>` does not produce any markup of its own, and you can't place refs on `<React.Fragment>`, I don't see how to use`useImperativeHandle` here: there's nowhere to attach the ref.\r\n\r\nHere is the relevant code:\r\n\r\n```tsx\r\nexport class RenderGroup extends React.Component {\r\n  private promises: Promise<void>[];\r\n\r\n  ready: Promise<void>;\r\n\r\n  componentDidMount() {\r\n    this.ready = Promise.all(this.promises).then(() => {});\r\n  }\r\n\r\n  render() {\r\n    this.promises = [];\r\n\r\n    return recursiveMap(this.props.children, node => {\r\n      if (shouldInspect(node)) {\r\n        const originalRef = node.ref;\r\n        return React.cloneElement(node, {\r\n          ref: (ref: MJX) => {\r\n            if (!ref) return;\r\n            this.promises.push(ref.ready);\r\n            if (typeof originalRef === \"function\") {\r\n              originalRef(ref);\r\n            } else if (originalRef && typeof originalRef === \"object\") {\r\n              (originalRef as React.MutableRefObject<MJX>).current = ref;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      return node;\r\n    });\r\n  }\r\n}\r\n\r\nfunction shouldInspect(node: ReactNode): node is React.ReactElement & React.RefAttributes<MJX> {\r\n  return React.isValidElement(node) && typeof node.type === \"function\" && node.type.prototype instanceof MJX;\r\n}\r\n\r\nexport function recursiveMap(\r\n  children: ReactNode,\r\n  fn: (child: ReactNode) => ReactNode\r\n) {\r\n  return React.Children.map(children, (child) => {\r\n    if (!React.isValidElement(child)) {\r\n      return child;\r\n    }\r\n\r\n    if (\"children\" in child.props) {\r\n      child = React.cloneElement(child, {\r\n        children: recursiveMap(child.props.children, fn)\r\n      });\r\n    }\r\n\r\n    return fn(child);\r\n  });\r\n}\r\n```",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
