{
  "url": "https://api.github.com/repos/facebook/react/issues/16258",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16258/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16258/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16258/events",
  "html_url": "https://github.com/facebook/react/issues/16258",
  "id": 474854768,
  "node_id": "MDU6SXNzdWU0NzQ4NTQ3Njg=",
  "number": 16258,
  "title": "[Regression] onChange behaviour on radio buttons",
  "user": {
    "login": "theKashey",
    "id": 582410,
    "node_id": "MDQ6VXNlcjU4MjQxMA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/582410?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/theKashey",
    "html_url": "https://github.com/theKashey",
    "followers_url": "https://api.github.com/users/theKashey/followers",
    "following_url": "https://api.github.com/users/theKashey/following{/other_user}",
    "gists_url": "https://api.github.com/users/theKashey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/theKashey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/theKashey/subscriptions",
    "organizations_url": "https://api.github.com/users/theKashey/orgs",
    "repos_url": "https://api.github.com/users/theKashey/repos",
    "events_url": "https://api.github.com/users/theKashey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/theKashey/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 127893911,
      "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
      "name": "Component: DOM",
      "color": "fef2c0",
      "default": false
    },
    {
      "id": 710722093,
      "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
      "name": "Type: Needs Investigation",
      "color": "fbca04",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-07-30T22:42:14Z",
  "updated_at": "2019-08-15T22:39:11Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nHaving an uncontrolled, but _observed_ Radio Group, `onChange` would not be called on the previously selected Radio, only on the newly selected one.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/elastic-tu-yvytn\r\n\r\n**What is the expected behavior?**\r\n\r\nonChange is called on both `inputs`\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.8.6\r\n\r\nThis issue was fixed in 15.6.2 - https://github.com/facebook/react/issues/12172\r\n\r\n**Workaround**\r\n```js\r\nconst radioStates = new Map();\r\nconst nop = () => null;\r\nexport const Radio = ({inputGroupName, value}) => {\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // Radio change events are broken\r\n    // see https://github.com/facebook/react/issues/9988\r\n    // emulating Radio Group controller\r\n    const group = e.target.name;\r\n\r\n    // disable old radio    \r\n    const oldHandler = radioStates.get(group) || nop;\r\n    oldHandler(false); \r\n\r\n    // enable new radio\r\n    radioStates.set(group, setChecked);    \r\n    setChecked(e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        name={inputGroupName}\r\n        value={value}\r\n        onChange={handleInputChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n```",
  "closed_by": null
}
