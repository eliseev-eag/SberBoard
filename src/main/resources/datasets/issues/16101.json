{
  "url": "https://api.github.com/repos/facebook/react/issues/16101",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16101/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16101/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16101/events",
  "html_url": "https://github.com/facebook/react/pull/16101",
  "id": 466444831,
  "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk2MjgzMjg3",
  "number": 16101,
  "title": "[Flare] Migrate to `useResponder` event system design ",
  "user": {
    "login": "trueadm",
    "id": 1519870,
    "node_id": "MDQ6VXNlcjE1MTk4NzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1519870?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trueadm",
    "html_url": "https://github.com/trueadm",
    "followers_url": "https://api.github.com/users/trueadm/followers",
    "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
    "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
    "organizations_url": "https://api.github.com/users/trueadm/orgs",
    "repos_url": "https://api.github.com/users/trueadm/repos",
    "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trueadm/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    },
    {
      "id": 1296748300,
      "node_id": "MDU6TGFiZWwxMjk2NzQ4MzAw",
      "url": "https://api.github.com/repos/facebook/react/labels/React%20Flare",
      "name": "React Flare",
      "color": "63f2ff",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-07-10T18:03:46Z",
  "updated_at": "2019-07-10T23:57:36Z",
  "closed_at": "2019-07-10T23:57:36Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/16101",
    "html_url": "https://github.com/facebook/react/pull/16101",
    "diff_url": "https://github.com/facebook/react/pull/16101.diff",
    "patch_url": "https://github.com/facebook/react/pull/16101.patch"
  },
  "body": "This PR migrates away from the existing Flare event system design, to a slightly different design and API. Notably, there are now no Event Components, instead as the first of this new design there are only Event Responders. The only way to use an Event Responder is by using its hook form inside a functional component that you want to \"tie\" to becoming an event target for the responder in question.\r\n\r\nBefore you would do:\r\n\r\n```jsx\r\nfunction PressableButton({children, onPress, onHover, onFocus}) {\r\n  <Press onPress={onPress}>\r\n    <Hover onHover={onHover}>\r\n      <Focus onFocus={onFocus}>\r\n        <div>\r\n          {children}\r\n        </div>\r\n      </Focus>\r\n    </Hover>\r\n  </Press>\r\n}\r\n```\r\n\r\nWith this PR, you now do:\r\n\r\n```jsx\r\nfunction PressableButton({children, onPress, onHover, onFocus}) {\r\n  const targetRef= useRef(null);\r\n  usePressResponder(targetRef, {onPress});\r\n  useHoverResponder(targetRef, {onHover});\r\n  useFocusResponder(targetRef, {onFocus});\r\n  return <div ref={targetRef}>{children}</div>\r\n}\r\n```\r\n\r\n## The reasons for this change:\r\n- There is now an explicit contract between an event responder at the function component that owns it (using the hook design). This creates a boundary for any given responders inside the boundary, so they don't bubble up the fiber tree.\r\n- There is also an explicit contract between a responder and a host target. Before, there was no clear way to provide a 1:1 contract.\r\n- We create less fibers and objects with this model, whilst in the case before, each event component would have an associated fiber for each one in the tree.\r\n\r\n## Issues with Event Components:\r\n\r\nIt's difficult to compose event components without falling into pitfalls. The majority if event components have a 1:1 mapping to a DOM node, meaning they need a static child that remains constant through the lifecycle of the event responder. This is easy to visualize in this case:\r\n\r\n```jsx\r\n<Focus>\r\n  <button>Focus me!</button>\r\n</Focus>\r\n```\r\n\r\nIt's harder to track and warn about (without overhead) in cases where the node might resolve conditionally:\r\n\r\n```jsx\r\n<Focus>\r\n  <SomeComponent />\r\n</Focus>\r\n\r\nfunction SomeComponent() {\r\n  return condition ? <button>Focus me!</button> : <span>Focus me!</span>\r\n}\r\n```\r\n\r\nIt's even harder when the child might suspend or lazyily change. Not to mention, there's not a consistent story with event components. `<FocusScope>` might want to accept many children, yet is still an event component, whilst `<Focus>` clearly does not.\r\n\r\nThis updated design attempts to tackle some of those concerns.\r\n\r\n## Note:\r\n\r\nIt's important to remember that this is still experimental and may change at any time. We expect `useResponder` to be used sparingly – almost as if it as private API – to be used in core primitive componets that are the building blocks for an app. In later PRs, we will expose `createListener` and `useListener` which will be used as more of a public facing API to be used in user-space components.",
  "closed_by": {
    "login": "trueadm",
    "id": 1519870,
    "node_id": "MDQ6VXNlcjE1MTk4NzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1519870?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trueadm",
    "html_url": "https://github.com/trueadm",
    "followers_url": "https://api.github.com/users/trueadm/followers",
    "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
    "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
    "organizations_url": "https://api.github.com/users/trueadm/orgs",
    "repos_url": "https://api.github.com/users/trueadm/repos",
    "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trueadm/received_events",
    "type": "User",
    "site_admin": false
  }
}
