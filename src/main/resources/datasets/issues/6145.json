{
  "url": "https://api.github.com/repos/facebook/react/issues/6145",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6145/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6145/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6145/events",
  "html_url": "https://github.com/facebook/react/issues/6145",
  "id": 137301531,
  "node_id": "MDU6SXNzdWUxMzczMDE1MzE=",
  "number": 6145,
  "title": "Is there any way to update React Child Components ",
  "user": {
    "login": "sibinx7",
    "id": 2009809,
    "node_id": "MDQ6VXNlcjIwMDk4MDk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/2009809?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sibinx7",
    "html_url": "https://github.com/sibinx7",
    "followers_url": "https://api.github.com/users/sibinx7/followers",
    "following_url": "https://api.github.com/users/sibinx7/following{/other_user}",
    "gists_url": "https://api.github.com/users/sibinx7/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sibinx7/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sibinx7/subscriptions",
    "organizations_url": "https://api.github.com/users/sibinx7/orgs",
    "repos_url": "https://api.github.com/users/sibinx7/repos",
    "events_url": "https://api.github.com/users/sibinx7/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sibinx7/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2016-02-29T16:29:06Z",
  "updated_at": "2016-03-01T03:39:02Z",
  "closed_at": "2016-02-29T19:00:34Z",
  "author_association": "NONE",
  "body": "Parent element \n\n```\nclass ReactWizard extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      childItems: [],\n      step: 0,\n      styleClass:null,\n      category: null,\n      data: {}\n    };\n    this._divStyle = this._divStyle.bind(this)\n    this._changeStep = this._changeStep.bind(this)\n  }\ncomponentWillMount(){\n    var wizardItems = [\n      <ReactWizardItem.start data={this.state.data}/>,\n      <ReactWizardItem.center data={this.state.data}/>,\n      <ReactWizardItem.finish data={this.state.data}/>\n    ];\n    this.setState({\n      childItems: wizardItems\n    })\n  }\nrender(){\nif(this.state.childItems.length > 0){\n      childItems = this.state.childItems.map((value, index) => {\n        return (\n          <div key={index} className=\"wizard-item\" data-wizard={index}>\n            {value}\n          </div>\n        )\n      })\n    }\n    var currentStep = this.state.step;\n    return(\n      <div className=\"wizard-outer\">\n        <div className=\"wizard-wrapper clearfix\" style={this.state.styleClass} id=\"wizardBox\">\n          {childItems}\n        </div>\n        <div className=\"wizard-nav\">\n          <a href=\"#\" className={\"btn  pull-left \" + currentButton.prevClass} onClick={this._prev.bind(this,currentStep)}>{currentButton.prev}</a>\n          <a href=\"#\" className={\"btn  pull-right \" + currentButton.nextClass} onClick={this._next.bind(this,currentStep)}>{currentButton.next}</a>\n        </div>\n      </div>\n    )\n  }\n}\n```\n\nChild component \n\n```\nclass ReactWizardItemCenter extends Component{\n  constructor(props){\n    super(props)\n  }\n  componentWillReceiveProps(nextProps){\n    console.log(nextProps)\n    console.log(\"Props updated\")\n  }\n  componentWillUpdate(){\n    console.log(\"Run if state changes\")\n  }\n  render(){\n    console.log(\"Render\")\n    return(\n      <div className=\"wizard\">\n        <div className=\"form-group\">\n          <label htmlFor=\"auto-video-subcategory\" className=\"control-label\">Subcategory</label>\n          <select type=\"text\" className=\"form-control\" id=\"auto-video-subcategory\" name=\"subcategory_id\">\n            <option value=\"\">--Select--</option>\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\nReactWizardItem.center = ReactWizardItemCenter;\n```\n\nChild elements not  showing  anything on componetWillRecieveProps and componentDidUpdate.\n\nThis code working well when i change code\n\n```\nreturn(\n      <div className=\"wizard-outer\">\n        <div className=\"wizard-wrapper clearfix\" style={this.state.styleClass} id=\"wizardBox\">\n          <div key=\"0\" className=\"wizard-item\" data-wizard=\"0\">\n          <ReactWizardItem.start data={this.state.data}/>\n          </div>\n          <div key=\"1\" className=\"wizard-item\" data-wizard=\"1\">\n          <ReactWizardItem.center data={this.state.data}/>\n          </div>\n          <div key=\"2\" className=\"wizard-item\" data-wizard=\"2\">\n          <ReactWizardItem.finish data={this.state.data}/>\n          </div>\n        </div>\n        <div className=\"wizard-nav\">\n          <a href=\"#\" className={\"btn  pull-left \" + currentButton.prevClass} onClick={this._prev.bind(this,currentStep)}>{currentButton.prev}</a>\n          <a href=\"#\" className={\"btn  pull-right \" + currentButton.nextClass} onClick={this._next.bind(this,currentStep)}>{currentButton.next}</a>\n        </div>\n      </div>\n    )\n```\n\nI like to use first one, This code is to make a wizard like content.\n\nThanks in advance \n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
