{
  "url": "https://api.github.com/repos/facebook/react/issues/3611",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3611/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3611/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3611/events",
  "html_url": "https://github.com/facebook/react/issues/3611",
  "id": 66912366,
  "node_id": "MDU6SXNzdWU2NjkxMjM2Ng==",
  "number": 3611,
  "title": "How to record Perf mesures on every single render?",
  "user": {
    "login": "slorber",
    "id": 749374,
    "node_id": "MDQ6VXNlcjc0OTM3NA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/749374?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slorber",
    "html_url": "https://github.com/slorber",
    "followers_url": "https://api.github.com/users/slorber/followers",
    "following_url": "https://api.github.com/users/slorber/following{/other_user}",
    "gists_url": "https://api.github.com/users/slorber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slorber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slorber/subscriptions",
    "organizations_url": "https://api.github.com/users/slorber/orgs",
    "repos_url": "https://api.github.com/users/slorber/repos",
    "events_url": "https://api.github.com/users/slorber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slorber/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2015-04-07T15:14:28Z",
  "updated_at": "2018-04-26T03:45:37Z",
  "closed_at": "2017-10-03T20:40:11Z",
  "author_association": "CONTRIBUTOR",
  "body": "I have an app with a framework very similar to Om where I always render from the top component. \nThere is no Flux store with components listening to a single Flux store event, just a single global json state managed outside of React.\n\nI ask this question as a follow-up to this issue, as I just noticed that React.render takes a callback: https://github.com/facebook/react/issues/1931\n\nMy former Perf code looked like this:\n\n``` javascript\n// 1st render\nReact.addons.Perf.start();\nReact.render(<App state=globalState/>, document.body);\nReact.addons.Perf.stop();\nReact.addons.Perf.printWasted();\n\n// 2nd render\nReact.addons.Perf.start();\nReact.render(<App state=globalState/>, document.body);\nReact.addons.Perf.stop();\nReact.addons.Perf.printWasted();\n\n// ... next renders\n```\n\nSo as Render takes a callback it seems to make sens to use it instead of considering React.render synchronous.\n\n``` javascript\n// 1st render\nReact.addons.Perf.start();\nReact.render(<App state=globalState/>, document.body),function() {\n    React.addons.Perf.stop();\n    React.addons.Perf.printWasted();\n});\n\n\n// 2nd render\nReact.addons.Perf.start();\nReact.render(<App state=globalState/>, document.body),function() {\n    React.addons.Perf.stop();\n    React.addons.Perf.printWasted();\n});\n\n// ... next renders\n```\n\nThe question that directly comes to mind is what would be the behavior if the 2nd rendering is triggered before the 1st rendering callback has been called?\n\nIn an ideal world we would have `start / stop / printWasted / start / stop / printWasted` but it seem to me that we could also have `start / start / stop / printWasted / stop / printWasted` which could lead to bad or duplicated mesures, or even worse a failure if Perf does not allow to be started twice for example...\n\nI think my usecase is pretty common for those using React in a really pure way, and it would be nice to explain and document how this can be achieved without expecting weird side effects\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
