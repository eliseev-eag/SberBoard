{
  "url": "https://api.github.com/repos/facebook/react/issues/4885",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4885/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4885/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4885/events",
  "html_url": "https://github.com/facebook/react/issues/4885",
  "id": 106613343,
  "node_id": "MDU6SXNzdWUxMDY2MTMzNDM=",
  "number": 4885,
  "title": "Creating logic-only components",
  "user": {
    "login": "mrozbarry",
    "id": 566486,
    "node_id": "MDQ6VXNlcjU2NjQ4Ng==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/566486?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mrozbarry",
    "html_url": "https://github.com/mrozbarry",
    "followers_url": "https://api.github.com/users/mrozbarry/followers",
    "following_url": "https://api.github.com/users/mrozbarry/following{/other_user}",
    "gists_url": "https://api.github.com/users/mrozbarry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mrozbarry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mrozbarry/subscriptions",
    "organizations_url": "https://api.github.com/users/mrozbarry/orgs",
    "repos_url": "https://api.github.com/users/mrozbarry/repos",
    "events_url": "https://api.github.com/users/mrozbarry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mrozbarry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-09-15T18:10:59Z",
  "updated_at": "2015-09-15T18:58:04Z",
  "closed_at": "2015-09-15T18:32:23Z",
  "author_association": "NONE",
  "body": "I'm developing an app and want to dynamically load content into my application.  I am using flux, so there is a fairly defined pipeline for getting and managing data.\n\nWhat I want is to do something like this:\n\n``` jsx\n<MyRootComponent ...>\n  <LoadSomethingInteresting ...>\n    <ComponentThatUsesLoadedData />\n  </LoadSomethingInteresting>\n</MyRootComponent>\n```\n\nCurrently, I get around this by using `<div>` as the rendered component, but this doesn't work well when I lazy load into a table:\n\n``` jsx\n<MyRoot>\n  <table>\n    <thead>\n      <LoadSomeTheadData>\n        <ComponentThatRendersTrAndTds />\n      </LoadSomeTheadData>\n    </thead>\n  </table>\n</MyRoot>\n```\n\nChome (but probably in other browsers) will push the loading div outside the table, which will force the browser to inject it's own corrected HTML, and React will lose it's root since the DOM gets modified without React's consent.\n\nSo is there any way I can do something similar to:\n\n``` javascript\n  render: function() {\n    return null; // won't work because this.props.children won't get rendered\n    return this.props.children; // won't work because render can't return an array of elements\n    return React.Children.only(this.props.children); // won't work because I may need more than one child rendered\n  }\n```\n\nI realize I can pass a React component to my loader and tell it to wrap any of it's content into that component, but I think that's quite messy.\n\n**TL;DR** I want a component that can do all the logic of the current component implementation, but without rendering itself (but still rendering children).\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
