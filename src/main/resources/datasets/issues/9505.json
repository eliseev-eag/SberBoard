{
  "url": "https://api.github.com/repos/facebook/react/issues/9505",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9505/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9505/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9505/events",
  "html_url": "https://github.com/facebook/react/issues/9505",
  "id": 223673508,
  "node_id": "MDU6SXNzdWUyMjM2NzM1MDg=",
  "number": 9505,
  "title": "[RFC] Add traversal utility to ReactTestUtils matching toTree shape",
  "user": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 139734344,
      "node_id": "MDU6TGFiZWwxMzk3MzQzNDQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Test%20Utils",
      "name": "Component: Test Utils",
      "color": "eb6420",
      "default": false
    },
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2017-04-23T22:49:34Z",
  "updated_at": "2017-10-04T19:37:46Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "body": "### Problem\r\n\r\nThe `ReactTestRenderer` now supports a new API, [`toTree`](https://github.com/facebook/react/blob/master/src/renderers/testing/ReactTestRendererFiber.js#L350-L355), which returns an easily traversed tree representing the internal state of the instance and its rendered nodes.\r\n\r\nThe existing solution for this in `TestUtils` is `findAllInRenderedTree` which traverses the root and lets you provide a test function it will call to reduce a tree based on a predicate. The predicate function is passed the public instance for the node.\r\n\r\nThe issue with that is that it makes the predicate function polymorphic and requires every consuming utility to check if it's being passed a component instance or a DOM node. \r\n\r\n\r\n### Solution\r\n\r\nI propose that we implement a new API similar to `findAllInRendererdTree` that calls the predicate function with the result of calling `toTree` on the internal instance instead of the public instance. This would mean:\r\n\r\n* the predicate function will always be called with the same data structure (a tree node)\r\n* third-party traversal utilities can be shared between `ReactTestRenderer` and `ReactTestUtils`, since they would operate on the same tree structure\r\n* You could actually assert on functional components, which currently have no instance and just call the predicate with `null`\r\n\r\nThis new API could just be a pure traversal utility, leaving it up to the consumer to accumulate results.\r\n\r\n```js\r\nimport { renderIntoDocument, traverseTree } from 'react-dom/test-utils';\r\nvar root = renderIntoDocument(<App />);\r\nvar results = [];\r\ntraverseTree(root, node => {\r\n  if (somePredicate(node) { results.push(node) }\r\n})\r\n```\r\n \r\n## Implementation\r\n\r\nWith a brief review, it looks like we could just export the `toTree` function that is currently inlined in `ReactTestRenderer` and provide a way to change:\r\n\r\n```js\r\n var publicInst = node.stateNode;\r\n      if (test(publicInst)) {\r\n        ret.push(publicInst);\r\n      }\r\n```\r\n\r\nto:\r\n```js\r\n var treeNode = toTree(node);\r\n      if (test(treeNode)) {\r\n        ret.push(treeNode);\r\n      }\r\n```\r\n\r\ncc @gaearon @bvaughn @lelandrichardson ",
  "closed_by": null
}
