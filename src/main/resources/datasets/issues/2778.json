{
  "url": "https://api.github.com/repos/facebook/react/issues/2778",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2778/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2778/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2778/events",
  "html_url": "https://github.com/facebook/react/issues/2778",
  "id": 52962181,
  "node_id": "MDU6SXNzdWU1Mjk2MjE4MQ==",
  "number": 2778,
  "title": "injecting html conversion results \"not dangerously\" (i.e. converted markdown)",
  "user": {
    "login": "Pomax",
    "id": 177243,
    "node_id": "MDQ6VXNlcjE3NzI0Mw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/177243?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Pomax",
    "html_url": "https://github.com/Pomax",
    "followers_url": "https://api.github.com/users/Pomax/followers",
    "following_url": "https://api.github.com/users/Pomax/following{/other_user}",
    "gists_url": "https://api.github.com/users/Pomax/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Pomax/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Pomax/subscriptions",
    "organizations_url": "https://api.github.com/users/Pomax/orgs",
    "repos_url": "https://api.github.com/users/Pomax/repos",
    "events_url": "https://api.github.com/users/Pomax/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Pomax/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2014-12-27T17:54:44Z",
  "updated_at": "2018-01-15T16:03:01Z",
  "closed_at": "2014-12-28T06:25:23Z",
  "author_association": "NONE",
  "body": "I have a setup where log entries are written and stored in markdown plain text. Come time to render these in the browser, they're run through a markdown to HTML converter, and that gets rendered by the browser. In React, despite the fact that the code never works with HTML except at the very last step (edits occur on plain text, saving occurs on plain text, plain text in the props/state, etc) the only way to get this data loaded in is by using the cumbersome `dangerouslySetInnerHTML` attribute, even though this HTML is not human-generated in any way, and isn't \"dynamic\" in the traditional sense; it's just the snapshot HTML representation of my text, in the same way that the HTML that React generates is simply a snapshot representation of my component.\n\n```\nvar MarkDown = React.createClass({\n  render: function() {\n    // completely transient data; It has no meaning outside of the render function\n    var html = markdown.toHTML(this.props.text);\n    return <div className=\"post\" dangerouslySetInnerHTML={{__html: html }}</div>;\n  }\n});\n```\n\nIs there something available that doesn't \"lie\" about what is being done in this scenario, like a way to tell React that there are additional safe processors available, such as:\n\n```\nReact.registerContentTransformer(\"markdown\", markdown.toHTML);\n\nvar MarkDown = React.createClass({\n  render: function() {\n    return <div className=\"post\">{markdown: this.props.text}</div>;\n  }\n});\n```\n\n(or whatever syntax would work that makes it explicit we're not working with human-generated dynamic HTML content, but with rigidly transformed, syntactically-correct-unless-the-transformer-has-bugs output)\n\nedit: to further explain the motivation for this question/request, the `dangerouslySetInnerHTML` mechanism is great and we definitely need it for user-generated HTML strings. However, there should also be a way to extend the mechanism that exists inside the `render` function for transforming data that isn't HTML but can be snapshot-serialized to HTML (like React components themselves). An additional API for telling the JSX transformer that there are additional transformers available that can be used exclusively during render() using special curly bracket syntax would be close to ideal.\n\nPeople would still need to use `dangerouslySetInnerHTML` for regular HTML string data, but people who have data that isn't HTML at all, merely transiently transformable into HTML form, should not need to say \"this HTML is dangerous\"; it's only as dangerous as the transformer makes it, putting it on part with the JSX transformer itself (bugs notwithstanding, the resulting HTML should always be well formed and legal)\n",
  "closed_by": {
    "login": "Pomax",
    "id": 177243,
    "node_id": "MDQ6VXNlcjE3NzI0Mw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/177243?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Pomax",
    "html_url": "https://github.com/Pomax",
    "followers_url": "https://api.github.com/users/Pomax/followers",
    "following_url": "https://api.github.com/users/Pomax/following{/other_user}",
    "gists_url": "https://api.github.com/users/Pomax/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Pomax/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Pomax/subscriptions",
    "organizations_url": "https://api.github.com/users/Pomax/orgs",
    "repos_url": "https://api.github.com/users/Pomax/repos",
    "events_url": "https://api.github.com/users/Pomax/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Pomax/received_events",
    "type": "User",
    "site_admin": false
  }
}
