{
  "url": "https://api.github.com/repos/facebook/react/issues/12525",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12525/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12525/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12525/events",
  "html_url": "https://github.com/facebook/react/issues/12525",
  "id": 310899571,
  "node_id": "MDU6SXNzdWUzMTA4OTk1NzE=",
  "number": 12525,
  "title": "Provide a way to detect infinite component rendering recursion in development",
  "user": {
    "login": "josh-degraw",
    "id": 18509575,
    "node_id": "MDQ6VXNlcjE4NTA5NTc1",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18509575?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/josh-degraw",
    "html_url": "https://github.com/josh-degraw",
    "followers_url": "https://api.github.com/users/josh-degraw/followers",
    "following_url": "https://api.github.com/users/josh-degraw/following{/other_user}",
    "gists_url": "https://api.github.com/users/josh-degraw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/josh-degraw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/josh-degraw/subscriptions",
    "organizations_url": "https://api.github.com/users/josh-degraw/orgs",
    "repos_url": "https://api.github.com/users/josh-degraw/repos",
    "events_url": "https://api.github.com/users/josh-degraw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/josh-degraw/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2018-04-03T16:04:05Z",
  "updated_at": "2019-04-07T02:31:08Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n- Feature (possibly bug?)\r\n\r\n**What is the current behavior?**\r\n\r\nI've been trying out the new Context API in my project and it's awesome. However, in my haste to start using it, I managed to stumble into a situation where every time I would try and render a certain component which was making use of a few different contexts, the app would completely freeze, and the only thing that would let me get out of this error state was to forcefully kill the process via the chrome task manager.\r\n\r\nNothing would be logged to the console, the app would just completely freeze, and when I opened up the task manager and saw the CPU spiked up every time i would go to this component, and the only way I could stop it was to crash the tab. \r\n\r\nI finally threw some `console` statements in and saw that it had just entered into an infinite loop between these providers. I managed to get the app to stop crashing, but I'm still unsure as to why exactly this was happening. I'm sure I was just using this API incorrectly somehow, but this was a very confusing problem to diagnose, and some error checking here would be incredibly useful\r\n\r\n**What is the expected behavior?**\r\n\r\nIt would be very beneficial to have some sort of checks in place, similar to what happens with too many `setState` calls happening too closely when you call it from `componentDidUpdate`, for example. That way, instead of freezing everything up permanently, the app could at least crash and report some sort of information and help me realize where I'd gone wrong.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n- React `16.3.0`\r\n- Chrome `65.0.3325.181`\r\n\r\n",
  "closed_by": null
}
