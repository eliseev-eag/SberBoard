{
  "url": "https://api.github.com/repos/facebook/react/issues/15220",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15220/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15220/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15220/events",
  "html_url": "https://github.com/facebook/react/issues/15220",
  "id": 425714282,
  "node_id": "MDU6SXNzdWU0MjU3MTQyODI=",
  "number": 15220,
  "title": "Ð¡ontext via Provider and static contextType.",
  "user": {
    "login": "GTOsss",
    "id": 19191516,
    "node_id": "MDQ6VXNlcjE5MTkxNTE2",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19191516?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GTOsss",
    "html_url": "https://github.com/GTOsss",
    "followers_url": "https://api.github.com/users/GTOsss/followers",
    "following_url": "https://api.github.com/users/GTOsss/following{/other_user}",
    "gists_url": "https://api.github.com/users/GTOsss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GTOsss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GTOsss/subscriptions",
    "organizations_url": "https://api.github.com/users/GTOsss/orgs",
    "repos_url": "https://api.github.com/users/GTOsss/repos",
    "events_url": "https://api.github.com/users/GTOsss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GTOsss/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-03-27T01:00:46Z",
  "updated_at": "2019-09-04T09:44:57Z",
  "closed_at": "2019-09-04T09:44:57Z",
  "author_association": "NONE",
  "body": "If for Provider we will pass as value a new object or function, everytime when new props passed to component - render function will be called without shouldComponentUpdate\r\n\r\nIf use Consumer instead of static contextType - shoudComponentUpdate will works as expected.\r\n\r\nAlso if we try to use function and object by reference or primitive data type as value for Provider - shoudComponentUpdate will works as expected.\r\n \r\nshouldComponentUpdate not working: (23 line):\r\nhttps://codesandbox.io/s/6w6v78j5kn \r\n \r\nshouldComponentUpdate working: (23 line):\r\nhttps://codesandbox.io/s/0zzzkrry0 \r\n\r\nsouldComponentUpdate working with arrow function like first case but now use Consumer insted static contextType: (23 line and 51-53 lines): \r\nhttps://codesandbox.io/s/y012725j9z\r\n\r\nIt's look like bug.",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
