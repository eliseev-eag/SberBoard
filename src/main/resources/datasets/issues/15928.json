{
  "url": "https://api.github.com/repos/facebook/react/issues/15928",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15928/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15928/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15928/events",
  "html_url": "https://github.com/facebook/react/pull/15928",
  "id": 458096833,
  "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg5NzczMjk0",
  "number": 15928,
  "title": "[Fresh] Track mounted roots via DevTools Hook",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-06-19T15:58:35Z",
  "updated_at": "2019-06-19T23:12:47Z",
  "closed_at": "2019-06-19T23:12:44Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/15928",
    "html_url": "https://github.com/facebook/react/pull/15928",
    "diff_url": "https://github.com/facebook/react/pull/15928.diff",
    "patch_url": "https://github.com/facebook/react/pull/15928.patch"
  },
  "body": "The previous Fresh runtime API forced you to pass a root handle. However, that presumes that the module runtime (such as Metro) somehow is aware of all roots on the page. This isn't the case.\r\n\r\nWe could have React keep track of mounted roots. However, that might not be necessary. Here's why.\r\n\r\nWe still need some way to let the module runtime schedule refreshes. Currently this is done via DevTools Global Hook injection. DevTools (or module runtime) can set up the Global Hook. The renderer injects `scheduleHotUpdate` in it. As a result, the module runtime can schedule refreshes.\r\n\r\n**Since we already rely on the DevTools Hook for communication, we might as well use the fact that this Hook gives us information about all roots.** Indeed, that's how DevTools itself works.\r\n\r\n## The Goal\r\n\r\nThis PR lets the module runtime do \r\n\r\n```js\r\nReactRefreshRuntime.injectIntoGlobalHook(window);\r\n```\r\n\r\nand then\r\n\r\n```js\r\nReactRefreshRuntime.performReactRefresh(update);\r\n```\r\n\r\nwithout worrying about how to track mounted roots.\r\n\r\n## Implementation\r\n\r\n#### Adding `injectIntoGlobalHook` to Refresh Runtime\r\n\r\n  - This either sets up a shimmed tiny version of the Global Hook (for web users without extension).\r\n  - Or, if the Global Hook is already set up (for web users with extension, or for RN which always sets it up), monkeypatches it.\r\n\r\nThe goal in both cases is to grab the scheduling functionality and to track roots in the Runtime. This lets the module system (e.g. Metro) simply call `ReactRefreshRuntime.performReactRefresh()` and not worry about how this connects to React.\r\n\r\nThe only constraint is that `ReactRefreshRuntime.injectIntoGlobalHook()` needs to run before the renderer code. The module system can guarantee it because it owns the execution order.\r\n\r\nI have added regression tests for tracking roots.\r\n\r\n#### Tweaking the API exposed to DevTools\r\n\r\nPreviously, we had `scheduleHotUpdate(root, update)` which included the resolution function. However, I realized this doesn't really work if you don't have a `root`. For example, if you hot update a component, but no roots are mounted yet, you still want its *next* render to use the updated version. So  you _need_ to inject the resolution function anyway.\r\n\r\nI changed the API to:\r\n\r\n* `setRefreshHandler(handler)` — This sets up the family resolution function. It is called on first edit even if there are no roots.\r\n* `scheduleRefresh(root, update)` — renamed from `scheduleHotReload`\r\n* `findHostInstancesForRefresh` — renamed from `findHostInstancesForHotReload`\r\n\r\n## Follow-ups\r\n\r\nThere's a few things I plan to change here later. One is to use host config for getting client rect. But this isn't critical to get in now, since I don't plan to implement this in the first Metro integration. The second one is to add a few convenience helpers to move more React-related logic out of the module runtime (e.g. Metro). I might push that a bit later but it doesn't block this PR.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
