{
  "url": "https://api.github.com/repos/facebook/react/issues/3887",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3887/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3887/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3887/events",
  "html_url": "https://github.com/facebook/react/issues/3887",
  "id": 76905151,
  "node_id": "MDU6SXNzdWU3NjkwNTE1MQ==",
  "number": 3887,
  "title": "How to handle would-be duplicate keys in inline styles?",
  "user": {
    "login": "mkscrg",
    "id": 471342,
    "node_id": "MDQ6VXNlcjQ3MTM0Mg==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/471342?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mkscrg",
    "html_url": "https://github.com/mkscrg",
    "followers_url": "https://api.github.com/users/mkscrg/followers",
    "following_url": "https://api.github.com/users/mkscrg/following{/other_user}",
    "gists_url": "https://api.github.com/users/mkscrg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mkscrg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mkscrg/subscriptions",
    "organizations_url": "https://api.github.com/users/mkscrg/orgs",
    "repos_url": "https://api.github.com/users/mkscrg/repos",
    "events_url": "https://api.github.com/users/mkscrg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mkscrg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2015-05-16T00:43:58Z",
  "updated_at": "2015-05-16T00:49:23Z",
  "closed_at": "2015-05-16T00:49:23Z",
  "author_association": "NONE",
  "body": "Inline styles are awesome. But for ~~better or~~ worse, some CSS properties have vendor-prefixed values. How can we write these inline in React?\n\n`display: flex` is the example I ran into:\n\n``` css\n.my-container {\n  display: flex;\n  display: -webkit-flex;\n  /* etc */\n}\n```\n\nI found myself building something like\n\n``` js\nrender: function() {\n  var style = {\n    display: \"flex\",\n    display: \"-webkit-flex\"\n  };\n  return <div style={style}>/*...*/</div>\n};\n```\n\nonly to be reminded by the linter that it won't work.\n\nWhat to do in these situations?\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
