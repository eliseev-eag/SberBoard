{
  "url": "https://api.github.com/repos/facebook/react/issues/9922",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9922/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9922/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9922/events",
  "html_url": "https://github.com/facebook/react/issues/9922",
  "id": 235085542,
  "node_id": "MDU6SXNzdWUyMzUwODU1NDI=",
  "number": 9922,
  "title": "Non-shouldComponentUpdate for state AND prop updates.",
  "user": {
    "login": "benwiley4000",
    "id": 13558253,
    "node_id": "MDQ6VXNlcjEzNTU4MjUz",
    "avatar_url": "https://avatars2.githubusercontent.com/u/13558253?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benwiley4000",
    "html_url": "https://github.com/benwiley4000",
    "followers_url": "https://api.github.com/users/benwiley4000/followers",
    "following_url": "https://api.github.com/users/benwiley4000/following{/other_user}",
    "gists_url": "https://api.github.com/users/benwiley4000/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benwiley4000/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benwiley4000/subscriptions",
    "organizations_url": "https://api.github.com/users/benwiley4000/orgs",
    "repos_url": "https://api.github.com/users/benwiley4000/repos",
    "events_url": "https://api.github.com/users/benwiley4000/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benwiley4000/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-06-11T19:18:27Z",
  "updated_at": "2017-06-13T14:35:51Z",
  "closed_at": "2017-06-13T14:35:51Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nThe only render-independent lifecycle hook that is called for both state and prop updates is `shouldComponentUpdate`.\r\n\r\n**What is the expected behavior?**\r\n\r\nThere are certain cases where it currently makes sense to run some code whenever state or props update, even if a render won't happen. E.g. a context-providing component which needs to update its child subscribers even if it's best not to re-render the immediate child due to the frequency of updates.\r\n\r\n**Why are you using state for this?** *In my case*, I'm re-rendering only while my component is not passed any children - then the component renders an instance of a shallow child component, passed props based on our internal state. When `children` *is* passed in, I don't want to update since I would be re-rendering a potentially large component tree for no reason - but I still want to notify any context subscribers that the state changed.\r\n\r\nIt's workable to use `shouldComponentUpdate`, but that's not what this lifecycle method is for.\r\n\r\n**ETA:** maybe `componentWillReceiveState` or similar? Only called for state updates. Should be called *after* `componentWillReceiveProps` (which may have updated the `nextState`), and *before* `shouldComponentUpdate`. No `setState` allowed.",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
