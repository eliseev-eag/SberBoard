{
  "url": "https://api.github.com/repos/facebook/react/issues/5181",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5181/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5181/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5181/events",
  "html_url": "https://github.com/facebook/react/issues/5181",
  "id": 111609281,
  "node_id": "MDU6SXNzdWUxMTE2MDkyODE=",
  "number": 5181,
  "title": "ES6 - Double import of CSS file (CLOSED)",
  "user": {
    "login": "mobinni",
    "id": 2361292,
    "node_id": "MDQ6VXNlcjIzNjEyOTI=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/2361292?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mobinni",
    "html_url": "https://github.com/mobinni",
    "followers_url": "https://api.github.com/users/mobinni/followers",
    "following_url": "https://api.github.com/users/mobinni/following{/other_user}",
    "gists_url": "https://api.github.com/users/mobinni/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mobinni/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mobinni/subscriptions",
    "organizations_url": "https://api.github.com/users/mobinni/orgs",
    "repos_url": "https://api.github.com/users/mobinni/repos",
    "events_url": "https://api.github.com/users/mobinni/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mobinni/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-10-15T12:49:19Z",
  "updated_at": "2015-10-16T07:48:42Z",
  "closed_at": "2015-10-15T14:11:02Z",
  "author_association": "NONE",
  "body": "So this is not a traditional kind of issue, I don't know if it could be considered a traditional issue. \nNormally I would turn to stack overflow, but this is more or less an oddity that shouldn't occur, but I stumbled upon. \n\nSo I'm doing the setup for server side rendering with:\n- Webpack\n- Express\n- Babel\n- Webpack dev middleware\n\nBasically the setup that I have right now is dev specific and generates the Webpack resources in memory on the Express server. I then have React Router in place to facilitate routing (History API) on the front-end. \n\nSo basically I have:\n- Express backend to render server-side components and provide back-end routing\n- A front-end React app that can hook into back-end rendered components and hook the necessary events or do client-based routing for routes not defined on the back-end.\n\nNow I'm using Node v4.x which does not support ES6 modules by default, so I included a babel hook:\n\n```\nrequire(\"babel/register\")({\n    ignore: /node_modules/\n});\n```\n\nI need this hook because I want to share the JSX components I define for the front-end to prerender them for certain routes on the back-end (SEO). Now here's where I came across something weird. In my components I import a CSS file which the webpack loader will import into a style-tag on my page.\n\nMy routing is defined as such (for simplicity sake)\n- App\n  - Welcome\n  - Faq\n\nNow when I do the following import statement in App, Faq and Welcome:\n\n```\nimport '../../styles/component/welcome.scss';\n```\n\nI get the following error from Babel:\n\n```\n\nSyntaxError: /Users/mobinni/Documents/work/iCapps/-/kt_frontend/app/styles/component/welcome.scss: Unexpected token (1:0)\n> 1 | .welcome {\n    | ^\n  2 |   color: purple;\n  3 | }\n    at Parser.pp.raise (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/location.js:24:13)\n    at Parser.pp.unexpected (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/util.js:82:8)\n    at Parser.pp.parseExprAtom (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:425:12)\n    at Parser.parseExprAtom (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/plugins/jsx/index.js:412:22)\n    at Parser.pp.parseExprSubscripts (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:236:19)\n    at Parser.pp.parseMaybeUnary (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:217:19)\n    at Parser.pp.parseExprOps (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:163:19)\n    at Parser.pp.parseMaybeConditional (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:145:19)\n    at Parser.pp.parseMaybeAssign (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:112:19)\n    at Parser.pp.parseExpression (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:79:19)\n    at Parser.pp.parseStatement (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/statement.js:137:23)\n    at Parser.parseStatement (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/plugins/flow.js:621:22)\n    at Parser.pp.parseTopLevel (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/statement.js:30:21)\n    at Parser.parse (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/parser/index.js:70:17)\n    at Object.parse (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/node_modules/babylon/lib/index.js:45:50)\n    at Object.exports.default (/Users/mobinni/Documents/work/iCapps/test/kt_frontend/node_modules/babel-core/lib/helpers/parse.js:36:18)\n\n```\n\nEverything works perfectly and Babel can parse everything if I remove the import statement from one of the subroutes (Welcome or Faq) it will bundle perfectly.\n\nWebPack never complained about this when running babel-loader and babel to compile the JSX and JS.\nIt's only when I introduced this hook to be able to import my front-end components in the backend that it started going haywire. \n\nI was hoping maybe someone here could explain to me why this happens. Again I know Github Issues isn't a place to ask questions, but to reiterate I don't know if this is an issue or not.\n",
  "closed_by": {
    "login": "mobinni",
    "id": 2361292,
    "node_id": "MDQ6VXNlcjIzNjEyOTI=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/2361292?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mobinni",
    "html_url": "https://github.com/mobinni",
    "followers_url": "https://api.github.com/users/mobinni/followers",
    "following_url": "https://api.github.com/users/mobinni/following{/other_user}",
    "gists_url": "https://api.github.com/users/mobinni/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mobinni/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mobinni/subscriptions",
    "organizations_url": "https://api.github.com/users/mobinni/orgs",
    "repos_url": "https://api.github.com/users/mobinni/repos",
    "events_url": "https://api.github.com/users/mobinni/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mobinni/received_events",
    "type": "User",
    "site_admin": false
  }
}
