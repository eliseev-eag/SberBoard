{
  "url": "https://api.github.com/repos/facebook/react/issues/1179",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/1179/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/1179/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/1179/events",
  "html_url": "https://github.com/facebook/react/issues/1179",
  "id": 28301776,
  "node_id": "MDU6SXNzdWUyODMwMTc3Ng==",
  "number": 1179,
  "title": "Special case arrays for some DOM properties",
  "user": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "chenglou",
    "id": 1909539,
    "node_id": "MDQ6VXNlcjE5MDk1Mzk=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1909539?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chenglou",
    "html_url": "https://github.com/chenglou",
    "followers_url": "https://api.github.com/users/chenglou/followers",
    "following_url": "https://api.github.com/users/chenglou/following{/other_user}",
    "gists_url": "https://api.github.com/users/chenglou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chenglou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chenglou/subscriptions",
    "organizations_url": "https://api.github.com/users/chenglou/orgs",
    "repos_url": "https://api.github.com/users/chenglou/repos",
    "events_url": "https://api.github.com/users/chenglou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chenglou/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "chenglou",
      "id": 1909539,
      "node_id": "MDQ6VXNlcjE5MDk1Mzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1909539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chenglou",
      "html_url": "https://github.com/chenglou",
      "followers_url": "https://api.github.com/users/chenglou/followers",
      "following_url": "https://api.github.com/users/chenglou/following{/other_user}",
      "gists_url": "https://api.github.com/users/chenglou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chenglou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chenglou/subscriptions",
      "organizations_url": "https://api.github.com/users/chenglou/orgs",
      "repos_url": "https://api.github.com/users/chenglou/repos",
      "events_url": "https://api.github.com/users/chenglou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chenglou/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2014-02-26T01:36:00Z",
  "updated_at": "2014-06-11T20:11:21Z",
  "closed_at": "2014-06-11T20:11:21Z",
  "author_association": "MEMBER",
  "body": "Very often we have code that uses `transferPropsTo`, but it's very heavy handed. Often times we just want to add a class or some style based on an option.\n\nCurrently if we want to do that it looks something like this:\n\n``` js\nvar joinClasses = require('joinClasses');\n// ...\nvar MyComponent = React.createClass({\n  render: function() {\n    return <div className={joinClasses(this.props.className, \"something\")} />\n  }\n});\n```\n\nWhile it's not too bad once, we sometimes do this with `style` as well. And longer classnames. Multiply by a large number and we're in a situation that adds a lot of duplicate work for developers.\n\nSo we want to make this better. Some of us talked about a few different ideas here, but we want a combination of explicit and not too much magic. One idea was a magical prop that could be used to pass through.\n\n``` js\nreturn <div props={{className: this.props.className}} className=\"something\" />\n```\n\nOn the surface this looks great, but then we need to bake knowledge of certain props into composite components (is it a string?) and we're not guaranteed that the component is using a prop in the same way it's used in the DOM.\n\nSo what we settled on for the least surprising is in line with some of the special casing React does for some DOM properties. Right now we have booleans which get handled specially. What we're planning is the ability to special case arrays. This allows us to do this:\n\n``` js\nreturn <div className={[this.props.className, \"something\"]} />\n```\n\nWe would need to do this for individual properties and not apply the same handling for every property. For example, `className` would basically need to flatten and then join with a space. style would need to flatten and merge all objects.\n\nThis will diverge slightly from our current behavior of just stringifying ~~all~~most properties.\n",
  "closed_by": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  }
}
