{
  "url": "https://api.github.com/repos/facebook/react/issues/15164",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15164/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15164/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15164/events",
  "html_url": "https://github.com/facebook/react/issues/15164",
  "id": 423136431,
  "node_id": "MDU6SXNzdWU0MjMxMzY0MzE=",
  "number": 15164,
  "title": "is passing a ref to useMemo considered cheating?",
  "user": {
    "login": "dakom",
    "id": 6406986,
    "node_id": "MDQ6VXNlcjY0MDY5ODY=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6406986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dakom",
    "html_url": "https://github.com/dakom",
    "followers_url": "https://api.github.com/users/dakom/followers",
    "following_url": "https://api.github.com/users/dakom/following{/other_user}",
    "gists_url": "https://api.github.com/users/dakom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dakom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dakom/subscriptions",
    "organizations_url": "https://api.github.com/users/dakom/orgs",
    "repos_url": "https://api.github.com/users/dakom/repos",
    "events_url": "https://api.github.com/users/dakom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dakom/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-03-20T09:00:18Z",
  "updated_at": "2019-03-20T14:02:38Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "I have an object which is created via useMemo\r\n\r\nI do not want this object to be recreated every time a certain dependency changes, and yet I want it to always see the latest version of that dependency (not just what it was upon initial creation)\r\n\r\nCurrently, I'm doing something like this:\r\n\r\n```\r\n//bar changes between renders\r\nconst latestFoo = useRef(bar); \r\n\r\n//obj will only be created once, yet it sees the updated latestFoo\r\nconst obj = useMemo(() => ({\r\n doSomething: () => { \r\n    //use and/or set latestFoo.current \r\n  }\r\n}), [latestFoo]);\r\n```\r\n\r\nThis feels like a little bit of a lie... because it kindof depends on an updated `latestFoo.current`... not really `latestFoo` the ref, if that makes sense.\r\n\r\nYet it works fine as far as I can see....\r\n\r\nNot sure if I should feel bad about lying to `useMemo` about its deps, or if it's not really a lie at all and this is actually a totally expected use case of `useRef`\r\n\r\nAny tips are appreciated.\r\n\r\nP.S. this was prompted by refactoring my code after reading this page, which was an _enourmous_ help in understanding hooks and writing code that uses them more consciously:  https://overreacted.io/a-complete-guide-to-useeffect/\r\n\r\n@gaearon would you rather me post questions like this somewhere else? Didn't see a comment section on the site and I don't use twitter...",
  "closed_by": null
}
