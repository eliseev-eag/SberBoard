{
  "url": "https://api.github.com/repos/facebook/react/issues/8515",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8515/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8515/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8515/events",
  "html_url": "https://github.com/facebook/react/issues/8515",
  "id": 194060493,
  "node_id": "MDU6SXNzdWUxOTQwNjA0OTM=",
  "number": 8515,
  "title": "onChange event is not triggering in Mozilla and IE for type=file React js/Redux",
  "user": {
    "login": "vignestion",
    "id": 13369831,
    "node_id": "MDQ6VXNlcjEzMzY5ODMx",
    "avatar_url": "https://avatars1.githubusercontent.com/u/13369831?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vignestion",
    "html_url": "https://github.com/vignestion",
    "followers_url": "https://api.github.com/users/vignestion/followers",
    "following_url": "https://api.github.com/users/vignestion/following{/other_user}",
    "gists_url": "https://api.github.com/users/vignestion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vignestion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vignestion/subscriptions",
    "organizations_url": "https://api.github.com/users/vignestion/orgs",
    "repos_url": "https://api.github.com/users/vignestion/repos",
    "events_url": "https://api.github.com/users/vignestion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vignestion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 155984160,
      "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
      "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
      "name": "Status: Unconfirmed",
      "color": "d4c5f9",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2016-12-07T14:16:24Z",
  "updated_at": "2018-01-16T04:57:35Z",
  "closed_at": "2017-10-04T15:33:19Z",
  "author_association": "NONE",
  "body": "I am pretty new guy to react js.I am little bit confused why input type=file action is not working in Mozilla and IE it is  working fine in Chrome.I don't why it is not working...Is this a bug\r\n\r\n\r\n```\r\n import React from 'react';\r\n        import {connect} from 'react-redux';\r\n        import uuid from 'node-uuid'\r\n        import * as headerAction from '../../Actions/headerActions';\r\n        import * as uploadActions from '../../Actions/uploadActions';\r\n        import * as notificationActions from '../../Actions/notificationActions';\r\n        import shortid from 'shortid'\r\n        \r\n        class Header extends React.Component{\r\n            static contextTypes = {\r\n                router:React.PropTypes.object\r\n            };\r\n        \r\n            constructor(props){\r\n                super(props);\r\n        \r\n                this.Hovered = this.Hovered.bind(this);\r\n                this.UnHovered = this.UnHovered.bind(this);\r\n                \r\n        \r\n            }\r\n            UnHovered(){\r\n                this.props.toggleMenu(false);\r\n            }\r\n            uniqueNameAndId(){\r\n                return uuid.v1().replace(/-/g, '');\r\n            }\r\n            //below function not triggered When onChange Event happen But file upload pops up\r\n            handleFileUpload(e){\r\n               //Not working\r\n                 e.preventDefault();\r\n                 this.props.setMainPostId(shortid.generate())\r\n    \r\n    //Upload for single File not working\r\n                const reader = new FileReader();\r\n               const file = e.target.files;\r\n                console.log(file.length);\r\n                reader.onload = () => {\r\n                    console.log(\"Hello\",file.name)\r\n                };\r\n        \r\n                let file = e.target.files[0];\r\n                reader.readAsDataURL(file);\r\n        \r\n        //Upload for Multiple files NOt working\r\n                {/*if(file.length <= 5){*/}\r\n                    {/*for(let i=0;i<file.length;i++){*/}\r\n                //         const Reader = new FileReader();\r\n                //         Reader.onload = () => {\r\n                //             let pushData = {\r\n                //                 postOwnerUsername:null,\r\n                //                 id:this.uniqueNameAndId(),\r\n                //                 name:this.uniqueNameAndId(),\r\n                //                 caption:null,\r\n                //                 blobData:Reader.result\r\n                //             };\r\n                //             console.log(pushData)\r\n                //             this.props.pushtoReducer(pushData)\r\n                //         };\r\n                //         Reader.readAsDataURL(file[i])\r\n                //     }\r\n                //     this.props.removeUploadMenu(false)\r\n                //     this.context.router.push('/upload');\r\n                // }else{\r\n                //     console.log('No Dude')\r\n                //     this.props.popErrorNotification(true,\"#FF5D5D\",\"Current Max Photo 5\")\r\n                // }\r\n        \r\n        \r\n        \r\n        \r\n            }\r\n            loggedInMenu(){\r\n                return(\r\n                    <div>\r\n        \r\n                        <li>Explore</li>\r\n                        <li>My uploads</li>\r\n                        {this.props.toggle.removeUploadMenu ?\r\n                            <li>\r\n                                <label htmlFor=\"upload-photo\">Upload</label>\r\n        \r\n                                <input onChange={this.handleFileUpload.bind(this)} id=\"upload-photo\" type=\"file\" multiple/>\r\n                            </li>:\r\n                            \"\"\r\n                        }\r\n        \r\n                        <li>Profile</li>\r\n                        <li><a href=\"/logout\">Logout</a></li>\r\n                    </div>\r\n                )\r\n            }\r\n            loggedOutMenu(){\r\n                return(\r\n                    <div>\r\n                        <li onClick={()=>this.props.toogleSignInOut(true)}>SignUp/SignIn</li>\r\n                        <li>Explore</li>\r\n        \r\n                    </div>\r\n                )\r\n            }\r\n            renderMenu(){\r\n                return(\r\n                    <div onMouseLeave={this.UnHovered}>\r\n                        <div  className=\"dtcen\">\r\n                            <div className=\"dt\">\r\n        \r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"dropdown\">\r\n        \r\n                            {this.props.logInStatus.loginStatus ? this.loggedInMenu():this.loggedOutMenu()}\r\n        \r\n        \r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            Hovered(){\r\n        \r\n                this.props.toggleMenu(true);\r\n            }\r\n            render(){\r\n        \r\n               // console.log('From uuis',this.uniqueNameAndId())\r\n                //console.log(\"Login Status\",this.props.toggle.removeUploadMenu)\r\n        \r\n                return(\r\n        \r\n                    <header>\r\n                        <div className=\"logo\">\r\n                            <p>Masklor </p>\r\n                        </div>\r\n                        <div className=\"navtoggle\">\r\n                            <div onMouseEnter={this.Hovered} className=\"triangle\">\r\n                                <p>Menu</p>\r\n                            </div>\r\n        \r\n                            {this.props.toggle.menuToggle ? this.renderMenu() : \"\"}\r\n        \r\n                        </div>\r\n                    </header>\r\n        \r\n        \r\n                )\r\n            }\r\n        }\r\n        \r\n        const mapStateToProps = (state) => {\r\n          return{\r\n             toggle:state.toggle,\r\n              logInStatus:state.logInStatus,\r\n              photos:state.photoUpload\r\n          }\r\n        };\r\n        \r\n        const mapDispatchToProps = (dispatch) => {\r\n            return{\r\n                toggleMenu:bool => dispatch(headerAction.toggleStatus(bool)),\r\n                toogleSignInOut:bool => dispatch(headerAction.toggleSignPop(bool)),\r\n                pushtoReducer:object => dispatch(uploadActions.setPhotosState(object)),\r\n                popErrorNotification:(bool,color,message) => dispatch(notificationActions.popUpNotification(bool,color,message)),\r\n                removeUploadMenu:bool => dispatch(headerAction.removeUploadMenu(bool)),\r\n                setMainPostId:id =>dispatch(uploadActions.setIdforMainPost(id))\r\n            }\r\n        }\r\n        \r\n        export default connect(mapStateToProps,mapDispatchToProps\r\n)(Header)\r\n```",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
