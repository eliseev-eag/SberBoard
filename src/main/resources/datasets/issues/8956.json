{
  "url": "https://api.github.com/repos/facebook/react/issues/8956",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8956/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8956/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8956/events",
  "html_url": "https://github.com/facebook/react/issues/8956",
  "id": 206198060,
  "node_id": "MDU6SXNzdWUyMDYxOTgwNjA=",
  "number": 8956,
  "title": "proposal for fire event and send data between component",
  "user": {
    "login": "uxitten",
    "id": 1549069,
    "node_id": "MDQ6VXNlcjE1NDkwNjk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1549069?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/uxitten",
    "html_url": "https://github.com/uxitten",
    "followers_url": "https://api.github.com/users/uxitten/followers",
    "following_url": "https://api.github.com/users/uxitten/following{/other_user}",
    "gists_url": "https://api.github.com/users/uxitten/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/uxitten/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/uxitten/subscriptions",
    "organizations_url": "https://api.github.com/users/uxitten/orgs",
    "repos_url": "https://api.github.com/users/uxitten/repos",
    "events_url": "https://api.github.com/users/uxitten/events{/privacy}",
    "received_events_url": "https://api.github.com/users/uxitten/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2017-02-08T13:29:04Z",
  "updated_at": "2017-02-11T11:18:20Z",
  "closed_at": "2017-02-09T22:57:31Z",
  "author_association": "NONE",
  "body": "i have a proposal  for fire event and send data between component\r\n\r\ni create events lib\r\n\r\n```\r\nconst events = {\r\n    events: {},\r\n    listeners: {},\r\n    init(name, state, callback) {\r\n        this.events[name] = { state, callback };\r\n    },\r\n    getState(name) {\r\n        return this.events[name].state;\r\n    },\r\n    addListener(name, callback) {\r\n        if (this.listeners[name]) {\r\n            this.listeners[name].push(callback);\r\n        } else {\r\n            this.listeners[name] = [callback];\r\n        }\r\n    },\r\n    emit(name, state) {\r\n        for (let key in state) {\r\n            this.events[name].state[key] = state[key];\r\n        }\r\n\r\n        this.events[name].callback(this.events[name].state);\r\n        if (this.listeners[name]) {\r\n            this.listeners[name].forEach((listener) => listener(this.events[name].state));\r\n        }\r\n    }\r\n};\r\n\r\nwindow.events = events;\r\n```\r\n\r\nwith this lib very easy call event between component for example:\r\n\r\nthis is header section:\r\n\r\n```\r\nexport default class Header extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: ''\r\n        }\r\n        events.init('HEADERTITLE', {\r\n            title: ''\r\n        }, (state) => {\r\n            this.setState({\r\n                title: state.title\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.title}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n```\r\n\r\nvery easy call 'HEADERTITLE' event and send title\r\n\r\n```\r\nexport default class Home extends React.Component {\r\n     componentDidMount() {\r\n        events.emit('HEADERTITLE', {\r\n            title: 'Home Page',           \r\n        })\r\n    }     \r\n    render() {\r\n        return (\r\n            <div>\r\n                Home Page Content                 \r\n            </div>\r\n        );\r\n    }\r\n}\r\n```\r\n\r\nand very easy listener other component 'HEADERTITLE' event\r\n\r\n```\r\nexport default class Footer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            color: 'white'\r\n        }\r\n        events.addListener('HEADERTITLE', (state) => {\r\n            if (state.title == 'Home Page') {\r\n                this.setState({\r\n                    color: 'red',\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    color: 'white',\r\n                });\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ color: this.state.color }}>\r\n                Footer\r\n            </div>\r\n        );\r\n    }\r\n}\r\n```\r\n\r\ni use this lib in 3 project with reactjs and very easy and without complex.\r\n\r\nhttps://github.com/uxitten/events",
  "closed_by": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  }
}
