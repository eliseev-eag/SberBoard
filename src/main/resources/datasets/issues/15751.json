{
  "url": "https://api.github.com/repos/facebook/react/issues/15751",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15751/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15751/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15751/events",
  "html_url": "https://github.com/facebook/react/issues/15751",
  "id": 449265628,
  "node_id": "MDU6SXNzdWU0NDkyNjU2Mjg=",
  "number": 15751,
  "title": "Best way to handle the re-rendering in reusable components",
  "user": {
    "login": "Cwanyo",
    "id": 15672741,
    "node_id": "MDQ6VXNlcjE1NjcyNzQx",
    "avatar_url": "https://avatars2.githubusercontent.com/u/15672741?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Cwanyo",
    "html_url": "https://github.com/Cwanyo",
    "followers_url": "https://api.github.com/users/Cwanyo/followers",
    "following_url": "https://api.github.com/users/Cwanyo/following{/other_user}",
    "gists_url": "https://api.github.com/users/Cwanyo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Cwanyo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Cwanyo/subscriptions",
    "organizations_url": "https://api.github.com/users/Cwanyo/orgs",
    "repos_url": "https://api.github.com/users/Cwanyo/repos",
    "events_url": "https://api.github.com/users/Cwanyo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Cwanyo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-05-28T13:20:20Z",
  "updated_at": "2019-06-02T08:17:42Z",
  "closed_at": "2019-06-02T08:17:42Z",
  "author_association": "NONE",
  "body": "I have asked this question on stackoverflow ([here](https://stackoverflow.com/questions/56333486/best-way-to-handle-the-re-rendering-in-reusable-components)). Unfortunately I did not get any answers.\r\n\r\nBasically, I would like to create my own reusable components that can be used in other projects (**as npm package**).\r\n\r\nLet assume that the reusable components are structured in this way:\r\n```\r\nui\r\n├───card.jsx\r\n├───card-board.jsx\r\n├───card-body.jsx\r\n├───sliding.jsx\r\n├───sliding-board.jsx\r\n├───sliding-body.jsx\r\n├───img.jsx\r\n├───remove.jsx\r\n├───title.jsx\r\n└───index.jsx\r\n```\r\n\r\nUsage Example:\r\n```jsx\r\nthis.state.Cards.map(card => {\r\n  return (\r\n    <Card key={card.id}>\r\n      <Remove onRemove={() => this.handleCardRemove(card.id)} />\r\n      <Img />\r\n      <CardBody>\r\n        <Title>{card.title}</Title>\r\n        <p>{card.body}</p>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n});\r\n\r\n```\r\n\r\nIt worked great until the number of cards are **overpopulated**. All the update and delete function became really slow due to the waste re-rendering on the same static content.\r\n\r\nAnd of course this can be optimized by checking the previous and the new props in the **Card component** as below:\r\n```jsx\r\nimport React from \"react\";\r\n\r\nimport { CardContainer } from \"./card.style\";\r\nimport { deepCompare } from \"../../utils/\";\r\n\r\nconst Card = ({ children }) => {\r\n  return <CardContainer>{children}</CardContainer>;\r\n};\r\n\r\n// if return true - Card component won't re-render\r\nconst arePropsEqual = (preProps, newProps) => {\r\n  return deepCompare(preProps, newProps); // <- function that compare the nested props.\r\n};\r\n\r\nexport default React.memo(Card, arePropsEqual);\r\n```\r\n\r\nAs you can see. I'm using **React.memo** to control the re-rendering and I also implemented the **deepCompare function** that will return true if both input props are the same. \r\n\r\nSo, I would like to know what is the best way to handle this kind of problem in the large scale where there are a lot of components (probably nested). \r\n\r\nAnd, Should the above solution(React.memo) be applied for **each individual** ui component that I created?. Because some of the ui element can be used individually without depending on some kind of container eg: Img, Remove and Title component.\r\n",
  "closed_by": {
    "login": "Cwanyo",
    "id": 15672741,
    "node_id": "MDQ6VXNlcjE1NjcyNzQx",
    "avatar_url": "https://avatars2.githubusercontent.com/u/15672741?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Cwanyo",
    "html_url": "https://github.com/Cwanyo",
    "followers_url": "https://api.github.com/users/Cwanyo/followers",
    "following_url": "https://api.github.com/users/Cwanyo/following{/other_user}",
    "gists_url": "https://api.github.com/users/Cwanyo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Cwanyo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Cwanyo/subscriptions",
    "organizations_url": "https://api.github.com/users/Cwanyo/orgs",
    "repos_url": "https://api.github.com/users/Cwanyo/repos",
    "events_url": "https://api.github.com/users/Cwanyo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Cwanyo/received_events",
    "type": "User",
    "site_admin": false
  }
}
