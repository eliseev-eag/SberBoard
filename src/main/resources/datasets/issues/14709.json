{
  "url": "https://api.github.com/repos/facebook/react/issues/14709",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14709/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14709/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14709/events",
  "html_url": "https://github.com/facebook/react/issues/14709",
  "id": 403518821,
  "node_id": "MDU6SXNzdWU0MDM1MTg4MjE=",
  "number": 14709,
  "title": "Support Proxy as child",
  "user": {
    "login": "ddsol",
    "id": 4663213,
    "node_id": "MDQ6VXNlcjQ2NjMyMTM=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4663213?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ddsol",
    "html_url": "https://github.com/ddsol",
    "followers_url": "https://api.github.com/users/ddsol/followers",
    "following_url": "https://api.github.com/users/ddsol/following{/other_user}",
    "gists_url": "https://api.github.com/users/ddsol/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ddsol/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ddsol/subscriptions",
    "organizations_url": "https://api.github.com/users/ddsol/orgs",
    "repos_url": "https://api.github.com/users/ddsol/repos",
    "events_url": "https://api.github.com/users/ddsol/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ddsol/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-01-27T06:20:31Z",
  "updated_at": "2019-02-08T16:56:57Z",
  "closed_at": "2019-02-08T16:56:56Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\nObjects are not valid as a React child\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\nN/A\r\n\r\n**What is the expected behavior?**\r\nI'm trying to build a system that auto-detects if data is used in a React component. To do this, I detect usage during `render()` by using Proxies, which can register all access. This data, in turn, is used to prevent needless re-renders.\r\n\r\nA parent component can pass a Proxy which represents a string, for example, to a child component, which, without knowing it is a Proxy, can use this value in a calculation (e.g. `props.value + 1` or `` `The value is ${props.value}` ``). This can be handled with `proxy[Symbol.toPrimitive]()`, which is called by JS automatically when used in this sort of expression.\r\n\r\nHowever, this doesn't work if the child now passes the proxy directly to React as a child:\r\n```jsx\r\n  return (<span>{this.props.childValue</span>);\r\n```\r\nReact will do a `typeof` on the child, find it is an object, and report `Objects are not valid as a React child`. Unfortunately, `typeof` cannot be spoofed with Proxy, and it will always return `'object'`.\r\n\r\nThe relevant code is found [here](https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react/src/ReactChildren.js#L189-L204). The alternative could be for React to check if there's a `child[Symbol.tpPrimitive]` and, if so, evaluate it to find the intended value, and to retry with this value as the child.\r\nIt could be as simple as inserting the following code [here](https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react/src/ReactChildren.js#L189):\r\n```js\r\n  if (typeof Symbol !== 'undefined') {\r\n    const toPrimitive = children[Symbol.toPrimitive];\r\n    if (toPrimitive) {\r\n      const value = toPrimitive('string');\r\n      if (typeof value !== 'object') {\r\n\t\treturn traverseAllChildrenImpl(\r\n\t\t  value,\r\n\t\t  nameSoFar,\r\n\t\t  callback,\r\n\t\t  traverseContext,\r\n\t\t)\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\nIt would be great if React would support this use-case. The alternative is for parent components to resolve the value, which would attribute the access to the parent component, instead of the child, where it's really being used. This in turn would cause the parent to be rerendered when only the child is being changed.\r\n\r\nIf the child is aware it may be receiving Proxy objects, it can resolve the value itself. However, the whole point of using Proxies is to automate all the refresh logic (like `shouldComponentUpdate`). Also, not needing to resolve the value would allow the value to propagate through to descendant components which may be wholly unaware of the proxy. \r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nAll version, never worked before.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
