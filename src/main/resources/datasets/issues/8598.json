{
  "url": "https://api.github.com/repos/facebook/react/issues/8598",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8598/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8598/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8598/events",
  "html_url": "https://github.com/facebook/react/issues/8598",
  "id": 196340193,
  "node_id": "MDU6SXNzdWUxOTYzNDAxOTM=",
  "number": 8598,
  "title": "[Feature] setState without re-rendering children",
  "user": {
    "login": "NeekSandhu",
    "id": 11316020,
    "node_id": "MDQ6VXNlcjExMzE2MDIw",
    "avatar_url": "https://avatars3.githubusercontent.com/u/11316020?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/NeekSandhu",
    "html_url": "https://github.com/NeekSandhu",
    "followers_url": "https://api.github.com/users/NeekSandhu/followers",
    "following_url": "https://api.github.com/users/NeekSandhu/following{/other_user}",
    "gists_url": "https://api.github.com/users/NeekSandhu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/NeekSandhu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/NeekSandhu/subscriptions",
    "organizations_url": "https://api.github.com/users/NeekSandhu/orgs",
    "repos_url": "https://api.github.com/users/NeekSandhu/repos",
    "events_url": "https://api.github.com/users/NeekSandhu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/NeekSandhu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2016-12-19T06:27:14Z",
  "updated_at": "2018-01-05T19:22:25Z",
  "closed_at": "2016-12-27T19:51:58Z",
  "author_association": "NONE",
  "body": "As a dev I want to be able to change the state of component without triggering re-render of children so that I can better optimize the app.\r\n\r\nUse cases:\r\n\r\n- Imagine controlling the visual state of component that is defined by state object as ```{isVisible: true}```, that inside render function, ONLY effects the display property and nothing else.\r\n\r\n- A form input element that has invisible label that shows up if username is invalid or password is too short and is controlled by ```{hasErrors: false}```, which if true, just appends that element.\r\n\r\nNow calling ```setState({isVisible: false})``` or ```setState({hasErrors true})```  will trigger re-render of all* components below the chain when the update was in no way effecting the ```model``` and was just a visual update.\r\n\r\n*Unless they have ```shouldComponentUpdate``` implemented, which again doesn't make sense as that's extra logic for something that could've been avoided in the first place.\r\n\r\nSo it'd be very useful to have a function like ```setLocalState()``` that does not propagates to children components.\r\n\r\nFeedback welcome.\r\n\r\nThanks.",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
