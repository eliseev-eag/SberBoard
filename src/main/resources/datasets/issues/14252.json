{
  "url": "https://api.github.com/repos/facebook/react/issues/14252",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14252/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14252/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14252/events",
  "html_url": "https://github.com/facebook/react/issues/14252",
  "id": 381624722,
  "node_id": "MDU6SXNzdWUzODE2MjQ3MjI=",
  "number": 14252,
  "title": "Performance degradation without componentWillReceiveProps",
  "user": {
    "login": "jozefchutka",
    "id": 750041,
    "node_id": "MDQ6VXNlcjc1MDA0MQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/750041?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jozefchutka",
    "html_url": "https://github.com/jozefchutka",
    "followers_url": "https://api.github.com/users/jozefchutka/followers",
    "following_url": "https://api.github.com/users/jozefchutka/following{/other_user}",
    "gists_url": "https://api.github.com/users/jozefchutka/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jozefchutka/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jozefchutka/subscriptions",
    "organizations_url": "https://api.github.com/users/jozefchutka/orgs",
    "repos_url": "https://api.github.com/users/jozefchutka/repos",
    "events_url": "https://api.github.com/users/jozefchutka/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jozefchutka/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-11-16T14:36:37Z",
  "updated_at": "2019-01-03T13:37:11Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "I sense a performance degradation post deprecating `componentWillReceiveProps`. I have been through long readings about using new getDerivedStateFromProps, memoization, controlled components, uncontrolled components, however I havent seen mentioned or been able to discover more performant way of recognizing the props change. All of the suggested new options requires eventually more computation then necessary as props change detection is happening related to every render phase, either with getDerivedStateFromProps where you do some checks before every render, or with memoization where you do compute / read data during each render phase. My feeling is that previous option with componentWillReceiveProps was architected far more optimal in terms of performance.\r\n\r\nFor better understanding of this general case, think of prop say array that needs to be transformed into some other structure when changed. With componentWillReceiveProps there was a single time to do so, and without any further computation these data would be reused from state. \r\n\r\nWith getDerivedStateFromProps, processing to detect change is to be run before every single render phase (while getDerivedStateFromProps executes before every render).\r\n\r\nWith memoization, change detection is executed directly inside render phase. Memoization is not something that would be unblocked by latest React, this option was there always but was suboptimal to componentWillReceiveProps.\r\n\r\n- Have you considered well these performance downsides of removing this precise lifecycle event, before deprecating it? \r\n- What is the benefit of having componentWillReceiveProps deprecated apart from someone using it wrong way (for data loading)?\r\n- Why getDerivedStateFromProps is executed before every render as oppose to just props change?\r\n- Why getDerivedStateFromProps is scheduled before shouldComponentUpdate?",
  "closed_by": null
}
