{
  "url": "https://api.github.com/repos/facebook/react/issues/10900",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10900/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10900/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10900/events",
  "html_url": "https://github.com/facebook/react/issues/10900",
  "id": 261133406,
  "node_id": "MDU6SXNzdWUyNjExMzM0MDY=",
  "number": 10900,
  "title": "Feature Request: Global didUpdate()",
  "user": {
    "login": "ccorcos",
    "id": 1794527,
    "node_id": "MDQ6VXNlcjE3OTQ1Mjc=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1794527?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ccorcos",
    "html_url": "https://github.com/ccorcos",
    "followers_url": "https://api.github.com/users/ccorcos/followers",
    "following_url": "https://api.github.com/users/ccorcos/following{/other_user}",
    "gists_url": "https://api.github.com/users/ccorcos/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ccorcos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ccorcos/subscriptions",
    "organizations_url": "https://api.github.com/users/ccorcos/orgs",
    "repos_url": "https://api.github.com/users/ccorcos/repos",
    "events_url": "https://api.github.com/users/ccorcos/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ccorcos/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 739761016,
      "node_id": "MDU6TGFiZWw3Mzk3NjEwMTY=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Reconciler",
      "name": "Component: Reconciler",
      "color": "f9a798",
      "default": false
    },
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2017-09-27T22:08:12Z",
  "updated_at": "2018-01-06T03:25:18Z",
  "closed_at": "2018-01-06T03:25:18Z",
  "author_association": "NONE",
  "body": "Currently, its not easy to write global logic that executes after React has re-rendered. The `componentDidUpdate` lifecycle method works great when your logic is isolated to a component, but I've found myself more and more recently wanting a global `didUpdate` hook baked into React.\r\n\r\nA simple example where this is useful is if you want an isolated function (perhaps a keyboard shortcut) that creates an element on the screen and then focuses it.\r\n\r\n```js\r\nconst createNewTodo = async () => {\r\n  const id = createTodo()\r\n  await React.didUpdate()\r\n  focusTodoItem(id)\r\n}\r\n```\r\n\r\nAt [Notion](www.notion.so), we've written custom logic for doing this, but it makes upgrading with React more difficult and unstable. I think this would be useful for others too, particularly those who use Redux and are building complicated UI interactions. ",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
