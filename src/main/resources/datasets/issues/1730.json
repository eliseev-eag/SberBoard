{
  "url": "https://api.github.com/repos/facebook/react/issues/1730",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/1730/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/1730/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/1730/events",
  "html_url": "https://github.com/facebook/react/issues/1730",
  "id": 36240663,
  "node_id": "MDU6SXNzdWUzNjI0MDY2Mw==",
  "number": 1730,
  "title": "Why doesn't ReactJS passthrough \"unknown\" DOM properties?",
  "user": {
    "login": "Swivelgames",
    "id": 1456302,
    "node_id": "MDQ6VXNlcjE0NTYzMDI=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1456302?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Swivelgames",
    "html_url": "https://github.com/Swivelgames",
    "followers_url": "https://api.github.com/users/Swivelgames/followers",
    "following_url": "https://api.github.com/users/Swivelgames/following{/other_user}",
    "gists_url": "https://api.github.com/users/Swivelgames/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Swivelgames/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Swivelgames/subscriptions",
    "organizations_url": "https://api.github.com/users/Swivelgames/orgs",
    "repos_url": "https://api.github.com/users/Swivelgames/repos",
    "events_url": "https://api.github.com/users/Swivelgames/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Swivelgames/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2014-06-22T09:27:56Z",
  "updated_at": "2014-11-06T21:08:00Z",
  "closed_at": "2014-06-22T09:55:56Z",
  "author_association": "NONE",
  "body": "For instance, at the moment I have a `<label>`, that contains a **valid** `for` attribute. However, ReactJS (being the baby that it is) doesn't understand this `for` attribute... Instead of assuming the developer knows what the hell (s)he's doing, it strips it out and leaves a lovely comment about it in the console.\n\nThis is incredibly frustrating. I don't _want_ it to strip out attributes that it doesn't understand. I just want it to pass them through. In addition to React's inability to provide adequate support for attributes that have existed since HTML 1.0, what happens when the HTML spec changes and new attributes are available for existing elements?\n\nThe bug here and issue being provided is not related to the `for` attribute, but to React's inability to trust that the developer knows what they're doing. The real bug here is that React assumes the developer does NOT know what they're doing, and strips out unknown attributes out of fear. This is much less than ideal and should be remedied.\n",
  "closed_by": {
    "login": "petehunt",
    "id": 239742,
    "node_id": "MDQ6VXNlcjIzOTc0Mg==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/239742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/petehunt",
    "html_url": "https://github.com/petehunt",
    "followers_url": "https://api.github.com/users/petehunt/followers",
    "following_url": "https://api.github.com/users/petehunt/following{/other_user}",
    "gists_url": "https://api.github.com/users/petehunt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/petehunt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/petehunt/subscriptions",
    "organizations_url": "https://api.github.com/users/petehunt/orgs",
    "repos_url": "https://api.github.com/users/petehunt/repos",
    "events_url": "https://api.github.com/users/petehunt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/petehunt/received_events",
    "type": "User",
    "site_admin": false
  }
}
