{
  "url": "https://api.github.com/repos/facebook/react/issues/13744",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13744/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13744/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13744/events",
  "html_url": "https://github.com/facebook/react/pull/13744",
  "id": 364522118,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4Njg4MTE0",
  "number": 13744,
  "title": "ReactRootContainer should not be set to null if root has been rerender",
  "user": {
    "login": "AyWa",
    "id": 13608477,
    "node_id": "MDQ6VXNlcjEzNjA4NDc3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/13608477?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AyWa",
    "html_url": "https://github.com/AyWa",
    "followers_url": "https://api.github.com/users/AyWa/followers",
    "following_url": "https://api.github.com/users/AyWa/following{/other_user}",
    "gists_url": "https://api.github.com/users/AyWa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AyWa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AyWa/subscriptions",
    "organizations_url": "https://api.github.com/users/AyWa/orgs",
    "repos_url": "https://api.github.com/users/AyWa/repos",
    "events_url": "https://api.github.com/users/AyWa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AyWa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-09-27T15:06:23Z",
  "updated_at": "2019-09-10T07:33:45Z",
  "closed_at": "2019-09-10T07:33:42Z",
  "author_association": "NONE",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/13744",
    "html_url": "https://github.com/facebook/react/pull/13744",
    "diff_url": "https://github.com/facebook/react/pull/13744.diff",
    "patch_url": "https://github.com/facebook/react/pull/13744.patch"
  },
  "body": "Follow up to https://github.com/facebook/react/issues/13690\r\n\r\n- [x] add unit test to reproduce the issues\r\n- [x] implement quick/dirty fix in order to have a first iteration\r\n- [ ] implement proper fix\r\n\r\nDetail about the issue:\r\n\r\n- When we call `render/unmountComponentAtNode` inside an other life cycle that accept side effect like `ComponentDidMount`, it is queue in order to prevent reentrancy from https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberScheduler.js#L1982\r\n- if for the same `DOMContainer`, we have, an `unmountComponentAtNode` follow by a `render`, they will be queue correctly (as explain just before)\r\n- when we process the queue, it will be done in correct order and so `render` will be correctly executed after the `unmount`. However because **callback** are executed at the end of the `commitLifeCycles` we will execute the `unmountComponentAtNode` even if a render has been executed, and so we will set the `_reactRootContainer` to null. Obviously there is multiple side effect, like next `unmountComponentAtNode` might fail or we will not execute correctly all the lifecycle etc.\r\n\r\nProposal of fix:\r\n\r\nAs far as I know, the life cycle seems to be fine, the only problem is because callback are call in the end, we need a way to \"invalidate\" the `unmountComponentAtNode` callback\r\n\r\n- solution 1 https://github.com/facebook/react/commit/2ee1335f02469a16166e27e89f09efb9e17ded5b -> just a big hack -> because we are just checking if the container has a child element -> just made for fix purpose and can be easily broken (if component return null)\r\n\r\n- solution 2 current commit -> one way to do could be to mutate `_internalRoot` with a boolean like `rootShouldBeUnmount`(need bettername) and then if a render happen after the unmount call we set the boolean to false again -> still feel hacky\r\n\r\n- solution 3 could be just better to remove the callback if unmount root ? but for now we don't track if the function is the unMount one or not. (we can add property isUnmountRoot etc but doesn't know if it is better)\r\n\r\n- any better idea to experiment ?\r\n",
  "closed_by": {
    "login": "AyWa",
    "id": 13608477,
    "node_id": "MDQ6VXNlcjEzNjA4NDc3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/13608477?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AyWa",
    "html_url": "https://github.com/AyWa",
    "followers_url": "https://api.github.com/users/AyWa/followers",
    "following_url": "https://api.github.com/users/AyWa/following{/other_user}",
    "gists_url": "https://api.github.com/users/AyWa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AyWa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AyWa/subscriptions",
    "organizations_url": "https://api.github.com/users/AyWa/orgs",
    "repos_url": "https://api.github.com/users/AyWa/repos",
    "events_url": "https://api.github.com/users/AyWa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AyWa/received_events",
    "type": "User",
    "site_admin": false
  }
}
