{
  "url": "https://api.github.com/repos/facebook/react/issues/11793",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/11793/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/11793/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/11793/events",
  "html_url": "https://github.com/facebook/react/issues/11793",
  "id": 280042945,
  "node_id": "MDU6SXNzdWUyODAwNDI5NDU=",
  "number": 11793,
  "title": "Further understanding reconciliation",
  "user": {
    "login": "ghost",
    "id": 10137,
    "node_id": "MDQ6VXNlcjEwMTM3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ghost",
    "html_url": "https://github.com/ghost",
    "followers_url": "https://api.github.com/users/ghost/followers",
    "following_url": "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
    "organizations_url": "https://api.github.com/users/ghost/orgs",
    "repos_url": "https://api.github.com/users/ghost/repos",
    "events_url": "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ghost/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2017-12-07T08:31:18Z",
  "updated_at": "2019-06-14T06:08:51Z",
  "closed_at": "2017-12-07T12:59:15Z",
  "author_association": "NONE",
  "body": " One tutorial mentioned that here\r\n\r\n```\r\nrender3() {\r\n  if (this.state.showWarning) {\r\n   return (\r\n     <div>\r\n       <Warning />\r\n       <StatefulComponent key=\"a\" />\r\n     </div>\r\n   );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StatefulComponent key=\"a\" />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nthat instance of `<StatefulComponent/> `will be maintained between re renders. I understand this.\r\n\r\nHowever let's consider transition from `showWarning= false` and then to `showWarning=true.`\r\nThis means when `showWarning` became `true`, React checks that previously first child of div was `<StatefulComponent/>`, now it is `<Warning/> `- so why doesn't it unmount the` <StatefulComponent/>`? Instead it seems to compare keys and find out the` <StatefulComponent/>` didn't change. **My question is related: so how is this comparison logic order, based on what are components between different renders first compared - based on keys?**\r\n\r\n---\r\n\r\nBecause in the same tutorial author goes with this example\r\n```\r\n\r\nrender1() {\r\n  if (this.state.showWarning) {\r\n    return (\r\n      <div>\r\n        <Warning />\r\n        <StatefulComponent />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StatefulComponent />\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nand says that when showWarning goes again from false to true, react will check and say hey, there was `<StatefulComponent/>` before and now there is a `<Warning/>` component so let's unmount that `<StatefulComponent/>`. **This is same example as previous but here are no keys explicitly provided, so based on what does react compare `<Warning/>` and `<StatefulComponent/>`, based on their position in the tree and on the fact that they are both first childs of div?**\r\n\r\n---\r\nI found this  [code](https://github.com/facebook/react/blob/0e976e136c0d0841aec71de4a4f6163963763d3f/src/renderers/shared/stack/reconciler/ReactChildReconciler.js#L112-L176) and it seems react uses \"name\" property as a first instance to compare previous and next children - but I fail to see what is \"name\". ",
  "closed_by": null
}
