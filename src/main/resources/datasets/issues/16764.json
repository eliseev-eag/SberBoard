{
  "url": "https://api.github.com/repos/facebook/react/issues/16764",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16764/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16764/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16764/events",
  "html_url": "https://github.com/facebook/react/issues/16764",
  "id": 492783124,
  "node_id": "MDU6SXNzdWU0OTI3ODMxMjQ=",
  "number": 16764,
  "title": "Different state values in functions under functional component",
  "user": {
    "login": "abhijithvijayan",
    "id": 34790378,
    "node_id": "MDQ6VXNlcjM0NzkwMzc4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/34790378?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abhijithvijayan",
    "html_url": "https://github.com/abhijithvijayan",
    "followers_url": "https://api.github.com/users/abhijithvijayan/followers",
    "following_url": "https://api.github.com/users/abhijithvijayan/following{/other_user}",
    "gists_url": "https://api.github.com/users/abhijithvijayan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abhijithvijayan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abhijithvijayan/subscriptions",
    "organizations_url": "https://api.github.com/users/abhijithvijayan/orgs",
    "repos_url": "https://api.github.com/users/abhijithvijayan/repos",
    "events_url": "https://api.github.com/users/abhijithvijayan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abhijithvijayan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-09-12T12:46:55Z",
  "updated_at": "2019-09-12T16:09:50Z",
  "closed_at": "2019-09-12T16:09:50Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nI'm not sure if it's a bug or it is supposed to work that way.\r\n\r\n**What is the current behavior?**\r\nState values is somehow reset to initial values when used under an arrow function that is defined under a functional component when using hooks.\n\r\n\r\n```\r\nconst DELTA = 5;\r\n\r\nconst initialState = {\r\n    isMounted: false,\r\n    scrollDirection: 'none',\r\n    lastScrollTop: 0,\r\n    isSidebarOpen: false,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'MOUNT':\r\n            return { ...state, isMounted: true };\r\n        case 'UNMOUNT':\r\n            return { ...state, isMounted: false };\r\n        case 'SET_SCROLL_DIRECTION':\r\n            return { ...state, scrollDirection: action.payload };\r\n        case 'SET_LAST_SCROLL':\r\n            return { ...state, lastScrollTop: action.payload };\r\n        case 'TOGGLE_SIDEBAR':\r\n            return { ...state, isSidebarOpen: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Header = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    console.log('Rendered/Updated');\r\n\r\n\t// This show the updated state values\r\n    console.log(state);\r\n\r\n    const handleScroll = () => {\r\n        const fromTop = window.scrollY;\r\n\r\n        console.log(`Scrolled`);\r\n\r\n\t\t// This still shows the initial state values\r\n        console.log(state);\r\n\r\n        // ToDo: Restore this, Now always returned as this state is not changing\r\n        // Make sure they scroll more than DELTA\r\n        // if (!state.isMounted || Math.abs(state.lastScrollTop - fromTop) <= DELTA) {\r\n        //     return;\r\n        // }\r\n\r\n        if (fromTop < DELTA) {\r\n            dispatch({ type: 'SET_SCROLL_DIRECTION', payload: 'none' });\r\n        } else if (fromTop > state.lastScrollTop && fromTop > 100) {\r\n            if (state.scrollDirection !== 'down') {\r\n                dispatch({ type: 'SET_SCROLL_DIRECTION', payload: 'down' });\r\n            }\r\n        } else if (fromTop + window.innerHeight < document.body.scrollHeight) {\r\n            if (state.scrollDirection !== 'up') {\r\n                dispatch({ type: 'SET_SCROLL_DIRECTION', payload: 'up' });\r\n            }\r\n        }\r\n\r\n        console.log('updated');\r\n\r\n        return dispatch({ type: 'SET_LAST_SCROLL', payload: fromTop });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // update state after 100ms\r\n        setTimeout(() => {\r\n            return dispatch({ type: 'MOUNT' });\r\n        }, 100);\r\n\r\n        window.addEventListener('scroll', () => {\r\n            return throttle(handleScroll());\r\n        });\r\n\r\n        // unmounting\r\n        return () => {\r\n            dispatch({ type: 'UNMOUNT' });\r\n            return window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []); // empty-array means don't watch for any updates\r\n\r\n    const toggleSidebar = toggle => {\r\n        return dispatch({ type: 'TOGGLE_SIDEBAR', payload: toggle });\r\n    };\r\n\r\n    return (\r\n        <StyledHeader\r\n            className=\"d-flex justify-content-end pr-0 pr-sm-3 pr-md-4 pr-lg-5\"\r\n            scrollDirection={state.scrollDirection}\r\n        >\r\n            <Navbar style={{ flexFlow: 'row nowrap', justifyContent: 'flex-start' }} collapseOnSelect expand=\"sm\">\r\n                <HamburgerIcon toggleSidebar={toggleSidebar} isSidebarOpen={state.isSidebarOpen} />\r\n                <HorizontalHeader />\r\n                {/* <VerticalHeader toggleSidebar={toggleSidebar} isSidebarOpen={state.isSidebarOpen} /> */}\r\n            </Navbar>\r\n        </StyledHeader>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n```\r\n**What is the expected behavior?**\r\nThe bindings should be the same isn't it?\nIt worked perfectly when I was using class component with lifecycle methods.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact: 16.9.0\r\nBrowser: Chrome 76.0.3809.132\r\nOS: Ubuntu 18.04\r\n\r\n![Screenshot from 2019-09-12 18-15-11](https://user-images.githubusercontent.com/34790378/64785162-5e400300-d589-11e9-91d5-41e37e1186aa.png)\r\n ",
  "closed_by": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  }
}
