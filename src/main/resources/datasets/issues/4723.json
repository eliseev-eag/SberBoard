{
  "url": "https://api.github.com/repos/facebook/react/issues/4723",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4723/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4723/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4723/events",
  "html_url": "https://github.com/facebook/react/issues/4723",
  "id": 103456561,
  "node_id": "MDU6SXNzdWUxMDM0NTY1NjE=",
  "number": 4723,
  "title": "When using JSX, ReactElement children are presented as an array as opposed to a map",
  "user": {
    "login": "gajus",
    "id": 973543,
    "node_id": "MDQ6VXNlcjk3MzU0Mw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/973543?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gajus",
    "html_url": "https://github.com/gajus",
    "followers_url": "https://api.github.com/users/gajus/followers",
    "following_url": "https://api.github.com/users/gajus/following{/other_user}",
    "gists_url": "https://api.github.com/users/gajus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gajus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gajus/subscriptions",
    "organizations_url": "https://api.github.com/users/gajus/orgs",
    "repos_url": "https://api.github.com/users/gajus/repos",
    "events_url": "https://api.github.com/users/gajus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gajus/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2015-08-27T08:36:28Z",
  "updated_at": "2015-08-27T21:44:27Z",
  "closed_at": "2015-08-27T21:44:27Z",
  "author_association": "CONTRIBUTOR",
  "body": "I came across while making test cases for https://github.com/gajus/react-css-modules that had to make sure that I am not mutating `ReactElement` in an unexpected ways when making a clone of it.\n\n``` js\nconsole.log(<div><p></p><p></p></div>);\n```\n\nNotice that `children` property is a list.\n\n``` js\n{\n    type: 'div',\n    key: null,\n    ref: null,\n    _owner: null,\n    props: {\n        children: [\n            [Object],\n            [Object]\n        ]\n    },\n    _store: {}\n}\n```\n\nNow if I attempt to clone this tree (and presumably doing something with the child nodes):\n\n``` js\nlet targetElement,\n    newChildren,\n    clonedElement;\n\ntargetElement = <div><p></p><p></p></div>;\n\nnewChildren = React.Children.map(targetElement.props.children, (node) => {\n    // Do something with the children nodes.\n    return React.cloneElement(node);\n});\n\nclonedElement = React.cloneElement(targetElement, undefined, newChildren);\n\nconsole.log(clonedElement);\n```\n\nI get:\n\n``` js\n{\n    type: 'div',\n    key: null,\n    ref: null,\n    _owner: null,\n    props: {\n        children: {\n            '.0': [Getter/Setter],\n            '.1': [Getter/Setter]\n        }\n    },\n    _store: {}\n}\n```\n\nNotice that `children` property is now a map.\n\nI consider this unexpected mutation. I have tried remediating this using `Object.values`, i.e., \n\n``` js\nlet targetElement,\n    newChildren,\n    clonedElement;\n\ntargetElement = <div><p></p><p></p></div>;\n\nnewChildren = React.Children.map(targetElement.props.children, (node) => {\n    // Do something with the children nodes.\n    return React.cloneElement(node);\n});\n\nclonedElement = React.cloneElement(targetElement, undefined, Object.values(newChildren));\n\nconsole.log(clonedElement);\n```\n\nIt produces an identical object to the original, but it also prompts the following error:\n\n```\nWarning: Each child in an array or iterator should have a unique \"key\" prop. Check the React.render call using <div>. See https://fb.me/react-warning-keys for more information.\n```\n\nIt is a bit odd, considering that all I do is create an identical copy of the original JSX output object.\n\nThis appears as unexpected JSX parser behaviour. This might Babel issue too.\n",
  "closed_by": {
    "login": "gajus",
    "id": 973543,
    "node_id": "MDQ6VXNlcjk3MzU0Mw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/973543?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gajus",
    "html_url": "https://github.com/gajus",
    "followers_url": "https://api.github.com/users/gajus/followers",
    "following_url": "https://api.github.com/users/gajus/following{/other_user}",
    "gists_url": "https://api.github.com/users/gajus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gajus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gajus/subscriptions",
    "organizations_url": "https://api.github.com/users/gajus/orgs",
    "repos_url": "https://api.github.com/users/gajus/repos",
    "events_url": "https://api.github.com/users/gajus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gajus/received_events",
    "type": "User",
    "site_admin": false
  }
}
