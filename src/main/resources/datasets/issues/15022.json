{
  "url": "https://api.github.com/repos/facebook/react/issues/15022",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15022/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15022/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15022/events",
  "html_url": "https://github.com/facebook/react/pull/15022",
  "id": 417495818,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4NDgwNjc1",
  "number": 15022,
  "title": "useSubscription hook",
  "user": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 49,
  "created_at": "2019-03-05T20:51:34Z",
  "updated_at": "2019-08-09T09:49:56Z",
  "closed_at": "2019-07-16T22:59:37Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/15022",
    "html_url": "https://github.com/facebook/react/pull/15022",
    "diff_url": "https://github.com/facebook/react/pull/15022.diff",
    "patch_url": "https://github.com/facebook/react/pull/15022.patch"
  },
  "body": "I recently shared an example `useSubscription` hook as a [gist](https://gist.github.com/bvaughn/e25397f70e8c65b0ae0d7c90b731b189). Like the [`createSubscription`](https://github.com/facebook/react/blob/master/packages/create-subscription/src/createSubscription.js) class approach it was based on, this has a lot of subtle nuanceâ€“ so it seems like maybe something that we should consider releasing an \"official\" version of (along with perhaps `useFetch`).\r\n\r\nHere is the hook and some unit tests for discussion purposes.\r\n\r\nFor now I've added it inside of a new private package `react-hooks` (even though [that name is already taken](https://www.npmjs.com/package/react-hooks)). We can bikeshed a real name later, before releasing (assuming we actually decide to do so).\r\n\r\nExample usage:\r\n```js\r\nimport React, { useMemo } from \"react\";\r\nimport useSubscription from \"./useSubscription\";\r\n\r\n// In this example, \"source\" is an event dispatcher (e.g. an HTMLInputElement)\r\n// but it could be anything that emits an event and has a readable current value.\r\nfunction Example({ source }) {\r\n  // In order to avoid removing and re-adding subscriptions each time this hook is called,\r\n  // the parameters passed to this hook should be memoized.\r\n  const subscription = useMemo(\r\n    () => ({\r\n      getCurrentValue: () => source.value,\r\n      subscribe: callback => {\r\n        source.addEventListener(\"change\", callback);\r\n        return () => source.removeEventListener(\"change\", callback);\r\n      }\r\n    }),\r\n\r\n    // Re-subscribe any time our \"source\" changes\r\n    // (e.g. we get a new HTMLInputElement target)\r\n    [source]\r\n  );\r\n\r\n  const value = useSubscription(subscription);\r\n\r\n  // Your rendered output here ...\r\n}\r\n```",
  "closed_by": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  }
}
