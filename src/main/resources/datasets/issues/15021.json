{
  "url": "https://api.github.com/repos/facebook/react/issues/15021",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15021/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15021/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15021/events",
  "html_url": "https://github.com/facebook/react/pull/15021",
  "id": 417466357,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4NDU3NjIz",
  "number": 15021,
  "title": "Allow commitUpdate to re-instantiate a stateNode",
  "user": {
    "login": "drcmda",
    "id": 2223602,
    "node_id": "MDQ6VXNlcjIyMjM2MDI=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/2223602?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drcmda",
    "html_url": "https://github.com/drcmda",
    "followers_url": "https://api.github.com/users/drcmda/followers",
    "following_url": "https://api.github.com/users/drcmda/following{/other_user}",
    "gists_url": "https://api.github.com/users/drcmda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drcmda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drcmda/subscriptions",
    "organizations_url": "https://api.github.com/users/drcmda/orgs",
    "repos_url": "https://api.github.com/users/drcmda/repos",
    "events_url": "https://api.github.com/users/drcmda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drcmda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2019-03-05T19:32:37Z",
  "updated_at": "2019-04-05T08:05:13Z",
  "closed_at": null,
  "author_association": "NONE",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/15021",
    "html_url": "https://github.com/facebook/react/pull/15021",
    "diff_url": "https://github.com/facebook/react/pull/15021.diff",
    "patch_url": "https://github.com/facebook/react/pull/15021.patch"
  },
  "body": "This PR extends the reconcilers commitUpdate function with a function that can optionally signal that the host intents to re-instantiate the instance. See: https://github.com/facebook/react/issues/14983\r\n\r\nThis is how it could look from the end-users perspective, exchangeInstance is optional:\r\n\r\n```jsx\r\ncommitUpdate(instance, updatePayload, type, oldProps, newProps, fiber, exchangeInstance) {\r\n  if (!shallowEqual(newProps, oldProps)) {\r\n    const newInstance = new Catalogue[type](newProps)\r\n    exchangeInstance(newInstance)\r\n  }\r\n}\r\n```\r\n\r\n### The problem\r\n\r\nSome targets do not allow mutation of instances after creating, or at least mutation doesn't have any effect. One such case is THREEJS where [some objects](https://threejs.org/docs/index.html#api/en/geometries/PlaneGeometry) have that restriction and they are expected to be re-created:\r\n\r\n> Any modification after instantiation does not change the geometry.\r\n\r\nThis prevents my [reconciler](https://github.com/drcmda/react-three-fiber) from updating props.\r\n\r\nDan has suggested wrapping these objects, which would allow us to exchange instances. I did this, but now users get served different refs, which is confusing.\r\n\r\n```jsx\r\n<mesh ref={mesh}> // mesh.current === THREE.Mesh\r\n  <geometry ref={geo} /> // geo.current.object === THEE.Geometry\r\n```\r\n\r\nAnother suggestion was to export these objects as forwardref function, so users will have to do this:\r\n\r\n```jsx\r\nimport { Geometry } from 'react-three-fiber'\r\n\r\n<mesh ref={mesh}> // mesh.current === THREE.Mesh\r\n  <Geometry ref={geo} /> // geo.current=== THEE.Geometry\r\n```\r\n\r\nBut that's also confusing imo, maybe even more than wrapping instances. If i can i would like to abstract the problem away, it's three's problem, not the end-users. \r\n\r\nThe third option would be to use Proxies, but we can't drop IE.\r\n\r\nThis is just meant to have a more technical discussion, seeing if it would maybe be possible for the reconciler to support such platforms. The PR works, but this is just a stab into the dark.\r\n",
  "closed_by": null
}
