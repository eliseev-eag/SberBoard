{
  "url": "https://api.github.com/repos/facebook/react/issues/16887",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16887/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16887/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16887/events",
  "html_url": "https://github.com/facebook/react/issues/16887",
  "id": 498149145,
  "node_id": "MDU6SXNzdWU0OTgxNDkxNDU=",
  "number": 16887,
  "title": "Hook params inside functions are not updated (only for event listeners)",
  "user": {
    "login": "M-Izadmehr",
    "id": 28848972,
    "node_id": "MDQ6VXNlcjI4ODQ4OTcy",
    "avatar_url": "https://avatars0.githubusercontent.com/u/28848972?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/M-Izadmehr",
    "html_url": "https://github.com/M-Izadmehr",
    "followers_url": "https://api.github.com/users/M-Izadmehr/followers",
    "following_url": "https://api.github.com/users/M-Izadmehr/following{/other_user}",
    "gists_url": "https://api.github.com/users/M-Izadmehr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/M-Izadmehr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/M-Izadmehr/subscriptions",
    "organizations_url": "https://api.github.com/users/M-Izadmehr/orgs",
    "repos_url": "https://api.github.com/users/M-Izadmehr/repos",
    "events_url": "https://api.github.com/users/M-Izadmehr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/M-Izadmehr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-09-25T09:03:18Z",
  "updated_at": "2019-09-25T10:56:39Z",
  "closed_at": "2019-09-25T10:55:38Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug(possibly)\r\n\r\n**What is the current behavior?**\r\nWhenever a function is called as the consequence of an `EventListener`, the value of hooks inside that function is not updated.\r\n[Demo Hooks Behaviour](https://jsfiddle.net/Saliz/eqtd8x7g/16/)\r\n[Demo Class Behaviour](https://jsfiddle.net/Saliz/0m3tw9s1/1/)\r\n\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React.**\r\nIf you look at the examples, I created some `changeVal` methods which are responsible for adding +1 to `val` in 3 different cases.\r\n\r\nI call this handler on 3 different occasions:\r\n1) button `onClick`\r\n2) the eventListener `mouseMove` added to the `window`\r\n3) `onMouseMove` property of a div element\r\n\r\n**changeVal** is a small method like this:\r\n* class definition: \r\n```js\r\nchangeVal = () => {\r\n    console.log(\"value inside changeVal:\", this.state.val);\r\n    this.setState({ val: this.state.val + 1 });\r\n};\r\n```\r\n* functional definition:\r\n```js\r\nconst changeVal = () => {\r\n    console.log(\"value inside changeVal:\", val);\r\n    setVal(val => val + 1);\r\n};\r\n```\r\n\r\nHowever, if I try to `console.log` the value of `val` inside this `changeVal` function,\r\n* Class component behaves as expected, and it logs the value of `this.state.val` correctly for all cases\r\n* Functional component shows correct `val` for cases `(1)` and `(2)`, however for `(3)` it shows the initial value (0)\r\n\r\n[Somewhere in docs](https://reactjs.org/docs/hooks-faq.html#why-am-i-seeing-stale-props-or-state-inside-my-function) I saw that:\r\n\r\n> Any function inside a component, including event handlers and effects, “sees” the props and state from the render it was created in.\r\n\r\nI guess this is due to that issue, why is it even a case, because `val` exists in the lexical scope of the function. \r\nAlso, this behavior is different from the expected behavior from classes.\r\nMoreover, this statement is not completely right, because `onMouseMove` method of `div` is also an event handler, why does it show the correct value, but not `window.addEventListener` shows the wrong value?\r\n\r\n**What is the expected behavior?**\r\nThe log inside the function should show the same value in all cases because the scope of the function includes the `val` value\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nreact = 16.9\r\nreact-dom = 16.9\r\nI guess this problem has always existed with hooks.\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
