{
  "url": "https://api.github.com/repos/facebook/react/issues/1425",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/1425/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/1425/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/1425/events",
  "html_url": "https://github.com/facebook/react/issues/1425",
  "id": 31832289,
  "node_id": "MDU6SXNzdWUzMTgzMjI4OQ==",
  "number": 1425,
  "title": "String values for input[type='number'] & input[type='range']",
  "user": {
    "login": "sudodoki",
    "id": 1506905,
    "node_id": "MDQ6VXNlcjE1MDY5MDU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1506905?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sudodoki",
    "html_url": "https://github.com/sudodoki",
    "followers_url": "https://api.github.com/users/sudodoki/followers",
    "following_url": "https://api.github.com/users/sudodoki/following{/other_user}",
    "gists_url": "https://api.github.com/users/sudodoki/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sudodoki/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sudodoki/subscriptions",
    "organizations_url": "https://api.github.com/users/sudodoki/orgs",
    "repos_url": "https://api.github.com/users/sudodoki/repos",
    "events_url": "https://api.github.com/users/sudodoki/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sudodoki/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2014-04-18T23:50:13Z",
  "updated_at": "2017-07-12T15:08:54Z",
  "closed_at": "2017-07-12T15:08:54Z",
  "author_association": "NONE",
  "body": "Enhancement proposal: create `numberLink` or make e.target.value return value of type number for input with types `range` & `number`.\nReasoning:\n- if you have input type number, you would expect it's value to be string (duh thing that might have been historical attainment?)\n- [LinkedValueUtils](https://github.com/facebook/react/blob/385eb1cef17b8babfdade6b448a618e7e1c679db/src/browser/ui/dom/components/LinkedValueUtils.js) seems to have some different handling for handling string & boolean values\n- if you init your state with number & use valueLink, it will initialize input properly but second you change input value it will change to string (and possibly explode something, say, child property depending on it to be of type number)\n\nPartial work around would be using\n\n```\nhandleChange: function(newValue) {\n    this.setState({\n        value: parseInt(newValue, 10)\n    })\n},\n...\nrender: function() {\n    var valueLink = {\n        value = thist.state.value, requestChange: this.handleChange\n    }\n    return <input type = 'number' valueLink = {valueLink} />\n}\n```\n\nAccording to [docs](http://facebook.github.io/react/docs/two-way-binding-helpers.html#reactlink-without-linkedstatemixin).\nDemonstration of number & range inputs for React & vanilla js in [jsbin](http://jsbin.com/cixasipo/2/edit).\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
