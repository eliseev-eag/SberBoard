{
  "url": "https://api.github.com/repos/facebook/react/issues/16941",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16941/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16941/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16941/events",
  "html_url": "https://github.com/facebook/react/issues/16941",
  "id": 499787914,
  "node_id": "MDU6SXNzdWU0OTk3ODc5MTQ=",
  "number": 16941,
  "title": "eslint-plugin-react-hooks introduces a bug to minimal app unless overridden",
  "user": {
    "login": "cefn",
    "id": 159819,
    "node_id": "MDQ6VXNlcjE1OTgxOQ==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/159819?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cefn",
    "html_url": "https://github.com/cefn",
    "followers_url": "https://api.github.com/users/cefn/followers",
    "following_url": "https://api.github.com/users/cefn/following{/other_user}",
    "gists_url": "https://api.github.com/users/cefn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cefn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cefn/subscriptions",
    "organizations_url": "https://api.github.com/users/cefn/orgs",
    "repos_url": "https://api.github.com/users/cefn/repos",
    "events_url": "https://api.github.com/users/cefn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cefn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-09-28T15:50:37Z",
  "updated_at": "2019-09-28T15:50:37Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "Following up on https://github.com/facebook/react/issues/14920 ...\r\n \r\n> [ESLint] Feedback for 'exhaustive-deps' lint rule\r\n\r\n...I believe I have a case which triggers the eslint rule and which creates a looping bug if the auto-fix is applied. I also propose a way the linting might be applied to resolve this.\r\n\r\nI wrote a minimal app to explore the issue, to try to figure out an AST inspection which might mitigate the problem. Happy to refactor if you tell me an alternative way to present the backend server which would be preferred to an express dependency.\r\n\r\nThe app is a 'row editor' which edits rows from a backend, having an id and title. The UI offers a list of row links. The user can navigate to edit a row from the list or create a new row. The front end user is expected to edit the title field. However, the backend also needs to make changes(it adds the id value from the 'database' when a new record is saved).\r\n\r\nThere are two lines which require an override otherwise the app enters a loop between client and server, creating runaway saves and reloads and making the UI unusable. The override lines needed are at...\r\n\r\nhttps://github.com/cefn/graphql-gist/blob/c0bece7e6b1fda832d57ccb363b1056f7cb2d37b/react-event-loop/client.js#L73\r\nhttps://github.com/cefn/graphql-gist/blob/c0bece7e6b1fda832d57ccb363b1056f7cb2d37b/react-event-loop/client.js#L87\r\n\r\nIt could be possible to detect that setLocalRow is called within the body, and therefore allow a dependency of localRow to be commented in the array instead of declared.\r\n\r\nAlthough the minimal client app is generic, the full example is quite detailed, because the async callbacks need a server endpoint to demonstrate the issue. Additionally, the interlocking concerns of e.g. navigating to rows, auto-saving rows, creating new rows contribute to defining the problem. With fewer features supported, the problem doesn't arise. \r\n\r\nThe [backend code](https://github.com/cefn/graphql-gist/blob/c0bece7e6b1fda832d57ccb363b1056f7cb2d37b/react-event-loop/backend.js) is super-simple so hopefully doesn't confuse. If there is a specific refactoring which would help, let me know as this codebase is purely there to demonstrate the issue. \r\n\r\n`npm install` then `npm run start` then `http://localhost:8080` should be enough to observe the working system. Removing the eslint overrides and then auto-fixing will show the issues which arise if the eslint rule is allowed to add localRow or remoteRow to the dependencies.\r\n\r\n**What is the current behavior?**\r\n\r\nA loop between client and server if the auto-fix is applied\r\n\r\n**What is the expected behavior?**\r\n\r\nThe eslint rule should not introduce a dependency which causes a loop. For example, it could instead add a commented reference to localRow in the dependencies instead, to account for the case that setLocalRow is invoked in the body. \r\n\r\n```\r\n[localRow, remoteRow, saveItem]\r\n```\r\n...could look like...\r\n[ /*localRow,*/ remoteRow, saveItem]\r\n\r\nThis would allow the user to decide whether to leave the commented reference in place, or uncomment it to declare the dependency, knowing that it could create a loop. Either comment or reference would satisfy the rule.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nI observed the issue with \"eslint-plugin-react-hooks\": \"^2.0.1\"",
  "closed_by": null
}
