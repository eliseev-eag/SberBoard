{
  "url": "https://api.github.com/repos/facebook/react/issues/8310",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8310/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8310/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8310/events",
  "html_url": "https://github.com/facebook/react/issues/8310",
  "id": 189811375,
  "node_id": "MDU6SXNzdWUxODk4MTEzNzU=",
  "number": 8310,
  "title": "Feature request - PropType.*.name",
  "user": {
    "login": "tuchk4",
    "id": 5140611,
    "node_id": "MDQ6VXNlcjUxNDA2MTE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5140611?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuchk4",
    "html_url": "https://github.com/tuchk4",
    "followers_url": "https://api.github.com/users/tuchk4/followers",
    "following_url": "https://api.github.com/users/tuchk4/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuchk4/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuchk4/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuchk4/subscriptions",
    "organizations_url": "https://api.github.com/users/tuchk4/orgs",
    "repos_url": "https://api.github.com/users/tuchk4/repos",
    "events_url": "https://api.github.com/users/tuchk4/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuchk4/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2016-11-16T19:09:41Z",
  "updated_at": "2017-04-09T21:11:22Z",
  "closed_at": "2017-04-09T21:11:22Z",
  "author_association": "NONE",
  "body": "## Feature request: Fill name attribute or add static toString() method for all PropTypes.\r\n\r\nFor example:\r\n\r\n```js\r\nconst StringPropType = PropTypes.string;\r\nexpect(StringPropType.name).toEqual('checkType: String');\r\n\r\nconst ArrayOfBoolType = PropTypes.arrayOf(PropTypes.bool);\r\nexpect(ArrayOfBoolType.name).toEqual('bound checkType: Array of Bool');\r\n\r\nconst ShapeType = PropTypes.shape({\r\n  foo: PropTypes.bool,\r\n  bar: PropTypes.number\r\n});\r\nexpect(ShapeType.name).toEqual('bound checkType: Shape of foo:Bool, bar:Number'\r\n```\r\n\r\nIt maybe useful when debugging.\r\nIn my case - I need to equal components prop types and throw exception if there are same props. So if generate names for prop types - they could be compared.\r\n\r\n### Current behaviour\r\nOnly primitive types could be compared (string, bool, number). \r\nComplex types (shape, arrayOf) - each time returns new bound function. So it could not be compared by value.\r\n\r\n\r\n### Problems with custom prop types\r\n\r\nWill generate \"undefined\" name for custom prop like this:\r\n```js\r\ncustomProp: function(props, propName, componentName) {\r\n    if (!/matchme/.test(props[propName])) {\r\n      return new Error(\r\n        'Invalid prop `' + propName + '` supplied to' +\r\n        ' `' + componentName + '`. Validation failed.'\r\n      );\r\n    }\r\n  },\r\n```\r\n\r\nbut it fixed by adding function name:\r\n\r\n```js\r\ncustomProp: function customProp(props, propName, componentName) {\r\n```\r\n\r\nbtw. Same feature implemented at [tcomb](https://github.com/gcanti/tcomb) lib\r\n\r\n\r\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
