{
  "url": "https://api.github.com/repos/facebook/react/issues/12757",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12757/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12757/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12757/events",
  "html_url": "https://github.com/facebook/react/issues/12757",
  "id": 320753594,
  "node_id": "MDU6SXNzdWUzMjA3NTM1OTQ=",
  "number": 12757,
  "title": "Best practice for a meaningful componentStack in production?",
  "user": {
    "login": "morloy",
    "id": 7600303,
    "node_id": "MDQ6VXNlcjc2MDAzMDM=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/7600303?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/morloy",
    "html_url": "https://github.com/morloy",
    "followers_url": "https://api.github.com/users/morloy/followers",
    "following_url": "https://api.github.com/users/morloy/following{/other_user}",
    "gists_url": "https://api.github.com/users/morloy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/morloy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/morloy/subscriptions",
    "organizations_url": "https://api.github.com/users/morloy/orgs",
    "repos_url": "https://api.github.com/users/morloy/repos",
    "events_url": "https://api.github.com/users/morloy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/morloy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-05-07T10:28:16Z",
  "updated_at": "2018-05-07T13:57:40Z",
  "closed_at": "2018-05-07T12:58:23Z",
  "author_association": "NONE",
  "body": "Using Sentry for bug reporting in our production build we often encounter a `componentStack` like:\r\n```\r\n    in b\r\n    in li\r\n    in ul\r\n    in v\r\n    in div\r\n    in div\r\n    in i\r\n    in div\r\n    in Unknown\r\n    in t…\r\n```\r\n\r\nOf course, this doesn’t help to locate the problem at all. So I’m wondering, what’s the best practice to get usable information from ErrorBoundaries and the componentStack.\r\nThe following options seem to be available:\r\n* Set `mangle: false` in uglify (increases bundle size, but works)\r\n* Set `displayName` manually for all components (usually not feasible)\r\n* Use a [babel plugin](https://github.com/opbeat/babel-plugin-add-react-displayname) (somehow misses the majority of components for me)\r\n* Write a tool, that resolves the names using sourcemaps\r\n\r\nI’m curious to hear, what most people are using. For me, only the first option works well, but it doesn’t feel like a very elegant solution.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
