{
  "url": "https://api.github.com/repos/facebook/react/issues/9020",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9020/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9020/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9020/events",
  "html_url": "https://github.com/facebook/react/issues/9020",
  "id": 208317975,
  "node_id": "MDU6SXNzdWUyMDgzMTc5NzU=",
  "number": 9020,
  "title": "Is there any good way to shallow compare element?",
  "user": {
    "login": "zjuasmn",
    "id": 4462778,
    "node_id": "MDQ6VXNlcjQ0NjI3Nzg=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4462778?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zjuasmn",
    "html_url": "https://github.com/zjuasmn",
    "followers_url": "https://api.github.com/users/zjuasmn/followers",
    "following_url": "https://api.github.com/users/zjuasmn/following{/other_user}",
    "gists_url": "https://api.github.com/users/zjuasmn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zjuasmn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zjuasmn/subscriptions",
    "organizations_url": "https://api.github.com/users/zjuasmn/orgs",
    "repos_url": "https://api.github.com/users/zjuasmn/repos",
    "events_url": "https://api.github.com/users/zjuasmn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zjuasmn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-02-17T02:47:40Z",
  "updated_at": "2017-02-17T17:30:49Z",
  "closed_at": "2017-02-17T17:30:49Z",
  "author_association": "NONE",
  "body": "Is there any good way to shallow compare two elements?\r\n\r\nI have two variables `a` and `b` and I want to shallow compare their value like below:\r\n\r\n```jsx\r\nlet myFunc = ()=>alert('!');\r\nlet a = <a onClick={myFunc}>123</a>;\r\nlet b = <a onClick={myFunc}>123</a>;\r\nlet c = <a onClick={()=>alert('!')}>123</a>;\r\n\r\nisElementSwallowEqual(a, b); // return true;\r\nisElementSwallowEqual(a, c); // return false;\r\n```\r\nSince `React.createElement` creates plain object, I just implement this method by special compare the `children` value in `props`. Did `React` provide some function to do this job? Thank you.\r\n\r\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
