{
  "url": "https://api.github.com/repos/facebook/react/issues/14206",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14206/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14206/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14206/events",
  "html_url": "https://github.com/facebook/react/issues/14206",
  "id": 380000019,
  "node_id": "MDU6SXNzdWUzODAwMDAwMTk=",
  "number": 14206,
  "title": "useEffect unmount is only triggered after two renders",
  "user": {
    "login": "sw-yx",
    "id": 6764957,
    "node_id": "MDQ6VXNlcjY3NjQ5NTc=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/6764957?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sw-yx",
    "html_url": "https://github.com/sw-yx",
    "followers_url": "https://api.github.com/users/sw-yx/followers",
    "following_url": "https://api.github.com/users/sw-yx/following{/other_user}",
    "gists_url": "https://api.github.com/users/sw-yx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sw-yx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sw-yx/subscriptions",
    "organizations_url": "https://api.github.com/users/sw-yx/orgs",
    "repos_url": "https://api.github.com/users/sw-yx/repos",
    "events_url": "https://api.github.com/users/sw-yx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sw-yx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-11-12T23:56:20Z",
  "updated_at": "2018-11-19T19:14:42Z",
  "closed_at": "2018-11-19T19:14:24Z",
  "author_association": "CONTRIBUTOR",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\nThis:\r\n\r\n```js\r\nfunction GreetingFunction(props) {\r\n  useEffect(() => () => console.log('cleanup', props))\r\n  return <h1>Function</h1>\r\n}\r\nfunction render() {\r\n  console.log('render func with 1')\r\n  ReactDOM.render(<GreetingFunction name=\"1\" />, funcRoot)\r\n  console.log('rerender func with new props with 2')\r\n  ReactDOM.render(<GreetingFunction name=\"2\" />, funcRoot)\r\n  console.log('rerender func with new props with 3')\r\n  ReactDOM.render(<GreetingFunction name=\"3\" />, funcRoot)\r\n  console.log('rerender func with new props with 4')\r\n  ReactDOM.render(<GreetingFunction name=\"4\" />, funcRoot)\r\n  console.log('rerender func with new props with 5')\r\n  ReactDOM.render(<GreetingFunction name=\"5\" />, funcRoot)\r\n  console.log('rerender func with new props with 6')\r\n  ReactDOM.render(<GreetingFunction name=\"6\" />, funcRoot)\r\n  console.log('unmount func')\r\n  ReactDOM.render(null, funcRoot)\r\n}\r\n```\r\n\r\nGenerates this:\r\n\r\n```bash  \r\nrender func with 1\r\nrerender func with new props with 2\r\nrerender func with new props with 3\r\ncleanup {name: \"1\"}\r\nrerender func with new props with 4\r\ncleanup {name: \"2\"}\r\nrerender func with new props with 5\r\ncleanup {name: \"3\"}\r\nrerender func with new props with 6\r\ncleanup {name: \"4\"}\r\nunmount func\r\ncleanup {name: \"5\"}\r\ncleanup {name: \"6\"}\r\n```\r\n\r\nTo better illustrate the problem, i drew some red boxes:\r\n\r\n![image](https://user-images.githubusercontent.com/6764957/48381919-570f4680-e693-11e8-88eb-942b1e3a77b9.png)\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/04zzv9nxl\r\n\r\n**What is the expected behavior?**\r\n\r\nevery rerender should trigger an unmount of the previous render's effect\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.7.0-alpha",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
