{
  "url": "https://api.github.com/repos/facebook/react/issues/14526",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14526/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14526/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14526/events",
  "html_url": "https://github.com/facebook/react/issues/14526",
  "id": 395631503,
  "node_id": "MDU6SXNzdWUzOTU2MzE1MDM=",
  "number": 14526,
  "title": "Class component hook integration rather than functional component",
  "user": {
    "login": "malerba118",
    "id": 5760059,
    "node_id": "MDQ6VXNlcjU3NjAwNTk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5760059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/malerba118",
    "html_url": "https://github.com/malerba118",
    "followers_url": "https://api.github.com/users/malerba118/followers",
    "following_url": "https://api.github.com/users/malerba118/following{/other_user}",
    "gists_url": "https://api.github.com/users/malerba118/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/malerba118/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/malerba118/subscriptions",
    "organizations_url": "https://api.github.com/users/malerba118/orgs",
    "repos_url": "https://api.github.com/users/malerba118/repos",
    "events_url": "https://api.github.com/users/malerba118/events{/privacy}",
    "received_events_url": "https://api.github.com/users/malerba118/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-01-03T16:13:28Z",
  "updated_at": "2019-01-05T19:05:41Z",
  "closed_at": "2019-01-05T19:05:41Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nCurrently the Hooks API is compatible with functional components only and Hooks are simply functions. \r\n\r\nIt seems to me that Hooks are a declarative concept that are being implemented in an imperative manner and it's causing the need for useRef to imitate instance variables and brings about the need for rules (should be called at the top level, in the same order). Hooks are executed on every render which wastes cycles.\r\n\r\nI think if Hooks were implemented as classes and were compatible with class components rather than functional components, the interface would be a lot more intuitive and it would knock out a lot of the quirks we're seeing with Hooks in 16.7.0-alpha.2.\r\n\r\nMixins were implemented in a similar way and two of the major concerns were implicit dependencies and namespacing conflicts, but in the code I'm about to show, both of these are non-issues as all hook logic is self-contained.\r\n\r\nI think an interface like the following would have a lot of benefits with only a couple drawbacks\r\n\r\n```jsx\r\nclass WindowResizeHook extends Hook {\r\n  hooks = {\r\n    dimensions: new StateHook({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    }),\r\n    windowSizeSubscription: new EffectHook(() => {\r\n      const handler = () => {\r\n        this.dimensions.setState({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight\r\n        });\r\n      };\r\n      window.addEventListener(\"resize\", handler);\r\n      return () => window.removeEventListener(\"resize\", handler);\r\n    }, [])\r\n  };\r\n\r\n  getHeight = () => this.hooks.dimensions.state.height\r\n  getWidth = () => this.hooks.dimensions.state.width\r\n}\r\n\r\nclass Foo extends Component {\r\n\r\n  hooks = {\r\n    counter: new StateHook(0),\r\n    windowResize: new WindowResizeHook()\r\n  };\r\n\r\n  incrementCounter = () => {\r\n    this.hooks.counter.setState(prevValue => prevValue + 1);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{`Width: ${windowResize.getWidth()}, Height: ${windowResize.getHeight()}`}\r\n        <div>{this.hooks.counter.state}</div>\r\n        <button onClick={this.incrementCounter}>Increment Counter One</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n```\r\nPros:\r\n- wouldn't have to worry about using hooks at top level of function\r\n- would be instantiated once as opposed to on every render\r\n- wouldn't need useRef to imitate instance variables\r\n\r\nCons:\r\n- couldn't destructure hooks like we do today\r\n\r\nMy knowledge of react internals is little to none, so perhaps this implementation is infeasible for reasons beyond me, but I think Hooks are better represented as classes than functions. I think class representations would reduce a lot of the \"magic\" people are talking about. Also, surely missing some pros and cons so feel free to add some. \r\n\r\nEven if hooks remain available only in functional components, it would be nice to see some of the implicit magic pulled out into an explicit interface. I would gladly write a little more boilerplate if it meant having a more explicit interface.",
  "closed_by": {
    "login": "malerba118",
    "id": 5760059,
    "node_id": "MDQ6VXNlcjU3NjAwNTk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5760059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/malerba118",
    "html_url": "https://github.com/malerba118",
    "followers_url": "https://api.github.com/users/malerba118/followers",
    "following_url": "https://api.github.com/users/malerba118/following{/other_user}",
    "gists_url": "https://api.github.com/users/malerba118/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/malerba118/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/malerba118/subscriptions",
    "organizations_url": "https://api.github.com/users/malerba118/orgs",
    "repos_url": "https://api.github.com/users/malerba118/repos",
    "events_url": "https://api.github.com/users/malerba118/events{/privacy}",
    "received_events_url": "https://api.github.com/users/malerba118/received_events",
    "type": "User",
    "site_admin": false
  }
}
