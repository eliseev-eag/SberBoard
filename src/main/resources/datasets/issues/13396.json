{
  "url": "https://api.github.com/repos/facebook/react/issues/13396",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13396/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13396/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13396/events",
  "html_url": "https://github.com/facebook/react/issues/13396",
  "id": 350571032,
  "node_id": "MDU6SXNzdWUzNTA1NzEwMzI=",
  "number": 13396,
  "title": "Avoid reconciliation, alternative component interface",
  "user": {
    "login": "andrew-aladev",
    "id": 941925,
    "node_id": "MDQ6VXNlcjk0MTkyNQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/941925?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/andrew-aladev",
    "html_url": "https://github.com/andrew-aladev",
    "followers_url": "https://api.github.com/users/andrew-aladev/followers",
    "following_url": "https://api.github.com/users/andrew-aladev/following{/other_user}",
    "gists_url": "https://api.github.com/users/andrew-aladev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/andrew-aladev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/andrew-aladev/subscriptions",
    "organizations_url": "https://api.github.com/users/andrew-aladev/orgs",
    "repos_url": "https://api.github.com/users/andrew-aladev/repos",
    "events_url": "https://api.github.com/users/andrew-aladev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/andrew-aladev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-08-14T19:44:28Z",
  "updated_at": "2018-08-16T13:46:07Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "Hello. I want to ask a question about a way to avoid reconciliation process.\r\n\r\nToday I can see the following process:\r\n\r\n1. Component wants to re-render.\r\n2. Component render method provides new virtual dom.\r\n3. Some react diff library tries to find some non-optimal way to morph old virtual dom into new one.\r\n\r\nPlease fix me if I am wrong, I am not familiar with react codebase.\r\n\r\nI can see an information in [docs](https://reactjs.org/docs/reconciliation.html):\r\n\r\n> you donâ€™t have to worry about exactly what changes on every update\r\n\r\nBut your solution has complexity about O(n) or even worse, so user should care about what changes sometimes. When user knows what changed he will be able to provide O(log n) or even O(1) solution.\r\n\r\nFor example I am working with huge data list and I am receiving information from websocket about how to morph my list: append/prepend, remove, swap items, etc. I don't want to render huge component list and run reconciliation process for each mutation. I can tell virtual dom how to morph efficiently.\r\n\r\n![append](https://user-images.githubusercontent.com/941925/44114154-05201870-a013-11e8-9c7a-2e5ed890e372.jpg)\r\n\r\nIs there a way for user to provide morph method? I can imagine some api like:\r\n\r\n```\r\n// render is not defined\r\n\r\nmorph(component) {\r\n  if (...) {\r\n    component.append(<Item />);\r\n  } else {\r\n    (<Item />).prependTo(component.find({ key: '5' }));\r\n  }\r\n}\r\n\r\n```\r\n\r\nDo you have any plans to implement it? Thank you. Please feel free to ask any questions.",
  "closed_by": null
}
