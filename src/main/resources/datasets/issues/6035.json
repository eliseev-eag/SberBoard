{
  "url": "https://api.github.com/repos/facebook/react/issues/6035",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6035/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6035/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6035/events",
  "html_url": "https://github.com/facebook/react/issues/6035",
  "id": 133495441,
  "node_id": "MDU6SXNzdWUxMzM0OTU0NDE=",
  "number": 6035,
  "title": "Dynamic pure components re-initialized despite key attribute when using jsx",
  "user": {
    "login": "a-s-o",
    "id": 6897926,
    "node_id": "MDQ6VXNlcjY4OTc5MjY=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6897926?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a-s-o",
    "html_url": "https://github.com/a-s-o",
    "followers_url": "https://api.github.com/users/a-s-o/followers",
    "following_url": "https://api.github.com/users/a-s-o/following{/other_user}",
    "gists_url": "https://api.github.com/users/a-s-o/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a-s-o/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a-s-o/subscriptions",
    "organizations_url": "https://api.github.com/users/a-s-o/orgs",
    "repos_url": "https://api.github.com/users/a-s-o/repos",
    "events_url": "https://api.github.com/users/a-s-o/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a-s-o/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-02-14T02:29:41Z",
  "updated_at": "2016-02-16T23:20:55Z",
  "closed_at": "2016-02-16T19:05:33Z",
  "author_association": "NONE",
  "body": "Hello,\n\nI am using pure components but am generating them dynamically. Doing so registers as a change in react's diffing algorithm despite having a key attribute, therefore, the components' state (ex: focus) resets on each re-render.\n\nexample:\n\n``` javascript\nrender ({ dispatch, loginState }) {\n    const [ Username, Password ] = LoginFields.partiallyApply({ dispatch, state: loginState });\n    return (\n      <div className={classes.container}>\n        <Username key='Username' placeholder='Username/Email address' />\n        <Password key='Password' />\n      </div>\n    );\n}\n```\n\nI expect this is a weird way of using the components, but in the example above, the `LoginFields.partiallyApply` function does some internal work to assign state and event handlers to some form components and then returns the bound components in an array so that any additional props can be provided (assigned to `Username` and `Password` using de-structuring in this case; these are just functions that return some input controls).\n\nThe state/event handling work is a bit repetitive and depending on the number of fields it can be a lot, so I am trying out new ways of extracting it out.\n\nThe above components when used as `jsx` elements cannot be diffed, get re-instantiated each time and lose focus on each key stroke.\n\nAlternatively, if I write the view portion as follows, everything works just fine:\n\n``` javascript\n    return (\n      <div className={classes.container}>\n        {Username({ key: 'Username', placeholder: 'Username/Email address' })}\n        {Password({ key: 'Password' })}\n      </div>\n    );\n```\n\nSince both of those components are just functions, we can do that, but this is a bit odd looking, especially considering the old deprecated component syntax. \n\nI suspect the issue is in `React.createElement`. Can something be changed or is this way to out there?\n\nAppreciate any help. Thanks.\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
