{
  "url": "https://api.github.com/repos/facebook/react/issues/6381",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6381/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6381/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6381/events",
  "html_url": "https://github.com/facebook/react/pull/6381",
  "id": 144707241,
  "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ2ODk2NTg=",
  "number": 6381,
  "title": "SyntheticClipboardEvent unit tests",
  "user": {
    "login": "cbrwizard",
    "id": 1615659,
    "node_id": "MDQ6VXNlcjE2MTU2NTk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1615659?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbrwizard",
    "html_url": "https://github.com/cbrwizard",
    "followers_url": "https://api.github.com/users/cbrwizard/followers",
    "following_url": "https://api.github.com/users/cbrwizard/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbrwizard/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbrwizard/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbrwizard/subscriptions",
    "organizations_url": "https://api.github.com/users/cbrwizard/orgs",
    "repos_url": "https://api.github.com/users/cbrwizard/repos",
    "events_url": "https://api.github.com/users/cbrwizard/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbrwizard/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-03-30T20:15:45Z",
  "updated_at": "2016-03-31T14:37:45Z",
  "closed_at": "2016-03-31T14:37:31Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/6381",
    "html_url": "https://github.com/facebook/react/pull/6381",
    "diff_url": "https://github.com/facebook/react/pull/6381.diff",
    "patch_url": "https://github.com/facebook/react/pull/6381.patch"
  },
  "body": "Adds unit tests for a SyntheticClipboardEvent.\n## Before\n\n<img width=\"730\" alt=\"2016-03-30 23 07 11\" src=\"https://cloud.githubusercontent.com/assets/1615659/14155938/967d7382-f6cc-11e5-94da-cf54ecd3c961.png\">\n<img width=\"738\" alt=\"2016-03-30 23 07 50\" src=\"https://cloud.githubusercontent.com/assets/1615659/14155939/967f9e6e-f6cc-11e5-8260-6c53202fa202.png\">\n## After\n\n<img width=\"731\" alt=\"2016-03-30 23 07 37\" src=\"https://cloud.githubusercontent.com/assets/1615659/14155942/99314a0e-f6cc-11e5-9805-513c74d5faa9.png\">\n<img width=\"741\" alt=\"2016-03-30 23 07 57\" src=\"https://cloud.githubusercontent.com/assets/1615659/14155943/9935214c-f6cc-11e5-957b-63a55c94a646.png\">\n\nP.S. Unfortunately, I could not find a way to mock `window.clipboardData`, as when I put a value inside `window.clipboardData` in a spec I can't read it in the tested file. Does anybody know a way to tell `window` object inside a tested file to return a `clipboardData` value specified inside a spec? If there is a way or there are any errors, I will update the PR swiftly.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
