{
  "url": "https://api.github.com/repos/facebook/react/issues/16565",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16565/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16565/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16565/events",
  "html_url": "https://github.com/facebook/react/pull/16565",
  "id": 484919288,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwNjc2ODEw",
  "number": 16565,
  "title": "createElement() decorators.",
  "user": {
    "login": "mshoho",
    "id": 28045781,
    "node_id": "MDQ6VXNlcjI4MDQ1Nzgx",
    "avatar_url": "https://avatars1.githubusercontent.com/u/28045781?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mshoho",
    "html_url": "https://github.com/mshoho",
    "followers_url": "https://api.github.com/users/mshoho/followers",
    "following_url": "https://api.github.com/users/mshoho/following{/other_user}",
    "gists_url": "https://api.github.com/users/mshoho/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mshoho/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mshoho/subscriptions",
    "organizations_url": "https://api.github.com/users/mshoho/orgs",
    "repos_url": "https://api.github.com/users/mshoho/repos",
    "events_url": "https://api.github.com/users/mshoho/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mshoho/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-08-25T11:16:34Z",
  "updated_at": "2019-08-29T16:39:18Z",
  "closed_at": "2019-08-29T13:47:42Z",
  "author_association": "NONE",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/16565",
    "html_url": "https://github.com/facebook/react/pull/16565",
    "diff_url": "https://github.com/facebook/react/pull/16565.diff",
    "patch_url": "https://github.com/facebook/react/pull/16565.patch"
  },
  "body": "Please, let's consider the following change. So far it's just a proof of concept, I'll do all other necessary steps (tests, typings, docs) if it has a chance to land.\r\n\r\nI've seen people monkey-patching `React.createElement()` from their frameworks before. I need to monkey-patch it myself now in order to be able to automatically add some accessibility related attributes (which in my case are needed in the majority of DOM elements, could be added automatically, so adding them manually and teaching every dev on the project to add them is too much of a hustle). Some might suggest using custom jsxFactory in the project's config, which is a semi-option, it requires to import that custom `createElement` in all 100500 tsx files of the project and educate all the devs about it. And it won't help with the components which are built without JSX.\r\n\r\nSo, I'd like to be able to augment `React.createElement()` in a convenient way (you import a module, call a setup function â€” and it's working). And monkey-patching currently gives that convenience, but it's a hack and it's not future-proof (`React.createElement` might become read-only in some environment).\r\n\r\nI propose to add Decorators API. The example of which is reflected in this PR's code change. The way of defining a decorator is similar to how Python decorators are being defined. Plus a few methods to add/remove them. And the `React.Decorators` namespace could also be extended with some methods like `React.Decorators.disable()` (so that people are able to have that API consumption under their control from the application code).\r\n\r\nA code example (inside of my module's setup function):\r\n\r\n```js\r\nReact.Decorators.createElement.add(function(createElement) {\r\n    // createElement is a reference to the parent createElement\r\n    // (can be already decorated by something else).\r\n\r\n    // Should return a function with the same signature as the original createElement().\r\n    return function(type, config, children) {\r\n        if (type === 'h1') {\r\n            arguments[0] = 'h6'; // Instead of all h1's create h6's (just an example).\r\n        }\r\n        return createElement.apply(this, arguments);\r\n    };\r\n});\r\n```\r\n\r\nWhat do you think?",
  "closed_by": {
    "login": "trueadm",
    "id": 1519870,
    "node_id": "MDQ6VXNlcjE1MTk4NzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1519870?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trueadm",
    "html_url": "https://github.com/trueadm",
    "followers_url": "https://api.github.com/users/trueadm/followers",
    "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
    "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
    "organizations_url": "https://api.github.com/users/trueadm/orgs",
    "repos_url": "https://api.github.com/users/trueadm/repos",
    "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trueadm/received_events",
    "type": "User",
    "site_admin": false
  }
}
