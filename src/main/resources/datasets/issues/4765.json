{
  "url": "https://api.github.com/repos/facebook/react/issues/4765",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4765/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4765/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4765/events",
  "html_url": "https://github.com/facebook/react/issues/4765",
  "id": 104364816,
  "node_id": "MDU6SXNzdWUxMDQzNjQ4MTY=",
  "number": 4765,
  "title": "Rendering with `process.env.NODE_ENV = 'production';`",
  "user": {
    "login": "zerkms",
    "id": 302295,
    "node_id": "MDQ6VXNlcjMwMjI5NQ==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/302295?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zerkms",
    "html_url": "https://github.com/zerkms",
    "followers_url": "https://api.github.com/users/zerkms/followers",
    "following_url": "https://api.github.com/users/zerkms/following{/other_user}",
    "gists_url": "https://api.github.com/users/zerkms/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zerkms/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zerkms/subscriptions",
    "organizations_url": "https://api.github.com/users/zerkms/orgs",
    "repos_url": "https://api.github.com/users/zerkms/repos",
    "events_url": "https://api.github.com/users/zerkms/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zerkms/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2015-09-01T22:08:34Z",
  "updated_at": "2015-09-01T22:13:02Z",
  "closed_at": "2015-09-01T22:11:11Z",
  "author_association": "NONE",
  "body": "React v0.13.3\n\nCode to reproduce the problem:\n\n``` javascript\nprocess.env.NODE_ENV = 'production';\n\nclass Foo extends Component {\n    render() {\n        return <div>foo</div>;\n    }\n}\n\nReact.render(\n    <Foo />,\n    document.getElementById('app')\n);\n```\n\nWhen is run the `Uncaught TypeError: Cannot set property 'props' of undefined` error is thrown with the following callstack:\n\n``` javascript\n    function defineWarningProperty(object, key) {\n      Object.defineProperty(object, key, {\n\n        configurable: false,\n        enumerable: true,\n\n        get: function() {\n          if (!this._store) {\n            return null;\n          }\n          return this._store[key];\n        },\n\n        set: function(value) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'Don\\'t set the %s property of the React element. Instead, ' +\n            'specify the correct value when initially creating the element.',\n            key\n          ) : null);\n          this._store[key] = value; // <--- this line\n        }\n\n      });\n    }\n```\n\nwhich is invoked from\n\n``` javascript\n    var ReactElement = function(type, key, ref, owner, context, props) {\n      // Built-in properties that belong on the element\n      this.type = type;\n      this.key = key;\n      this.ref = ref;\n\n      // Record the component responsible for creating this element.\n      this._owner = owner;\n\n      // TODO: Deprecate withContext, and then the context becomes accessible\n      // through the owner.\n      this._context = context;\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        // The validation flag and props are currently mutative. We put them on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        this._store = {props: props, originalProps: assign({}, props)};\n\n        // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n        try {\n          Object.defineProperty(this._store, 'validated', {\n            configurable: false,\n            enumerable: false,\n            writable: true\n          });\n        } catch (x) {\n        }\n        this._store.validated = false;\n\n        // We're not allowed to set props directly on the object so we early\n        // return and rely on the prototype membrane to forward to the backing\n        // store.\n        if (useMutationMembrane) {\n          Object.freeze(this);\n          return;\n        }\n      }\n\n      this.props = props; // <--- this line\n    };\n```\n\nSo as we can see - `this._store` is only defined when it's not in `production` mode, but it's still being addressed.\n\nAm I missing something?\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
