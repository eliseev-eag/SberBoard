{
  "url": "https://api.github.com/repos/facebook/react/issues/16571",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16571/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16571/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16571/events",
  "html_url": "https://github.com/facebook/react/issues/16571",
  "id": 485269035,
  "node_id": "MDU6SXNzdWU0ODUyNjkwMzU=",
  "number": 16571,
  "title": "WebComponents - DOM manipulation Exception for out-of-sync VDOM",
  "user": {
    "login": "indrimuska",
    "id": 1561134,
    "node_id": "MDQ6VXNlcjE1NjExMzQ=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1561134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/indrimuska",
    "html_url": "https://github.com/indrimuska",
    "followers_url": "https://api.github.com/users/indrimuska/followers",
    "following_url": "https://api.github.com/users/indrimuska/following{/other_user}",
    "gists_url": "https://api.github.com/users/indrimuska/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/indrimuska/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/indrimuska/subscriptions",
    "organizations_url": "https://api.github.com/users/indrimuska/orgs",
    "repos_url": "https://api.github.com/users/indrimuska/repos",
    "events_url": "https://api.github.com/users/indrimuska/events{/privacy}",
    "received_events_url": "https://api.github.com/users/indrimuska/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-08-26T14:32:54Z",
  "updated_at": "2019-08-26T18:30:03Z",
  "closed_at": "2019-08-26T18:30:02Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\nIf a non-react WebComponent handles the children nodes by adding and removing elements from the DOM, it may lead to exception as the DOM is no more in sync with the VirtualDOM.\r\n\r\nFor example, if the WebComponent add an extra element in between the children and the webElement itself, when React tries to unmount the child (ReactComponent) it throws a DOM exception for:\r\n```\r\nFailed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nDemo here: https://codesandbox.io/s/react-webcomponent-issue-e3qy6\r\nTo replicate the exception, just click on the Button.\r\n\r\n**Important key points are:**\r\n1. WebElement definition: on connect, it wraps all children in a red-block div (in Angular terms you would call this _\"transclusion\"_).\r\n```js\r\nclass CustomWebelement extends HTMLElement {\r\n  connectedCallback() {\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.style.background = \"red\";\r\n    while (this.hasChildNodes()) {\r\n      wrapper.appendChild(this.firstChild);\r\n    }\r\n\r\n    this.appendChild(wrapper);\r\n  }\r\n}\r\n\r\ncustomElements.define(\"custom-webelement\", CustomWebelement);\r\n```\r\n\r\n2. Any (react) direct-child of the webelement that is dynamically removed throws exception. This is because the parent node of the component `<div>some nested content</div>` is the WebElement `<custom-webelement>` only in the VDOM, but effectively it is child of the red-div.\r\n```js\r\n<custom-webelement>\r\n  {visible && <div>some nested content</div>}\r\n\r\n  <button onClick={() => setState({ visible: !visible })}>\r\n    {visible ? \"Visible\" : \"Hidden\"}\r\n  </button>\r\n</custom-webelement>\r\n```\r\n\r\n3. If instead all children of the webElement (in the render function) were wrapped by any other HTML element, this won't cause any problem, since the parent element and child nodes are properly linked in the VDOM.\r\n```js\r\n<custom-webelement>\r\n  <div>\r\n    {visible && <div>some nested content</div>}\r\n\r\n    <button onClick={() => setState({ visible: !visible })}>\r\n      {visible ? \"Visible\" : \"Hidden\"}\r\n    </button>\r\n  </div>\r\n</custom-webelement>\r\n```\r\n\r\n**What is the expected behavior?**\r\nWebComponents are meant to provide View components that can run outside the React render-loop, so as a Developer I expect to use a webComponent written in any kind of JS framework with no exception.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nTested with React 16.8.6 on Chrome.",
  "closed_by": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  }
}
