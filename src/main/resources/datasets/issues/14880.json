{
  "url": "https://api.github.com/repos/facebook/react/issues/14880",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14880/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14880/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14880/events",
  "html_url": "https://github.com/facebook/react/issues/14880",
  "id": 411622865,
  "node_id": "MDU6SXNzdWU0MTE2MjI4NjU=",
  "number": 14880,
  "title": "useState with optional storage handler",
  "user": {
    "login": "jmccarrell-lmi",
    "id": 45601460,
    "node_id": "MDQ6VXNlcjQ1NjAxNDYw",
    "avatar_url": "https://avatars2.githubusercontent.com/u/45601460?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jmccarrell-lmi",
    "html_url": "https://github.com/jmccarrell-lmi",
    "followers_url": "https://api.github.com/users/jmccarrell-lmi/followers",
    "following_url": "https://api.github.com/users/jmccarrell-lmi/following{/other_user}",
    "gists_url": "https://api.github.com/users/jmccarrell-lmi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jmccarrell-lmi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jmccarrell-lmi/subscriptions",
    "organizations_url": "https://api.github.com/users/jmccarrell-lmi/orgs",
    "repos_url": "https://api.github.com/users/jmccarrell-lmi/repos",
    "events_url": "https://api.github.com/users/jmccarrell-lmi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jmccarrell-lmi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-02-18T19:52:38Z",
  "updated_at": "2019-02-19T14:38:23Z",
  "closed_at": "2019-02-19T14:38:23Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n*feature*\r\n\r\n**What is the current behavior?**\r\nuseState(initialValue)\r\n\r\n**What is the expected behavior?**\r\nuseState(initialValue, storageHandler) // Or whatever impl someone can think of\r\n\r\nGoing off of the example here: https://usehooks.com/useLocalStorage/\r\nThe value has two different sources. Only one is accessible, so it isn't too bad, but it technically breaks the concept of a single source of truth. It's also a very verbose solution to a simple problem, which is caused because *there is no way to trigger an effect outside of a component* without using `useState`. IMO this is fine, but you should be able to provide an alternative state to use. The function returned by useState can be used to trigger re-renders, regardless of whether the state is stored.\r\n\r\nSo, I'd suggest adding a second optional argument to useState that allows someone to specify a getters and setter for useState.\r\n\r\n`get(initialValue)`\r\n\r\n```\r\nset(newValue => {\r\n    return mutatedNewValue; //for internal memoization purposes\r\n})\r\n```\r\n\r\nThis isn't high priority or necessary, but IMO this just makes React one step closer to optimal DX opportunity for developers.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
