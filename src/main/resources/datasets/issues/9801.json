{
  "url": "https://api.github.com/repos/facebook/react/issues/9801",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/9801/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/9801/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/9801/events",
  "html_url": "https://github.com/facebook/react/issues/9801",
  "id": 231907335,
  "node_id": "MDU6SXNzdWUyMzE5MDczMzU=",
  "number": 9801,
  "title": "Non-Sensical Code in Official React Blog post: How to submit a PR for the official React blog?",
  "user": {
    "login": "idibidiart",
    "id": 1288823,
    "node_id": "MDQ6VXNlcjEyODg4MjM=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1288823?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/idibidiart",
    "html_url": "https://github.com/idibidiart",
    "followers_url": "https://api.github.com/users/idibidiart/followers",
    "following_url": "https://api.github.com/users/idibidiart/following{/other_user}",
    "gists_url": "https://api.github.com/users/idibidiart/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/idibidiart/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/idibidiart/subscriptions",
    "organizations_url": "https://api.github.com/users/idibidiart/orgs",
    "repos_url": "https://api.github.com/users/idibidiart/repos",
    "events_url": "https://api.github.com/users/idibidiart/events{/privacy}",
    "received_events_url": "https://api.github.com/users/idibidiart/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2017-05-29T01:01:51Z",
  "updated_at": "2017-10-04T19:46:32Z",
  "closed_at": "2017-10-04T19:46:32Z",
  "author_association": "NONE",
  "body": "Hey guys,\r\n\r\nA while back I came across this post on the official React blog that contained a code example that made no sense and did not implement the intent expressed in the blog post, which is to cancel a Promise in ComponentWillMount so setState is only invoked while component is mounted. I ignored it back then, but I just remembered again after I saw a tweet today about the same topic from @gaearon  (https://twitter.com/dan_abramov/status/868635169955119105)\r\n\r\nThe blog post in question is: \r\n\r\nhttps://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html\r\n\r\nThe non-sensical/non-working code is:\r\n\r\n```js\r\n// If you use ES6 promises, you may need to wrap your promise in order to make it cancelable.\r\n\r\nconst cancelablePromise = makeCancelable(\r\n  new Promise(r => component.setState({...}}))\r\n);\r\n\r\ncancelablePromise\r\n  .promise\r\n  .then(() => console.log('resolved'))\r\n  .catch((reason) => console.log('isCanceled', reason.isCanceled));\r\n\r\ncancelablePromise.cancel(); // Cancel the promise\r\n\r\n// Where makeCancelable is defined by @istarkov as:\r\n\r\nconst makeCancelable = (promise) => {\r\n  let hasCanceled_ = false;\r\n\r\n  const wrappedPromise = new Promise((resolve, reject) => {\r\n    promise.then((val) =>\r\n      hasCanceled_ ? reject({isCanceled: true}) : resolve(val)\r\n    );\r\n    promise.catch((error) =>\r\n      hasCanceled_ ? reject({isCanceled: true}) : reject(error)\r\n    );\r\n  });\r\n\r\n  return {\r\n    promise: wrappedPromise,\r\n    cancel() {\r\n      hasCanceled_ = true;\r\n    },\r\n  };\r\n}; \r\n```\r\n\r\nTry it:\r\n\r\nhttps://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact%2Cstage-2&targets=&browsers=&builtIns=false&debug=false&code=const%20cancelablePromise%20%3D%20makeCancelable(%0A%20%20new%20Promise(r%20%3D%3E%20setTimeout(()%20%3D%3E%20alert(%22we%20should%20not%20see%20this%22)%2C%202000))%0A)%3B%0A%0AcancelablePromise%0A%20%20.promise%0A%20%20.then(()%20%3D%3E%20console.log('resolved'))%0A%20%20.catch((reason)%20%3D%3E%20console.log('isCanceled'%2C%20reason.isCanceled))%3B%0A%0AcancelablePromise.cancel()%3B%20%2F%2F%20Cancel%20the%20promise%0A%0Aconst%20makeCancelable%20%3D%20(promise)%20%3D%3E%20%7B%0A%20%20let%20hasCanceled_%20%3D%20false%3B%0A%0A%20%20const%20wrappedPromise%20%3D%20new%20Promise((resolve%2C%20reject)%20%3D%3E%20%7B%0A%20%20%20%20promise.then((val)%20%3D%3E%0A%20%20%20%20%20%20hasCanceled_%20%3F%20reject(%7BisCanceled%3A%20true%7D)%20%3A%20resolve(val)%0A%20%20%20%20)%3B%0A%20%20%20%20promise.catch((error)%20%3D%3E%0A%20%20%20%20%20%20hasCanceled_%20%3F%20reject(%7BisCanceled%3A%20true%7D)%20%3A%20reject(error)%0A%20%20%20%20)%3B%0A%20%20%7D)%3B%0A%0A%20%20return%20%7B%0A%20%20%20%20promise%3A%20wrappedPromise%2C%0A%20%20%20%20cancel()%20%7B%0A%20%20%20%20%20%20hasCanceled_%20%3D%20true%3B%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%3B\r\n\r\nThe blog post is even referenced from a StackOverflow answer that was given 21 points. This is pretty ridiculous for a non-working, non-sensical example code.\r\n\r\nAFAIK, other than using schemes that rely on Promise.race (with own limitations/issues, see here: https://esdiscuss.org/topic/cancel-promise-pattern-no-cancellable-promises) there is no way to *cancel* ES6 Promises. AFAIK, the Cancellable Promise ES Proposal had been withdrawn.\r\n\r\nThe right way to do Promise cancellation is with userland Promise implementations. I'd recommend Bluebird Promise library. For details see: http://bluebirdjs.com/docs/api/cancellation.html\r\n\r\n\r\n\r\n \r\n\r\n\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
