{
  "url": "https://api.github.com/repos/facebook/react/issues/12169",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12169/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12169/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12169/events",
  "html_url": "https://github.com/facebook/react/issues/12169",
  "id": 294982759,
  "node_id": "MDU6SXNzdWUyOTQ5ODI3NTk=",
  "number": 12169,
  "title": "Prop to pass data to event handlers",
  "user": {
    "login": "shanimal",
    "id": 283957,
    "node_id": "MDQ6VXNlcjI4Mzk1Nw==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/283957?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/shanimal",
    "html_url": "https://github.com/shanimal",
    "followers_url": "https://api.github.com/users/shanimal/followers",
    "following_url": "https://api.github.com/users/shanimal/following{/other_user}",
    "gists_url": "https://api.github.com/users/shanimal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/shanimal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/shanimal/subscriptions",
    "organizations_url": "https://api.github.com/users/shanimal/orgs",
    "repos_url": "https://api.github.com/users/shanimal/repos",
    "events_url": "https://api.github.com/users/shanimal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/shanimal/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-02-07T02:15:48Z",
  "updated_at": "2018-08-09T01:06:40Z",
  "closed_at": "2018-08-09T01:06:40Z",
  "author_association": "NONE",
  "body": "This is a feature request\r\n\r\nMy suggestion is to add a known prop that gets passed through to all handlers as the second parameter. This would eliminate the need for closures, inline binding, inline arrow functions, proxyEvent.target.dataset, etc.\r\n```\r\nhandleClick(proxyEvent, eventData) {\r\n  // do stuff with eventData...\r\n}\r\n<Component eventData={data} onClick={this.handleClick} />\r\n```\r\n\r\nCurrently if we need to pass `data` through an event handler there are several ways...\r\n\r\nCreate a class method that returns a closure:\r\n```\r\nclickHandler(eventData) {\r\n  return (proxyEvent) => {\r\n    // do stuff with eventData\r\n  }\r\n}\r\n<Button onClick={clickHandler(eventData)} />\r\n```\r\n\r\nuse inline bind or arrow function\r\n```\r\nclickHandler(eventData, proxyEvent) {\r\n  // do stuff with eventData\r\n}\r\n<Button onClick={this.clickHandler.bind(this, eventData)} />\r\n<Button onClick={(proxyEvent) => clickHandler(eventData, proxyEvent)} />\r\n```\r\n\r\nAND\r\n\r\nA not so intuitive alternative is to use `proxyEvent.target.dataset`\r\n```\r\nclickHandler(proxyEvent) {\r\n    const eventData = datas\r\n      .find(data => data.get('id') === proxyEvent.target.dataset.button);\r\n    // do stuff with eventData...\r\n}\r\n<Button onClick={clickHandler} data-button={data.get('id')} />\r\n```\r\nIf you pass an object to any `data-`prop it gets converted to a string. My immutable Map becomes `DOMStringMap {button: \"Map { \"id\": \"84280bcc-ab3b-45d5-8882-dc74a17da...` so I have to pass an ID and use it in the handler to find my data.\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
