{
  "url": "https://api.github.com/repos/facebook/react/issues/5952",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5952/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5952/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5952/events",
  "html_url": "https://github.com/facebook/react/issues/5952",
  "id": 130251208,
  "node_id": "MDU6SXNzdWUxMzAyNTEyMDg=",
  "number": 5952,
  "title": "Controlled Inputs can update out of order, causing cursor jump",
  "user": {
    "login": "jquense",
    "id": 339286,
    "node_id": "MDQ6VXNlcjMzOTI4Ng==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/339286?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jquense",
    "html_url": "https://github.com/jquense",
    "followers_url": "https://api.github.com/users/jquense/followers",
    "following_url": "https://api.github.com/users/jquense/following{/other_user}",
    "gists_url": "https://api.github.com/users/jquense/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jquense/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jquense/subscriptions",
    "organizations_url": "https://api.github.com/users/jquense/orgs",
    "repos_url": "https://api.github.com/users/jquense/repos",
    "events_url": "https://api.github.com/users/jquense/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jquense/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2016-02-01T04:13:04Z",
  "updated_at": "2017-10-03T23:22:26Z",
  "closed_at": "2017-10-03T23:22:25Z",
  "author_association": "COLLABORATOR",
  "body": "Here is a subtle change introduced when the DOMInput component was switched into the current lighter weight wrappers.\n\nIn order to ensure that things like: #1698 don't happen. The inputs defer an update until all updates have been flushed when controlled. This gives the incoming props a chance to make it to the component before it inadvertently resets the value to the now, last, `props.value`.\n\nEssentially the old `value` is set on the DOM node before the new `value` has a chance to be pushed to the input props, which causes the cursor to jump to the end.\n\nThis was originally seen and addressed in: https://github.com/facebook/react/blob/0.13-stable/src/browser/ui/dom/components/ReactDOMInput.js#L30-L35\n\nHowever the recent changes removed the `forceUpdate()` and call `ReactDOMInput.updateWrapper` directly. **The difference is the `forceUpdate` enqueues itself in the update queue whereas updateWrapper does not**. Which leads to cases where the input actually updates _before_ its parents have finished updating.\n\nRelated issue to #5386, however in this cause nothing is actually async.\n\nThis is relevant because [user-land implementations of uncontrolled components](https://github.com/jquense/uncontrollable) create situations where a parent component to the input is _also_ deferring an update with `.asap()`.\n\nI have tried a bit to put together a PR to address this but I don't know that there is an easy fix as long as the DOMComponent is not itself using something like `forceUpdate`.\n## Test case demonstrating the bug\n### Expected:\n\n`inputNode.value` to not be set at all after it was manually set to `'bar'`\n### Actual:\n\n`inputNode.value` is set from: `'bar'` to `'foo'` and then from  `'foo'` to `'bar'`\n\n``` js\nvar Wrapper = React.createClass({\n  eventuallyUpdate(e) {\n    this._value = e.target.value;\n\n    // not actually \"async\" in the true sense of it.\n    ReactUpdates.asap(function() {\n      this.forceUpdate();\n    }, this);\n  },\n\n  render() {\n    return (\n      <input\n        ref=\"input\"\n        type=\"text\"\n        value={this._value || 'foo'}\n        onChange={this.eventuallyUpdate}\n      />\n    );\n  },\n});\n\nvar inst = ReactTestUtils.renderIntoDocument(<Wrapper />);\nvar inputNode = ReactDOM.findDOMNode(inst.refs.input);\nvar setCount = 0;\n\ninputNode.value = 'bar';\n\nvar desc = Object.getOwnPropertyDescriptor(\n  inputNode.constructor.prototype,\n  'value'\n);\n\nObject.defineProperty(inputNode, 'value', {\n  get: function() {\n    return desc.get.call(this);\n  },\n  set: function(val) {\n    setCount++;\n    desc.set.call(this, val);\n  },\n});\n\nReactTestUtils.Simulate.change(input, {\n  target: { value: 'bar' },\n});\n\nexpect(setCount).toBe(0); // will be 2\n```\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
