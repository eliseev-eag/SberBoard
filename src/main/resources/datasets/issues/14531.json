{
  "url": "https://api.github.com/repos/facebook/react/issues/14531",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14531/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14531/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14531/events",
  "html_url": "https://github.com/facebook/react/issues/14531",
  "id": 396114729,
  "node_id": "MDU6SXNzdWUzOTYxMTQ3Mjk=",
  "number": 14531,
  "title": "Per-component runtime feature flags (re: 16.7.0 and hooks)",
  "user": {
    "login": "elmarsto",
    "id": 315987,
    "node_id": "MDQ6VXNlcjMxNTk4Nw==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/315987?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/elmarsto",
    "html_url": "https://github.com/elmarsto",
    "followers_url": "https://api.github.com/users/elmarsto/followers",
    "following_url": "https://api.github.com/users/elmarsto/following{/other_user}",
    "gists_url": "https://api.github.com/users/elmarsto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/elmarsto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/elmarsto/subscriptions",
    "organizations_url": "https://api.github.com/users/elmarsto/orgs",
    "repos_url": "https://api.github.com/users/elmarsto/repos",
    "events_url": "https://api.github.com/users/elmarsto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/elmarsto/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-01-05T00:55:12Z",
  "updated_at": "2019-01-05T07:16:08Z",
  "closed_at": "2019-01-05T07:16:08Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nWhen I did `npm-check-updates -u` I got randomly kicked to react 16.7.0 from 16.7.0-alpha.2. Hooks stopped working. \r\n\r\nThe release notes mention that these features are behind a feature flag, but did not demonstrate how to set this flag, or link to a demonstration, indicating how this feature flag could be set. I've just trawled through the top ten Google hits for feature flags in React, and checked the documentation, and there is nothing. I'm assuming this is not a documentation oversight (I would have filed a ticket there instead, if I did) and will instead leap to the conclusion that this functionality does not yet exist. The feature flag is presumably something set during packaging, and I can't rely on being able to set it programmatically from a stock 16.7.0.\r\n\r\nThis is actually a big deal for me, as I've been using hooks extensively in a large codebase for an as-of-yet-unreleased project. My understanding was that they'd show up in non-alpha within a month or two (when I began moving over from recompose's `withState`, etc.) Now, I'm going through and removing all the hooks. I feel dismayed. It will be a while before I bother with them again. \r\n\r\nOn the other hand, I respect & agree with the reasoning presented; that React's stability is paramount, and that it is wrong to release features that change developer behaviour in ways that are not yet fully appreciated. \r\n\r\nGeneralizing, this is a problem that is likely to recur as React continues its swift, admirable ascent. So it goes on the frontend. And while I don't think the React team is going to make the same misstep that Angular did (1->2), I think there is an emergent, generalized tension in this project between improving things and the risk of breaking things. Which, upon reflection, is considerable, given (a) how popular React has become, and (b) how rapidly the frontend space changes. \r\n\r\nGeneralized problems call for generalized solutions. So, I'm going to propose a general-purpose means of setting feature flags per component. If this already exists, please let me know :3 Otherwise, please accept this proposal for, let's call them, React Feature Flags.\r\n\r\n**What is the expected behavior?**\r\n\r\nIf there are features, available via flags, these flags should be settable at runtime. To me, the place that makes the most sense would be setting a property on a given component, as rendered: \r\n```\r\nimport React, { useSomeHook } from 'react'\r\n\r\nconst Foo = ({ children }) => <div>{children}</div>\r\n\r\nFoo.features = { hooks: true } // rhymes with how defaultProps are currently set on pure functional components\r\n\r\nconst Bar = () => {\r\n   const [qux] = useSomeHook()\r\n   // ...\r\n   return <div>{qux}</div>\r\n}\r\n\r\n```\r\n\r\nAll child elements of Foo, and Foo itself, would thus have hooks enabled, and could be called like `<Foo><Bar /></Foo>`\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nAll versions. \r\n\r\nI'm imagining as features become tried-and-true they move from being disabled by default to being enabled by default; after a significant upgrade to React, everything would keep working, but there might be places where the flags could be removed without affecting operation. \r\n\r\nWhat's cool about my proposal, I think, is that it also allows code using new/alpha features to constrain the area of effect for those features, isolating any potential breakage to just those components that need the new-shiny. \r\n\r\nOr, if one is lazy or doing a quick-and-dirty, you could just set the flag once on the top-level component for your SLA, and have all the features you want, everywhere, with maximum concision. ",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
