{
  "url": "https://api.github.com/repos/facebook/react/issues/6188",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6188/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6188/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6188/events",
  "html_url": "https://github.com/facebook/react/issues/6188",
  "id": 138569737,
  "node_id": "MDU6SXNzdWUxMzg1Njk3Mzc=",
  "number": 6188,
  "title": "Provide way to defer checksum check during initial mount",
  "user": {
    "login": "DesignByOnyx",
    "id": 514040,
    "node_id": "MDQ6VXNlcjUxNDA0MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/514040?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DesignByOnyx",
    "html_url": "https://github.com/DesignByOnyx",
    "followers_url": "https://api.github.com/users/DesignByOnyx/followers",
    "following_url": "https://api.github.com/users/DesignByOnyx/following{/other_user}",
    "gists_url": "https://api.github.com/users/DesignByOnyx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DesignByOnyx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DesignByOnyx/subscriptions",
    "organizations_url": "https://api.github.com/users/DesignByOnyx/orgs",
    "repos_url": "https://api.github.com/users/DesignByOnyx/repos",
    "events_url": "https://api.github.com/users/DesignByOnyx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DesignByOnyx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-03-04T19:51:36Z",
  "updated_at": "2016-05-03T00:15:43Z",
  "closed_at": "2016-05-03T00:15:43Z",
  "author_association": "NONE",
  "body": "We have developed a custom server side rendering solution to allow for asynchronous data loading. Once everything is done we flush the final HTML to the browser along with all of the asynchronously loaded data written to the DOM. We are also generating a checksum the same way react does with server side rendering.\n\nDuring initial mount in the browser, all of the data needed by the app is available, but our data contract layer uses Promises to provide data to those who request it. Our components don't know whether or not the data is available, but our data layer does. So components use the following pseudocode for loading data:\n\n```\ncomponentWillMount () {\n    SomeModel.get({ params }).then(this.setState);\n}\n```\n\nUnderneath the hood, our model layer knows whether or not the data is available and uses the data, otherwise it makes an ajax request for the data. But being that react's render is synchronous and Promises are asynchronous, there is no way for us to take advantage of the reuse-existing-markup logic within react. We have tested that if we return a synchronous Promise shim/hack, then everything works as expected - but we all know the dangers in doing this. Is there any way we can defer the checksum checks somehow? Is there a way we can render the vdom only (in memory) and then trigger the mounting logic? We don't want a detached dom with real dom nodes, we are wanting react to construct its vdom and then mount when we tell it to. Thanks.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
