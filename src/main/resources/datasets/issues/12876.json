{
  "url": "https://api.github.com/repos/facebook/react/issues/12876",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12876/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12876/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12876/events",
  "html_url": "https://github.com/facebook/react/issues/12876",
  "id": 325100851,
  "node_id": "MDU6SXNzdWUzMjUxMDA4NTE=",
  "number": 12876,
  "title": "Efficiently ignore irrelevant updates from context",
  "user": {
    "login": "aldendaniels",
    "id": 4658558,
    "node_id": "MDQ6VXNlcjQ2NTg1NTg=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/4658558?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aldendaniels",
    "html_url": "https://github.com/aldendaniels",
    "followers_url": "https://api.github.com/users/aldendaniels/followers",
    "following_url": "https://api.github.com/users/aldendaniels/following{/other_user}",
    "gists_url": "https://api.github.com/users/aldendaniels/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aldendaniels/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aldendaniels/subscriptions",
    "organizations_url": "https://api.github.com/users/aldendaniels/orgs",
    "repos_url": "https://api.github.com/users/aldendaniels/repos",
    "events_url": "https://api.github.com/users/aldendaniels/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aldendaniels/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-05-22T00:22:01Z",
  "updated_at": "2018-08-25T20:04:10Z",
  "closed_at": "2018-07-25T20:30:14Z",
  "author_association": "NONE",
  "body": "We're using context to represent where user focus is in a large app. In our app, we have many (hundreds) of \"Focus Routes\" that listen to the focus location in the app - much like routes in React Router.\r\n\r\nMost focus transitions are irrelevant to most routes - some routes lose focus and some gain it, but most are unaffected. Today we have a context consumer at each route component that computes some derived state (e.g. `isFocused`, etc.) and provides that derived state as props to a wrapped component. The wrapped component has an optimized `shouldComponentUpdate()`.\r\n\r\nThe problem we're hitting is that React appears to do a meaningful amount of work every time the context consumer is re-rendered, even though the wrapped component doesn't re-render. This  adds up quickly across all the focus routes. Our next step is to do better profiling on in production mode, but on dev it appears to be ~0.5ms per route, which is problematic.\r\n\r\nWhat we need is a way to efficiently prevent subscribers from re-rendering when the new value (focus location in our case) isn't relevant. The `unstable_observedBits` feature is _almost_ right for us, but the the 32bit limitation is unsuitable for our scenario. If this were an unbounded list of booleans, for example, we could use this to only update invalidated components. Alternatively, if a `ContextConsumder` took a `shouldComponentUpdate()` hook we could use that.\r\n\r\nConsider this a plug for a a non-32-bit restricted alternative to `unstable_observedBits` :)\r\n\r\nIf nothing like this is forthcoming, we'll likely revert to using an emitter/subscriber model in a batched update. This is non-ideal for us, however, because there's state that we need to propagate to new components in a single render pass and context is particularly good at this. ",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
