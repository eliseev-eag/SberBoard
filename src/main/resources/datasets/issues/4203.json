{
  "url": "https://api.github.com/repos/facebook/react/issues/4203",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4203/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4203/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4203/events",
  "html_url": "https://github.com/facebook/react/issues/4203",
  "id": 90566313,
  "node_id": "MDU6SXNzdWU5MDU2NjMxMw==",
  "number": 4203,
  "title": "CloneElement not working as expected",
  "user": {
    "login": "codeuniquely",
    "id": 1037719,
    "node_id": "MDQ6VXNlcjEwMzc3MTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1037719?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/codeuniquely",
    "html_url": "https://github.com/codeuniquely",
    "followers_url": "https://api.github.com/users/codeuniquely/followers",
    "following_url": "https://api.github.com/users/codeuniquely/following{/other_user}",
    "gists_url": "https://api.github.com/users/codeuniquely/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/codeuniquely/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/codeuniquely/subscriptions",
    "organizations_url": "https://api.github.com/users/codeuniquely/orgs",
    "repos_url": "https://api.github.com/users/codeuniquely/repos",
    "events_url": "https://api.github.com/users/codeuniquely/events{/privacy}",
    "received_events_url": "https://api.github.com/users/codeuniquely/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2015-06-24T05:05:20Z",
  "updated_at": "2015-06-25T03:09:06Z",
  "closed_at": "2015-06-24T07:41:30Z",
  "author_association": "NONE",
  "body": "I have some code that lays out components like a XAML stack Panel that looks for layout properties  and calculates the style based on available width and height it sets the styles properties on contained child elements.\n\nit does all this inside a map and applies the children via cloneElement\n\n```\nvar paddedContainment = this._calculatePaddedContainment(this.props.layout, this.props.style.width, this.props.style.height );\n\nreturn React.Children.map(this.props.children, function (child) {\n\n  var expandedLayout = this._expandLayout(child.props.layout);\n  var size = this._getLayoutContainment(expandedLayout, paddedContainment);\n  paddedContainment = this._subtractDockContainment(paddedContainment, size);\n  var style = this._getLayoutStyle(this.props.style, expandedLayout, paddedContainment);\n\n  return React.cloneElement(child, { style:style }, other );\n}\n```\n\nWhat was passed in, is a component that has defined 7 children elements (defined in JSX)\n\n```\nReactElement {key: null, ref: \"Tabs\", _owner: ReactCompositeComponentWrapper, _context: Object, _store: Object}\n  _context: Object\n  _owner: ReactCompositeComponentWrapper\n  _store: Object\n    originalProps: Object\n    props: Object\n    children: Array[7]\n      0: ReactElement\n      1: ReactElement\n      2: ReactElement\n      3: ReactElement\n      4: ReactElement\n      5: ReactElement\n      6: ReactElement\n      length: 7\n      __proto__: Array[0]\n      className: \"\"\n      initialIndex: 0\n      layout: Object\n        height: \"*\"\n        width: \"*\"\n        __proto__: Object\n      __proto__: Object\n      validated: true\n    __proto__: Object\n    key: null\n    props: (...)\n    ref: \"Tabs\"\n    type: (props, context) {\n      ...\n      displayName: \"Tabs\"\n      length:2\n      ...\n  __proto__: Object\n```\n\nwhat it spits out is:\n\n```\nReactElement {key: null, ref: \"Tabs\", _owner: ReactCompositeComponentWrapper, _context: Object, _store: Object}\n  _context: Object\n  _owner: ReactCompositeComponentWrapper\n  _store: Object\n    originalProps: Object\n    props: Object\n    children: Object                                <--- Inserted itself here\n      children: ReactElement\n      _context: Object\n      _owner: ReactCompositeComponentWrapper\n      _store: Object\n        originalProps: Object\n        props: Object\n          children: Array[7]\n            0: ReactElement\n            1: ReactElement\n            2: ReactElement\n            3: ReactElement\n            4: ReactElement\n            5: ReactElement\n            6: ReactElement\n            length: 7\n            __proto__: Array[0]              \n          className: \"\"\n          initialIndex: 0\n          layout: Object\n          __proto__: Object\n          validated: true\n        __proto__: Object\n        key: null\n        props: (...)\n        ref: \"Tabs\"                                <---- has it's ref\n        type: (props, context) {\n          ...\n          displayName: \"Tabs\"\n          length:2\n          ...\n        __proto__: Object\n        className: \"\"\n      __proto__: Object\n      className: \"\"\n      initialIndex: 0\n      layout: Object\n      style: Object\n      __proto__: Object\n    validated: false\n  __proto__: Object\n  key: null\n  props: (...)\n  ref: \"Tabs\"                                <---- has it's original ref\n  type: (props, context) {\n    ...\n    displayName: \"Tabs\"\n    length:2\n    ...\n  __proto__: Object\n```\n\nNote that the component has been cloned (keeping the \"ref\") but it has then been inserted underneath itself as a single object with that same ref. (The style has been applied)\n\nIf you do this using cloneWithProps you get the correct final structure (i.e. a copy of the original) but you lose the \"ref\" and so the UI no longer works as you can't get at the resultant component methods.\n\nAt first I thought that it might have been that the ref was the same as the displayName and causing an issue, but changing either or both of these has no effect and it still insert itself\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
