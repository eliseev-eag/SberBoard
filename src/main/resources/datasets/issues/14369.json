{
  "url": "https://api.github.com/repos/facebook/react/issues/14369",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14369/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14369/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14369/events",
  "html_url": "https://github.com/facebook/react/issues/14369",
  "id": 386443099,
  "node_id": "MDU6SXNzdWUzODY0NDMwOTk=",
  "number": 14369,
  "title": "setState hook inside useEffect can cause unavoidable warning  Can't perform a React state update",
  "user": {
    "login": "istarkov",
    "id": 5077042,
    "node_id": "MDQ6VXNlcjUwNzcwNDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/5077042?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/istarkov",
    "html_url": "https://github.com/istarkov",
    "followers_url": "https://api.github.com/users/istarkov/followers",
    "following_url": "https://api.github.com/users/istarkov/following{/other_user}",
    "gists_url": "https://api.github.com/users/istarkov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/istarkov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/istarkov/subscriptions",
    "organizations_url": "https://api.github.com/users/istarkov/orgs",
    "repos_url": "https://api.github.com/users/istarkov/repos",
    "events_url": "https://api.github.com/users/istarkov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/istarkov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 23,
  "created_at": "2018-12-01T09:52:16Z",
  "updated_at": "2019-07-30T18:43:31Z",
  "closed_at": "2019-02-08T17:28:49Z",
  "author_association": "CONTRIBUTOR",
  "body": "**BUG**\r\n\r\n**What is the current behavior?**\r\n\r\nExample: https://codesandbox.io/s/6y1x2zr21n clicking on OK button cause `Warning: Can't perform a React state update on an unmounted component.`\r\n\r\nThe problem that unsubscribe is called during B event `setVisible(v => false);` call, see logs:\r\n\r\n```\r\nSET VISIBLE BEFORE \r\nUNSUBSCRIBE \r\nWarning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n    in Child (created by Holder)\r\nSET VISIBLE AFTER \r\n```\r\n\r\nIn our case we have this even without RAF call, but on `transitionend` DOM event.\r\n(It's occurred randomly and rare in our codebase as transitionend event should be called exactly at needed time, but example showed what happens)\r\nSeems like it occurred only if you have a `setState` call during useEffect callback like `setRefresh(v => v + 1);` (_inside provided code_) (_after rewriting our codebase to avoid setState calls in useEffect the error has gone_)\r\n\r\n\r\nCode\r\n```javascript\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport mitt from \"mitt\";\r\n\r\nconst emitter = mitt();\r\n\r\nconst Child = () => {\r\n  const [visible, setVisible] = React.useReducer((s, a) => a, true);\r\n  React.useEffect(() => {\r\n    const handle = () => {\r\n      console.log(\"SET VISIBLE BEFORE\");\r\n      setVisible(v => false); // <--- THIS CALL CAUSES UNSUBSCRIBE AND WARNING ABOUT STATE\r\n      console.log(\"SET VISIBLE AFTER\");\r\n    };\r\n    emitter.on(\"B\", handle);\r\n    return () => {\r\n      console.log(\"UNSUBSCRIBE\");\r\n      emitter.off(\"B\", handle);\r\n    };\r\n  }, []);\r\n\r\n  return <div>{visible && <h1>CHILD TEXT</h1>}</div>;\r\n};\r\n\r\nconst Holder = () => {\r\n  const [refresh, setRefresh] = React.useState(0);\r\n  const visible = React.useRef(true);\r\n  React.useEffect(() => {\r\n    if (refresh === 1) {\r\n      visible.current = false;\r\n      setRefresh(v => v + 1); // <--- This state change from effect caused problems\r\n    }\r\n    const handle = () => {\r\n      setRefresh(v => v + 1);\r\n    };\r\n    emitter.on(\"A\", handle);\r\n    return () => {\r\n      emitter.off(\"A\", handle);\r\n    };\r\n  });\r\n\r\n  return <div>{visible.current && <Child />}</div>;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Holder />\r\n      <button\r\n        onClick={() => {\r\n          emitter.emit(\"A\", {});\r\n\r\n          requestAnimationFrame(() => {\r\n            emitter.emit(\"B\", {});\r\n          });\r\n        }}\r\n      >\r\n        OK\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nDo not provide warning if unsubscription is called during \"setState\" call.\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.7.0-alpha.2\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
