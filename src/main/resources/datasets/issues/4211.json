{
  "url": "https://api.github.com/repos/facebook/react/issues/4211",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4211/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4211/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4211/events",
  "html_url": "https://github.com/facebook/react/issues/4211",
  "id": 90758433,
  "node_id": "MDU6SXNzdWU5MDc1ODQzMw==",
  "number": 4211,
  "title": "Some guidance on `state` storage, for performance reasons",
  "user": {
    "login": "benhowdle89",
    "id": 868803,
    "node_id": "MDQ6VXNlcjg2ODgwMw==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/868803?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benhowdle89",
    "html_url": "https://github.com/benhowdle89",
    "followers_url": "https://api.github.com/users/benhowdle89/followers",
    "following_url": "https://api.github.com/users/benhowdle89/following{/other_user}",
    "gists_url": "https://api.github.com/users/benhowdle89/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benhowdle89/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benhowdle89/subscriptions",
    "organizations_url": "https://api.github.com/users/benhowdle89/orgs",
    "repos_url": "https://api.github.com/users/benhowdle89/repos",
    "events_url": "https://api.github.com/users/benhowdle89/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benhowdle89/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2015-06-24T18:53:52Z",
  "updated_at": "2015-06-24T19:10:43Z",
  "closed_at": "2015-06-24T19:10:43Z",
  "author_association": "NONE",
  "body": "I have sandboxed a contrived example of my use-case:\n\nhttp://react.jsbin.com/peseveluxi/edit?js,output\n\nMy rough use-case is a chat app, where each character typed is stored as a Backbone Model in a Backbone Collection (for filtering purposes, etc...). When a new character is typed, I add a new Model to the Collection and then use `setState` to set a `value` property to the Collection itself. In the `render`, I then map over the `value` property and output the text.\n\nMy specific question is, is this best way to get the best way out of React, in terms of storing all the typed text into the `value` state object? Or is there a better way (to avoid re-rendering the whole block of text when typing a new single character)\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
