{
  "url": "https://api.github.com/repos/facebook/react/issues/14988",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14988/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14988/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14988/events",
  "html_url": "https://github.com/facebook/react/issues/14988",
  "id": 416027015,
  "node_id": "MDU6SXNzdWU0MTYwMjcwMTU=",
  "number": 14988,
  "title": "Subscription to event listener in useEffect can miss an update",
  "user": {
    "login": "jsnajdr",
    "id": 664258,
    "node_id": "MDQ6VXNlcjY2NDI1OA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/664258?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jsnajdr",
    "html_url": "https://github.com/jsnajdr",
    "followers_url": "https://api.github.com/users/jsnajdr/followers",
    "following_url": "https://api.github.com/users/jsnajdr/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsnajdr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jsnajdr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsnajdr/subscriptions",
    "organizations_url": "https://api.github.com/users/jsnajdr/orgs",
    "repos_url": "https://api.github.com/users/jsnajdr/repos",
    "events_url": "https://api.github.com/users/jsnajdr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jsnajdr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1205087127,
      "node_id": "MDU6TGFiZWwxMjA1MDg3MTI3",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Concurrent%20Mode",
      "name": "Component: Concurrent Mode",
      "color": "ffccd3",
      "default": false
    },
    {
      "id": 1109410193,
      "node_id": "MDU6TGFiZWwxMTA5NDEwMTkz",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Hooks",
      "name": "Component: Hooks",
      "color": "c2f27b",
      "default": false
    },
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2019-03-01T10:01:51Z",
  "updated_at": "2019-07-01T19:33:28Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "**Steps to reproduce:**\r\nRun the following app that uses an event-emitting counter and maintains a subscription to render updates:\r\n```js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction createCounter() {\r\n  let value = 0;\r\n  const listeners = new Set();\r\n\r\n  return {\r\n    get() { return value; },\r\n    on(listener) { listeners.add(listener); },\r\n    off(listener) { listeners.delete(listener); },\r\n    increment() { value++; listeners.forEach(listener => listener()); }\r\n  };\r\n}\r\n\r\nconst Counter = createCounter();\r\n\r\nfunction CounterWithHook() {\r\n  const [counter, setCounter] = React.useState(Counter.get);\r\n\r\n  React.useEffect(() => {\r\n    const onChange = () => setCounter(Counter.get());\r\n    Counter.on(onChange);\r\n    return () => Counter.off(onChange);\r\n  }, []);\r\n\r\n  return <div>counter: {counter}</div>;\r\n}\r\n\r\nReactDOM.render(\r\n  <>\r\n    <CounterWithHook />\r\n    <button onClick={Counter.increment}>increment</button>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nrequestAnimationFrame(Counter.increment);\r\n```\r\n\r\nThe `requestAnimationFrame` at the end will increment the counter in a slightly insidious way.\r\n\r\n**Expected result:**\r\nAfter loading the app, I see `counter: 1` and clicking the `increment` button updates the UI to `counter: 2`.\r\n\r\n**Actual result:**\r\nAfter loading the app, I see `counter: 0` and clicking the button updates the UI to `counter: 2`.\r\n\r\nThe timing of the `Counter.increment` is such that it happens after the initial render, but before the listener is attached.\r\n\r\nImplementing the same thing with lifecycle methods behaves differently: `componentDidMount` runs soon enough to catch the update.\r\n\r\nIs that expected and a part of the `useEffect` contract? Is there a better way to maintain subscriptions? Note that the missed update came from an independent source, completely outside React.",
  "closed_by": null
}
