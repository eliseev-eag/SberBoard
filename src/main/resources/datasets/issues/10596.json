{
  "url": "https://api.github.com/repos/facebook/react/issues/10596",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10596/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10596/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10596/events",
  "html_url": "https://github.com/facebook/react/issues/10596",
  "id": 254800912,
  "node_id": "MDU6SXNzdWUyNTQ4MDA5MTI=",
  "number": 10596,
  "title": "Bringing ReasonReact reducers to React.js",
  "user": {
    "login": "mxstbr",
    "id": 7525670,
    "node_id": "MDQ6VXNlcjc1MjU2NzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7525670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mxstbr",
    "html_url": "https://github.com/mxstbr",
    "followers_url": "https://api.github.com/users/mxstbr/followers",
    "following_url": "https://api.github.com/users/mxstbr/following{/other_user}",
    "gists_url": "https://api.github.com/users/mxstbr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mxstbr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mxstbr/subscriptions",
    "organizations_url": "https://api.github.com/users/mxstbr/orgs",
    "repos_url": "https://api.github.com/users/mxstbr/repos",
    "events_url": "https://api.github.com/users/mxstbr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mxstbr/received_events",
    "type": "User",
    "site_admin": true
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2017-09-02T09:27:53Z",
  "updated_at": "2017-09-05T17:41:17Z",
  "closed_at": "2017-09-05T17:02:31Z",
  "author_association": "CONTRIBUTOR",
  "body": "It'd be awesome if React.js had reducers, similar to what [ReasonReact](https://reasonml.github.io/reason-react/blog.html#reducers-are-here) recently introduced.\r\n\r\n> We’re also decided to iterate on ReasonReact instead of core React, partially because we’re Reason users and partially because ReasonReact’s nature of being new & less used allow us to iterate exciting new APIs without legacy concerns \r\n\r\nSince I [couldn't find](https://github.com/facebook/react/issues?utf8=%E2%9C%93&q=is%3Aissue%20reducers) any previous talk about this I'm assuming this has been discussed internally, it'd be great to chat about it in the open and iterate on core React state management!\r\n\r\n<details>\r\n  <summary>The ReasonReact reducers example</summary>\r\n\r\n```Reason\r\ntype actions =\r\n  | BumpCount\r\n  | ToggleDialog bool;\r\n\r\ntype state = {count: int, showDialog: bool};\r\n\r\nlet component = ReasonReact.reducerComponent \"MyComponent\";\r\n\r\nlet make ::className _children => {\r\n  ...component,\r\n  initialState: fun () => {count: 0, showDialog: false},\r\n  reducer: fun action state =>\r\n    switch action {\r\n    | BumpCount => ReasonReact.Update {...state, count: state.count + 1}\r\n    | ToggleDialog show => ReasonReact.Update {...state, showDialog: show}\r\n    },\r\n  render: fun {state, reduce} => {\r\n    let message = \"You've clicked \" ^ string_of_int state.count ^ \" time(s)\";\r\n    <div className>\r\n      <button onClick=(reduce (fun _ => BumpCount))>\r\n        (ReasonReact.stringToElement message)\r\n      </button>\r\n      <MyButton onToggle=(reduce (fun toggleState => ToggleDialog toggleState)) />\r\n      (state.showDialog ? <Dialog /> : ReasonReact.nullElement)\r\n    </div>\r\n  }\r\n};\r\n```\r\n\r\n</details>",
  "closed_by": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  }
}
