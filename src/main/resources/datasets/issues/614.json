{
  "url": "https://api.github.com/repos/facebook/react/issues/614",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/614/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/614/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/614/events",
  "html_url": "https://github.com/facebook/react/issues/614",
  "id": 23295963,
  "node_id": "MDU6SXNzdWUyMzI5NTk2Mw==",
  "number": 614,
  "title": "Always clone components before mounting.",
  "user": {
    "login": "jordwalke",
    "id": 977348,
    "node_id": "MDQ6VXNlcjk3NzM0OA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/977348?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jordwalke",
    "html_url": "https://github.com/jordwalke",
    "followers_url": "https://api.github.com/users/jordwalke/followers",
    "following_url": "https://api.github.com/users/jordwalke/following{/other_user}",
    "gists_url": "https://api.github.com/users/jordwalke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jordwalke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jordwalke/subscriptions",
    "organizations_url": "https://api.github.com/users/jordwalke/orgs",
    "repos_url": "https://api.github.com/users/jordwalke/repos",
    "events_url": "https://api.github.com/users/jordwalke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jordwalke/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2013-11-26T06:17:02Z",
  "updated_at": "2014-05-18T06:08:28Z",
  "closed_at": "2014-05-18T06:08:28Z",
  "author_association": "MEMBER",
  "body": "This will solve many problems:\n\nDevelopers retaining references to what is only coincidentally the authoritative backing component instance:\n\n```\n  render: function() {\n      this.something = <div />;\n      return this.something;\n  }\n```\n\nInability to reuse \"constant components\"\n\n```\n// At top of file\nvar WRONG_PW = <div>You Entered The Wrong Password!</div>;\n\n// later in some react component - this is currently not supported, but could be supported\n// if we clone components before mounting.\nrender: function() {\n     return this.loggedIn ? <div /> : WRONG_PW;\n }\n```\n\nSubtle reinitialization issues that occur:\n\n```\n var TabSwitcher = React.createClass({\n   render: function() {\n     return (\n       <div>\n         {this.state.useLeftTab && this.props.leftTab}\n         {!this.state.useLeftTab && this.props.rightTab}\n       </div>\n     );\n   }\n });\n```\n\nIn the previous `TabSwitcher` example, the components (`leftTab`/`rightTab`) should be reset any time they are created/destroyed. However, since we hijack the provided instances that are provided from the outside (props) they are actually retained across our own internal state changes.\n\nThe solution: Clone components before mounting them inside of a container. The original design of React did actually clone elements because it's cleaner and avoids some of these pitfalls. But for conservation of memory, I changed the mounting process so that we do not clone, and instead we hijack the originally provided instances. Average browser performance profiles have changed since so it makes sense to reevaluate the decision. But more importantly, by cloning, though we consume more memory in the short term, allows us to make many more optimizations that make memory usage at the application level much more lean.  The ability to use \"constant component\" expressions in critical parts of your aplication can go a long way - not just for memory usage, but also for CPU/reconcile time:\n\nImagine the ability to do:\n\n```\n var CONSTANT_ROW = React.createConstantComponent(\n    <div class=\"myClass><div class=\"yourclass\">hello</div></div>;\n );\n```\n\nUtilities like this would not only allow us to reuse that same memory every time render is invoked, but every node could also be anotated to never reconcile - it can never change.\n\nMost importantly, this is a cleaner design. It means that the JSX (or function calls) that you write are truly just descriptions of components - not the actual components. That's truly declarative programming, which, if you program according to our guidelines, should be effectively the same - but this allows for many other optimizations that aren't possible apart from cloning.\n\nWe should make sure to benchmark potential solutions to this issue, just to make sure we know what we're getting into.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
