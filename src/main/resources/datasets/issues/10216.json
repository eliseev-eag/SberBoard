{
  "url": "https://api.github.com/repos/facebook/react/issues/10216",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10216/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10216/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10216/events",
  "html_url": "https://github.com/facebook/react/issues/10216",
  "id": 243917300,
  "node_id": "MDU6SXNzdWUyNDM5MTczMDA=",
  "number": 10216,
  "title": "Automatic passing of HTML attributes (className, id, etc.) as props into composed component",
  "user": {
    "login": "sighrobot",
    "id": 4038920,
    "node_id": "MDQ6VXNlcjQwMzg5MjA=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/4038920?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sighrobot",
    "html_url": "https://github.com/sighrobot",
    "followers_url": "https://api.github.com/users/sighrobot/followers",
    "following_url": "https://api.github.com/users/sighrobot/following{/other_user}",
    "gists_url": "https://api.github.com/users/sighrobot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sighrobot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sighrobot/subscriptions",
    "organizations_url": "https://api.github.com/users/sighrobot/orgs",
    "repos_url": "https://api.github.com/users/sighrobot/repos",
    "events_url": "https://api.github.com/users/sighrobot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sighrobot/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2017-07-19T04:09:25Z",
  "updated_at": "2017-07-19T23:01:02Z",
  "closed_at": "2017-07-19T09:51:06Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\nConsuming React component libraries can be frustrating if the creators do not specifically handle `className`, `id`, and other HTML attributes that can be passed as props to the outermost container of a given component.\r\n\r\nWith regard to this specific problem of `className`:\r\n\r\n- The best libraries have a consistent interface for applying custom `className`(s) to their components.\r\n- Mediocre libraries provide hard-coded `className`(s) to their components but do not support custom `className`(s)\r\n- The worst libraries provide neither hard-coded `className`(s) nor support custom `className`(s)\r\n\r\n> The categorizations above are certainly not meant as an indicator the usefulness or quality of the library as a whole. There are plenty of libraries which I find to be extremely useful and well-made, but which lack this simple interface. On the contrary there are plenty of libraries that I have passed on due to poor design in other areas, but which support this in a nice way.\r\n\r\n### Example\r\n\r\nBelow is a minimal example of the initial render of a popular infinite list view (anonymized to avoid finger-pointing):\r\n\r\n#### JSX:\r\n```jsx\r\n<ComponentLibList className='my-list' />\r\n```\r\n#### resulting HTML:\r\n```html\r\n<div style=\"position: relative; height: 1000px;\">\r\n    <div style=\"transform: translate3d(0px, 0px, 0px);\">\r\n        <!-- list internals -->\r\n    </div>\r\n</div>\r\n```\r\n\r\nNotice that `.my-list` is nowhere to be found. This is because the component does not honor the `className` that is passed into the container. If I really do need `.my-list`, I have to wrap the component, resulting in additional markup in both places\r\n\r\n#### JSX:\r\n```jsx\r\n<div className='my-list'>\r\n    <ComponentLibList />\r\n</div>\r\n```\r\n\r\n#### resulting HTML:\r\n```html\r\n<div class=\"my-list\">\r\n    <div style=\"position: relative; height: 1000px;\">\r\n        <div style=\"transform: translate3d(0px, 0px, 0px);\">\r\n            <!-- list internals -->\r\n        </div>\r\n    </div>\r\n</div>\r\n```\r\n\r\nIt makes total sense to disallow arbitrary props to be automatically applied to the resulting container. However for HTML attributes it seems extremely counterproductive _not_ to do this automatically.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar (template: https://jsfiddle.net/84v837e9/).**\r\nn/a\r\n\r\n**What is the expected behavior?**\r\nA naïve approach would be to automatically apply any HTML attribute `props` to the composed component's outer-most container. This is probably not ideal. A better solution would be to do this automatic prop pass-through by default, but allow developers to override specific `props` as they see fit. The benefits are twofold:\r\n\r\n1. Libraries that lack interfaces for `props` like `className` would be immediately improved without the developer(s) needing to do anything\r\n2. It would still allow more prescient developers to curate the interface in a way of their choosing\r\n\r\n### Conclusion\r\n\r\nI admittedly don't have a great solution in mind – this is also my first time opening a React issue. I hope this provokes some thoughtful discussion and feels like I am being constructive. I am happy to provide additional examples of this problem and am curious if other people have similar/different thoughts. Thanks!\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nAll versions / no",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
