{
  "url": "https://api.github.com/repos/facebook/react/issues/6610",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6610/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6610/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6610/events",
  "html_url": "https://github.com/facebook/react/issues/6610",
  "id": 150814992,
  "node_id": "MDU6SXNzdWUxNTA4MTQ5OTI=",
  "number": 6610,
  "title": "isNotRequired",
  "user": {
    "login": "arcanis",
    "id": 1037931,
    "node_id": "MDQ6VXNlcjEwMzc5MzE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1037931?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/arcanis",
    "html_url": "https://github.com/arcanis",
    "followers_url": "https://api.github.com/users/arcanis/followers",
    "following_url": "https://api.github.com/users/arcanis/following{/other_user}",
    "gists_url": "https://api.github.com/users/arcanis/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/arcanis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/arcanis/subscriptions",
    "organizations_url": "https://api.github.com/users/arcanis/orgs",
    "repos_url": "https://api.github.com/users/arcanis/repos",
    "events_url": "https://api.github.com/users/arcanis/events{/privacy}",
    "received_events_url": "https://api.github.com/users/arcanis/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-04-25T10:25:04Z",
  "updated_at": "2016-04-25T18:53:14Z",
  "closed_at": "2016-04-25T18:06:43Z",
  "author_association": "CONTRIBUTOR",
  "body": "It happens every once in a while that I want to do something like this:\n\n``` js\nclass MyGenericComponent {\n    static propTypes = {\n        score: React.PropTypes.number.isRequired,\n        text: React.PropTypes.string.isRequired\n    };\n\n    render() {\n        return <div>({this.props.score}) {this.props.text}</div>;\n    }\n}\n\nclass MyMoreSpecializedComponent {\n    static propTypes = {\n        score: MyGenericComponent.propTypes.score,\n        text: MyGenericComponent.propTypes.text.isRequired\n    };\n\n    render() {\n        return <MyGenericComponent score={this.props.score || 0} text={this.props.text} />;\n    }\n}\n```\n\nHowever, despite not looking especially wrong, this code doesn't work as expected for two reasons:\n- The `score` prop from `MyMoreSpecializedComponent` retains the `isRequired` flag from its declaration in `MyGenericComponent`. This issue could be solved by adding a `isNotRequired` flag, that would simply return the non-required version of the validator.\n- The `text` prop from `MyGenericComponent` doesn't have the `isRequired` flag, because it is already required. This issue could be solved by adding a no-op `isRequired` flag that would return the exact same validator.\n\nI feel like those two changes would help to safely forward propTypes, improving the code readability in the process, with a very minimal cost in term of line of code.\n\nHere's what `MyMoreSpecializedComponent` would look like:\n\n``` js\nclass MyMoreSpecializedComponent {\n    static propTypes = {\n        score: MyGenericComponent.propTypes.score.isNotRequired,\n        text: MyGenericComponent.propTypes.text.isRequired\n    };\n\n    render() {\n        return <MyGenericComponent score={this.props.score || 0} text={this.props.text} />;\n    }\n}\n```\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
