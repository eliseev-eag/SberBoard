{
  "url": "https://api.github.com/repos/facebook/react/issues/2410",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2410/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2410/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2410/events",
  "html_url": "https://github.com/facebook/react/issues/2410",
  "id": 46840299,
  "node_id": "MDU6SXNzdWU0Njg0MDI5OQ==",
  "number": 2410,
  "title": "Batching can update one component twice, causing unpredictable lifecycle",
  "user": {
    "login": "m4tthumphrey",
    "id": 582971,
    "node_id": "MDQ6VXNlcjU4Mjk3MQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/582971?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/m4tthumphrey",
    "html_url": "https://github.com/m4tthumphrey",
    "followers_url": "https://api.github.com/users/m4tthumphrey/followers",
    "following_url": "https://api.github.com/users/m4tthumphrey/following{/other_user}",
    "gists_url": "https://api.github.com/users/m4tthumphrey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/m4tthumphrey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/m4tthumphrey/subscriptions",
    "organizations_url": "https://api.github.com/users/m4tthumphrey/orgs",
    "repos_url": "https://api.github.com/users/m4tthumphrey/repos",
    "events_url": "https://api.github.com/users/m4tthumphrey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/m4tthumphrey/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 44,
  "created_at": "2014-10-26T11:31:05Z",
  "updated_at": "2016-04-29T21:02:51Z",
  "closed_at": "2016-04-29T21:02:51Z",
  "author_association": "NONE",
  "body": "This one is hard to explain or reproduce but I'll try...\n\nI'm using the following mixin which has changed slightly from the original I found in a gist a while back:\n\n``` js\n\nvar React = require('react');\n\nvar LayeredComponentMixin = {\n\n  componentDidMount: function() {\n    this._layer = document.createElement('div');\n    document.body.appendChild(this._layer);\n    this._renderLayer();\n  },\n\n  componentDidUpdate: function() {\n    this._renderLayer();\n  },\n\n  componentWillUnmount: function() {\n    this._unrenderLayer();\n    document.body.removeChild(this._layer);\n  },\n\n  _renderLayer: function() {\n    var layer = this.renderLayer();\n\n    if (null === layer) {\n      layer = <noscript />;\n    }\n\n    React.render(layer, this._layer);\n\n    if (this.layerDidMount) {\n      this.layerDidMount(this._layer);\n    }\n  },\n\n  _unrenderLayer: function() {\n    if (this.layerWillUnmount) {\n      this.layerWillUnmount(this._layer);\n    }\n\n    React.unmountComponentAtNode(this._layer);\n  }\n\n};\n\nmodule.exports = LayeredComponentMixin;\n```\n\nThis allows me to create layered components, in my case a modal dialog. I use the following component to build my modals:\n\n``` js\n\nvar React = require('react');\n\nvar ToolboxUserActionCreators = require('../../actions/ToolboxUserActionCreators');\n\nvar ModalStore = require('../../stores/ModalStore');\n\nfunction getStateFromStore() {\n  return {\n    modalCount: ModalStore.getModalCount()\n  };\n}\n\nvar Modal = React.createClass({\n\n  componentWillMount: function() {\n    this.setState({\n      modalLevel: ModalStore.getModalCount()\n    });\n  },\n\n  componentDidMount: function() {\n    ModalStore.addChangeListener(this.onChange);\n    document.addEventListener('keydown', this.handleKeyDown);\n  },\n\n  componentWillUnmount: function() {\n    ModalStore.removeChangeListener(this.onChange);\n    document.removeEventListener('keydown', this.handleKeyDown);\n  },\n\n  getInitialState: function() {\n    return getStateFromStore();\n  },\n\n  getDefaultProps: function() {\n    return {\n      className: 'feature'\n    }\n  },\n\n  render: function() {\n    var className               = 'toolbox2-modal-content toolbox2-modal-' + this.props.className;\n    var modalBackdropClassName  = 'toolbox2-modal-backdrop';\n    var handleBackdropClick     = this.handleBackdropClick;\n    var killClick               = this.killClick;\n    var modalLevel              = this.state.modalLevel;\n    var totalModals             = this.state.modalCount;\n\n    if (modalLevel < totalModals) {\n      modalBackdropClassName += ' toolbox2-modal-backdrop-secondary';\n    }\n\n    return (\n      <div className={modalBackdropClassName} onClick={handleBackdropClick}>\n        <div className={className} onClick={killClick}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  },\n\n  killClick: function(e) {    \n    e.stopPropagation();\n  },\n\n  handleBackdropClick: function() {\n    this.props.onRequestClose();\n  },\n\n  handleKeyDown: function(e) {\n    if (e.keyCode === 27) {\n      this.handleBackdropClick();\n    }\n  },\n\n  onChange: function() {\n    this.setState(getStateFromStore());\n  }\n\n});\n\nmodule.exports = Modal;\n```\n\nThis combination works perfectly. That is until I close the highest modal. If an `<input />` component is used inside of the `<Modal>` render method, ie `this.props.children`, the following error is thrown. All other element types (that I've tried including `textarea` and `select` work fine, but `input` throws the following: \n\n`Uncaught Error: Invariant Violation: getDOMNode(): A component must be mounted to have a DOM node`\n\nThe trace is as follows:\n\n```\nUncaught Error: Invariant Violation: getDOMNode(): A component must be mounted to have a DOM node. bundle.js:60783\ninvariant bundle.js:60783\nReactBrowserComponentMixin.getDOMNode bundle.js:62069\nReactCompositeComponent.createClass.componentDidUpdate bundle.js:64334\nassign.notifyAll bundle.js:68718\nON_DOM_READY_QUEUEING.close bundle.js:72258\nMixin.closeAll bundle.js:68960\nMixin.perform bundle.js:68901\nMixin.perform bundle.js:68887\nassign.perform bundle.js:56107\n(anonymous function) bundle.js:56186\nwrapper bundle.js:53734\nMixin.closeAll bundle.js:68960\nMixin.perform bundle.js:68901\nReactDefaultBatchingStrategy.batchedUpdates bundle.js:64050\nbatchedUpdates bundle.js:56122\nReactEventListener.dispatchEvent bundle.js:64980\n```\n\n`ReactCompositeComponent.createClass.componentDidUpdate bundle.js:64334` is [here](https://github.com/facebook/react/blob/b7cd3e7d1de31108594a6698215bfa7bf8619b34/src/browser/ui/dom/components/ReactDOMInput.js#L98).\n\nThis only happens when there are several modals on top of each other; one dialog with an `<input />` runs fine with no error.\n\nThe weird thing is that the app still runs fine, the error thrown has no impact (apart from being thrown) on how my app performs....\n\nThis is on 0.12RC1 using webpack to build.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
