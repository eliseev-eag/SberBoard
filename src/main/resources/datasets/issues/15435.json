{
  "url": "https://api.github.com/repos/facebook/react/issues/15435",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15435/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15435/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15435/events",
  "html_url": "https://github.com/facebook/react/issues/15435",
  "id": 434455286,
  "node_id": "MDU6SXNzdWU0MzQ0NTUyODY=",
  "number": 15435,
  "title": "Add useReactPath hook for reflection and stable IDs",
  "user": {
    "login": "mike-marcacci",
    "id": 690517,
    "node_id": "MDQ6VXNlcjY5MDUxNw==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/690517?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mike-marcacci",
    "html_url": "https://github.com/mike-marcacci",
    "followers_url": "https://api.github.com/users/mike-marcacci/followers",
    "following_url": "https://api.github.com/users/mike-marcacci/following{/other_user}",
    "gists_url": "https://api.github.com/users/mike-marcacci/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mike-marcacci/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mike-marcacci/subscriptions",
    "organizations_url": "https://api.github.com/users/mike-marcacci/orgs",
    "repos_url": "https://api.github.com/users/mike-marcacci/repos",
    "events_url": "https://api.github.com/users/mike-marcacci/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mike-marcacci/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-04-17T19:46:56Z",
  "updated_at": "2019-06-11T01:05:50Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature: this is a proposal that would solve #1137 and other similar cases by providing a reflection hook that retrieves the path in the react tree to a component.\r\n\r\n**What is the current behavior?**\r\nThere is currently no mechanism for finding a component's path in the react component tree without using unstable, internal APIs.\r\n\r\n**What is the expected behavior?**\r\nThere are a wide range of use-cases that require stable, unique namespaces that are stable across app instances.\r\n\r\nMy particular use case is rendering SVGs that include `<defs>` blocks. The challenge is that these definitions are all globally scoped. It's fairly easy to get around this by prefixing these definitions with an id that is stable and unique to the component instance:\r\n\r\n```jsx\r\nimport { useMemo, ReactElement } from \"react\";\r\n\r\nfunction gen(): string {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substr(2, 5);\r\n}\r\n\r\nfunction useUniqueId(): string {\r\n  return useMemo(gen, []);\r\n}\r\n\r\nfunction SomeComponent(): ReactElement {\r\n  const id = useUniqueId();\r\n  return (\r\n    <svg>\r\n      <defs>\r\n        <circle id={`${id}-myCircle`} cx=\"0\" cy=\"0\" r=\"5\" />\r\n      </defs>\r\n\r\n      <use x=\"5\" y=\"5\" xlink:href={`#${id}-myCircle`} fill=\"red\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\n```\r\n\r\nWhile this works well, the generated ID is different each time a component is instantiated. This means that it's not possible to safely rehydrate server-rendered SVGs, as the HTML will have the wrong prefix.\r\n\r\nInstead, I would like a hook that provides the react path to the current component. For example:\r\n\r\n```jsx\r\nfunction SomeComponent(): ReactElement {\r\n  const path = useReactPath();\r\n  return <pre>{JSON.stringify(path, null, 2)}</pre>\r\n}\r\n\r\n// somewhere else:\r\n\r\n<div>\r\n  <div>Foo</div>\r\n  <div>{[\r\n    <div key=\"bar\">Bar</div>,\r\n    <div key=\"baz\">\r\n      Baz\r\n      <SomeComponent />\r\n    </div>\r\n  ]}</div>\r\n</div>\r\n```\r\n\r\nWe would expect the path to be:\r\n```js\r\n[\r\n  1,     // after the <div>Foo</div> block\r\n  0,     // the interpolation block\r\n  \"baz\", // the array specifies keys\r\n  1      // after the Baz text block\r\n]\r\n```\r\n\r\nThis array could then be used much like an XPath for testing automation purposes, or hashed into a unique ID or prefix, for purposes like mine.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nThis has never been possible.\r\n",
  "closed_by": null
}
