{
  "url": "https://api.github.com/repos/facebook/react/issues/5659",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5659/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5659/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5659/events",
  "html_url": "https://github.com/facebook/react/issues/5659",
  "id": 122125216,
  "node_id": "MDU6SXNzdWUxMjIxMjUyMTY=",
  "number": 5659,
  "title": "React.cloneElement breaks children lifecycle events",
  "user": {
    "login": "milesj",
    "id": 143744,
    "node_id": "MDQ6VXNlcjE0Mzc0NA==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/143744?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/milesj",
    "html_url": "https://github.com/milesj",
    "followers_url": "https://api.github.com/users/milesj/followers",
    "following_url": "https://api.github.com/users/milesj/following{/other_user}",
    "gists_url": "https://api.github.com/users/milesj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/milesj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/milesj/subscriptions",
    "organizations_url": "https://api.github.com/users/milesj/orgs",
    "repos_url": "https://api.github.com/users/milesj/repos",
    "events_url": "https://api.github.com/users/milesj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/milesj/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2015-12-14T20:34:09Z",
  "updated_at": "2015-12-15T04:46:41Z",
  "closed_at": "2015-12-14T22:28:34Z",
  "author_association": "CONTRIBUTOR",
  "body": "I'll try to make this as easy to understand but will probably be pretty lengthy.\n\nI'm in the process of converting my Toolkit library to React and started with the Accordion component. This Accordion his 4 components, the `Accordion` parent wrapper which handles state, events, etc, the `AccordionItem` which is nested within `Accordion`, and the `AccordionHeader` and `AccordionSection` which are rendered within `AccordionItem`. This can be seen here (very rough): https://github.com/titon/toolkit/blob/3.0/js-3.0/ui/components/Accordion.jsx\n\nAnd can be implemented as such:\n\n```\nimport Accordion from './ui/components/Accordion.jsx';\n\n<Accordion>\n    <Accordion.Item header=\"Header #1\" key=\"1\">\n        <p>Phasellus viverra convallis ex sit amet convallis. Sed accumsan dignissim massa, eu volutpat tellus semper at. Quisque non lectus sit amet lectus consectetur tincidunt nec in sem. Fusce lobortis blandit turpis, vel vestibulum nulla egestas vitae. Vivamus quis orci vitae odio elementum facilisis. Vestibulum suscipit quam in dictum ullamcorper. Sed lectus quam, faucibus id pellentesque nec, suscipit at elit. </p>\n\n        <p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Morbi fermentum congue lectus, at imperdiet odio dictum sit amet.</p>\n    </Accordion.Item>\n    <Accordion.Item header=\"Header #2\" key=\"2\">\n        <p>Sed non sem tempor, feugiat risus at, dignissim ipsum. Ut efficitur lacus non sem laoreet tincidunt. Proin porttitor placerat massa, eu varius libero elementum ac. Donec a ligula ullamcorper, pulvinar leo vel, vestibulum magna. Aliquam et tempus tortor.</p>\n\n        <ul>\n            <li>Nulla leo nulla, porta in tortor in.</li>\n            <li>Cras sed finibus felis.</li>\n            <li>Nulla purus turpis, lobortis at viverra id.</li>\n        </ul>\n    </Accordion.Item>\n</Accordion>\n```\n\nThe issue I'm running into is: How do I pass props and information from the parent `Accordion` to the `AccordionItem` children, seeing as how those are implemented manually by a developer, and not generated by the parent component? I simply can't define explicit props.\n\nThe way I currently solved this is by cloning all the children and passing custom props, as seen here (and suggested all over Google): https://github.com/titon/toolkit/blob/3.0/js-3.0/ui/components/Accordion.jsx#L154 \n\nThe problem with this approach is that the children are re-cloned _every_ time the parent renders, which breaks all the child lifecycle events. Each lifecycle event, like `componentWillReceiveProps()`, will receive all the same props, every render, making it extremely difficult to see what exactly changed. On top of this, constantly re-cloning everything seems like an expensive process.\n\nI also tried modifying the child's props through `React.Children.map()`, but they are all read-only of course, which is quite annoying in this instance.\n\nI tried cloning the children only on the first render, and attempting to update single props on each subsequent render, but that turned out to be really difficult or nigh impossible.\n\nI thought about using an event system from within the parent, but how can I hook up the children to listen to it? Still couldn't figure that out.\n\nI'm now looking at contexts (https://facebook.github.io/react/docs/context.html), but they seem very new and unstable.\n\nI feel like this is such a basic and common use case that it should be supported, yet it's a giant pain right now. I'm not the only one having this issue either, it's all over StackOverflow.\n\nSo what exactly is the best approach to solving this? Contexts? Deal with the cloning issue? Any advice would be appreciated.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
