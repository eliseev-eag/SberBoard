{
  "url": "https://api.github.com/repos/facebook/react/issues/14825",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14825/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14825/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14825/events",
  "html_url": "https://github.com/facebook/react/issues/14825",
  "id": 408953943,
  "node_id": "MDU6SXNzdWU0MDg5NTM5NDM=",
  "number": 14825,
  "title": "Reconciliation not occurring between two separate re-renders",
  "user": {
    "login": "afreix",
    "id": 2034684,
    "node_id": "MDQ6VXNlcjIwMzQ2ODQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/2034684?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/afreix",
    "html_url": "https://github.com/afreix",
    "followers_url": "https://api.github.com/users/afreix/followers",
    "following_url": "https://api.github.com/users/afreix/following{/other_user}",
    "gists_url": "https://api.github.com/users/afreix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/afreix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/afreix/subscriptions",
    "organizations_url": "https://api.github.com/users/afreix/orgs",
    "repos_url": "https://api.github.com/users/afreix/repos",
    "events_url": "https://api.github.com/users/afreix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/afreix/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-02-11T20:07:21Z",
  "updated_at": "2019-02-19T20:36:32Z",
  "closed_at": "2019-02-19T20:36:32Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nA second parent re-render occurs before an unmounted child element is removed from the DOM.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nI'm having trouble with a smaller example since the bug I'm observing involves react (16.5.2), redux (3.5.2), and react-redux (5.0.6), and react-router (4.4.0-beta.6). Before investing any more time in creating a isolated reproduction, I'd like to confirm that what I'm seeing is in fact unexpected behavior. \r\n\r\nInitial tree structure:\r\n```\r\n<Parent>\r\n   <Folder label='A'>\r\n      <Child id={1}/>\r\n   </ Folder>\r\n   <Folder label='B'>\r\n      <Child id={2}/>\r\n      <Child id={3}/>\r\n   </ Folder>\r\n</Parent>\r\n```\r\n\r\nThere is a flow similar to this occurring:\r\n* Current URL ```/item/{id}```, say for this example ```/item/3```\r\n* Redux action fired to delete item 3\r\n* We navigate via ReactRouter to the home page URL ```/home``` (this should be batched with the Redux action above since it is within a click handler)\r\n* A ```<Redirect />``` component is rendered at ```/home``` which redirects to ```/item/1```\r\n\r\nI've placed debugger points within the ```render``` function of ```<Parent/>, <Folder/>, and <Child/>```. Once the delete action is fired, the break point within ```<Parent/>``` is hit. Subsequently, we hit the breakpoints in ```<Folder/>``` and ```<Child />```. As expected ```<Folder label='B'>``` only renders one child component, ```<Child id={2}/>```, and ```componentWillUnmount``` is called within ```<Child id={3} />```. Then after we are redirected to ```/item/1``` a second re-render of ```<Parent/>``` occurs. At this point, we've had a full render cycle, ```componentWillUnmount``` has been called, and yet ```<Child id={3} />``` is still visible in the DOM and within the React component tree within React dev tools.\r\n\r\n**What is the expected behavior?**\r\nThe child element (```<Child id={3} />```) is removed from the DOM before a second re-render occurs.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.5.2\r\nAll browsers\r\nWindows OS\r\nUnsure which version of React caused this issue because the code making it apparent was newly added in React 16.5.2\r\n",
  "closed_by": {
    "login": "afreix",
    "id": 2034684,
    "node_id": "MDQ6VXNlcjIwMzQ2ODQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/2034684?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/afreix",
    "html_url": "https://github.com/afreix",
    "followers_url": "https://api.github.com/users/afreix/followers",
    "following_url": "https://api.github.com/users/afreix/following{/other_user}",
    "gists_url": "https://api.github.com/users/afreix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/afreix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/afreix/subscriptions",
    "organizations_url": "https://api.github.com/users/afreix/orgs",
    "repos_url": "https://api.github.com/users/afreix/repos",
    "events_url": "https://api.github.com/users/afreix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/afreix/received_events",
    "type": "User",
    "site_admin": false
  }
}
