{
  "url": "https://api.github.com/repos/facebook/react/issues/8933",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8933/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8933/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8933/events",
  "html_url": "https://github.com/facebook/react/issues/8933",
  "id": 205638416,
  "node_id": "MDU6SXNzdWUyMDU2Mzg0MTY=",
  "number": 8933,
  "title": "Slow performance with the below react code",
  "user": {
    "login": "ghost",
    "id": 10137,
    "node_id": "MDQ6VXNlcjEwMTM3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ghost",
    "html_url": "https://github.com/ghost",
    "followers_url": "https://api.github.com/users/ghost/followers",
    "following_url": "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
    "organizations_url": "https://api.github.com/users/ghost/orgs",
    "repos_url": "https://api.github.com/users/ghost/repos",
    "events_url": "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ghost/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-02-06T16:32:51Z",
  "updated_at": "2017-02-07T01:03:04Z",
  "closed_at": "2017-02-06T17:02:46Z",
  "author_association": "NONE",
  "body": "I have this function, which gets passed rendered_nodes array which contains all the nodes which are supposed to be rendered, and each time there is a node added or removed this function gets called again:\r\n\r\n```\r\n    const recursiveRender= (renderObj, desc, rendered_nodes,parent=null,removeOrRenderNode, level=0, sort_prop='propToSortBy') => {\r\n    if(renderObj==undefined && renderObj==null){\r\n        return null;\r\n    }\r\n    let childNodes = Object.keys(renderObj);\r\n    let sortedChildNodes=[];\r\n    let arr=[];\r\n    let base = null;\r\n    const terminal_node = childNodes.indexOf(\"data\") > -1 && childNodes.length===1;\r\n    childNodes= sort(renderObj, sort_prop);\r\n    const id = `${parent}*${desc}`;\r\n    for(const node in childNodes){\r\n        if(childNodes[node]!==\"data\"){\r\n            if(rendered_nodes.includes(parent+'*'+desc)){\r\n            const rendered = recursiveRender(renderObj[childNodes[node]], childNodes[node], rendered_nodes, id, removeOrRenderNode, level+1);\r\n            arr = arr.concat(rendered);\r\n            }\r\n        }\r\n        else{\r\n            if(renderObj[childNodes[node]].groupedBy===\"employeeName\"){\r\n        base = (<EmployeeRowByProps title={desc} id={parent+'*'+desc}rowObject={renderObj[childNodes[node]]} offset={level} expanderFlag={rendered_nodes.includes(parent+'*'+desc)}\r\n                isTerminalNode={terminal_node} removeOrRenderNode={removeOrRenderNode}/> );\r\n            }else{\r\n        base = (<RowByProps title={desc} id={parent+'*'+desc} rowObject={renderObj[childNodes[node]]} offset={level} expanderFlag={rendered_nodes.includes(parent+'*'+desc)}\r\n                isTerminalNode={terminal_node} removeOrRenderNode={removeOrRenderNode} />);\r\n                }\r\n        }\r\n\r\n    }\r\n    if(base!==null){\r\n        arr.unshift(base);\r\n    }\r\n    return arr;\r\n    }\r\n```\r\n the problem is that render is kind of slow. any advice on why this may be the case?",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
