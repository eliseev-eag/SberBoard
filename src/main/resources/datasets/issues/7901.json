{
  "url": "https://api.github.com/repos/facebook/react/issues/7901",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7901/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7901/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7901/events",
  "html_url": "https://github.com/facebook/react/issues/7901",
  "id": 181504195,
  "node_id": "MDU6SXNzdWUxODE1MDQxOTU=",
  "number": 7901,
  "title": "Bypass synthetic event system for Web Component events",
  "user": {
    "login": "staltz",
    "id": 90512,
    "node_id": "MDQ6VXNlcjkwNTEy",
    "avatar_url": "https://avatars3.githubusercontent.com/u/90512?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/staltz",
    "html_url": "https://github.com/staltz",
    "followers_url": "https://api.github.com/users/staltz/followers",
    "following_url": "https://api.github.com/users/staltz/following{/other_user}",
    "gists_url": "https://api.github.com/users/staltz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/staltz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/staltz/subscriptions",
    "organizations_url": "https://api.github.com/users/staltz/orgs",
    "repos_url": "https://api.github.com/users/staltz/repos",
    "events_url": "https://api.github.com/users/staltz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/staltz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    },
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 55,
  "created_at": "2016-10-06T19:27:26Z",
  "updated_at": "2019-06-17T23:28:05Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "To use a Web Component in React, you must directly attach an event listener to the React ref for that WC. We could change the implementation so that when React detects a custom element (tag names with dashes, like `my-component`), it will bypass the synthetic event system (and the whitelist) and just attach the event listener on the element itself.\n\nWhy bypass the synthetic event system? Because _anyway_ we already need to bypass it manually when using a Web Component. I'm not so familiar with the React codebase, but this naive approach seems to work. Whoever uses Web Components in React can be responsible for whatever downsides that would cause, maybe in performance, I don't know. They are already having those (supposed) downsides, this issue is just about the convenience of WC usage inside React.\n\nI was about to send a PR for this, but thought of opening an issue. I looked through the issues and didn't see any existing one related to the handling of WC events.\n\n**What is the current behavior?**\n\nA WC custom event (e.g. `flipend`) must be handled by attaching the event listener directly to the element in componentDidMount using a ref.\n\nhttp://jsbin.com/yutocopasu/1/edit?js,output\n\nReact v15.1.0\n\n``` js\nclass HelloMessage extends React.Component {\n  handleHelloClick() {\n    this.refs['foo'].toggle();\n  }\n\n  handleFlipend(ev) {\n    console.log('Handle flip end');\n  }\n\n  componentDidMount() {\n    this.refs['foo'].addEventListener('flipend', ev =>\n      this.handleFlipend(ev);\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={ev => this.handleHelloClick()}>\n          Hello {this.props.name}, click me!\n        </div>\n        <brick-flipbox class=\"demo\" ref=\"foo\">\n          <div>front</div>\n          <div>back</div>\n        </brick-flipbox>\n      </div>\n    );\n  }\n}\n```\n\n**What is the expected behavior?**\n\nA WC custom event can be handled with `onMyEvent={ev => this.handleMyEvent(ev)}` on the ReactElement corresponding to the WC.\n\n``` js\nclass HelloMessage extends React.Component {\n  handleHelloClick() {\n    this.refs['foo'].toggle();\n  }\n\n  handleFlipend(ev) {\n    console.log('Handle flip end');\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={ev => this.handleHelloClick()}>\n          Hello {this.props.name}, click me!\n        </div>\n        <brick-flipbox onFlipend={ev => this.handleFlipend(ev)} class=\"demo\" ref=\"foo\">\n          <div>front</div>\n          <div>back</div>\n        </brick-flipbox>\n      </div>\n    );\n  }\n}\n```\n\nPS: this snippet above still has the `ref`, but for unrelated reasons. Ideally we wouldn't need refs for handling events of WCs.\n",
  "closed_by": null
}
