{
  "url": "https://api.github.com/repos/facebook/react/issues/5974",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5974/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5974/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5974/events",
  "html_url": "https://github.com/facebook/react/issues/5974",
  "id": 131144904,
  "node_id": "MDU6SXNzdWUxMzExNDQ5MDQ=",
  "number": 5974,
  "title": "React / ReactDOM split proposal",
  "user": {
    "login": "iamdustan",
    "id": 227879,
    "node_id": "MDQ6VXNlcjIyNzg3OQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/227879?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdustan",
    "html_url": "https://github.com/iamdustan",
    "followers_url": "https://api.github.com/users/iamdustan/followers",
    "following_url": "https://api.github.com/users/iamdustan/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdustan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdustan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdustan/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdustan/orgs",
    "repos_url": "https://api.github.com/users/iamdustan/repos",
    "events_url": "https://api.github.com/users/iamdustan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdustan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2016-02-03T20:36:42Z",
  "updated_at": "2016-11-14T16:56:13Z",
  "closed_at": "2016-11-14T16:56:13Z",
  "author_association": "CONTRIBUTOR",
  "body": "_Following up on https://github.com/facebook/react/pull/5925 with a bit more planning._\n\nFrom what I understand ReactDOM cannot be split completely from React until there is a shared global owner. This is referenced in @sebmarkbage’s gist: https://gist.github.com/sebmarkbage/2d6c52dd9d2e55e9d139.\n\nThe relevant part:\n\n> **\"owner\"** - The \"owner\" concept relies on being able to track a shared\n> global state flag at the time of creating elements. This means that we have to\n> create a dependency into a single shared global stateful module for all React\n> components. It also means that effectively no React render function is truly a\n> pure function since creating an element depends on global state. It is not\n> idempotent. That means that you can't reliably use things like memoized\n> functions and all kind of other functional goodies.\n\nReact Native currently appears to have a migration path in the following two files (from https://github.com/facebook/react/commit/c29642d6edbc80188d2f21d3395276e1c1989d0a):\n- [react/lib/React.native.js](https://github.com/facebook/react/blob/master/packages/react/lib/React.native.js)\n- [react/lib/ReactDOM.native.js](https://github.com/facebook/react/blob/master/packages/react/lib/ReactDOM.native.js)\n\n---\n\nAny solutions need to have a way to share the `ReactCurrentOwner` module.\n- RN should get this for free because of `@providesModule` (if I understand how\n  that works correctly). In the future the same npm solution for ReactDOM will\n  apply to RN.\n- React + ReactDOM (npm distro): a shared npm module `react-current-owner` will\n  accomplish the shared dependency.\n- React + ReactDOM (browser distro): this will likely need a similar hack to the\n  current `React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED`.\n\n---\n\nThe first two should be pretty straightforward. Create a new package `react-current-owner` which is purely the `ReactCurrentOwner.js` file, split out. Published to 1.0.0 never to be changed. Add this to both React and ReactDOM package.json files. Publish, fin, carry on.\n\nThe browser distro will need to have some custom build files. My current idea is that the React browser distro gets a `__SECRET_OWNER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED` hook that ReactDOM can hook onto. The majority of this is purely a chore to work through.\n\nI am curious if this would provide an attack vector by leaking this internal state. The current ReactDOM hook does not leak internals as far as I’m aware. Although this may not be important since the **REACT_DEVTOOLS_HOOK** also allows a visitor to a React page to get into internal state.\n\nBefore continuing any work on #5925, does this proposal make sense? What alternative solutions has the team considered?\n",
  "closed_by": {
    "login": "iamdustan",
    "id": 227879,
    "node_id": "MDQ6VXNlcjIyNzg3OQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/227879?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdustan",
    "html_url": "https://github.com/iamdustan",
    "followers_url": "https://api.github.com/users/iamdustan/followers",
    "following_url": "https://api.github.com/users/iamdustan/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdustan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdustan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdustan/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdustan/orgs",
    "repos_url": "https://api.github.com/users/iamdustan/repos",
    "events_url": "https://api.github.com/users/iamdustan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdustan/received_events",
    "type": "User",
    "site_admin": false
  }
}
