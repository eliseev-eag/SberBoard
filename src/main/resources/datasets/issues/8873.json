{
  "url": "https://api.github.com/repos/facebook/react/issues/8873",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8873/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8873/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8873/events",
  "html_url": "https://github.com/facebook/react/issues/8873",
  "id": 203400710,
  "node_id": "MDU6SXNzdWUyMDM0MDA3MTA=",
  "number": 8873,
  "title": "Maintaining ref prop through React.cloneElement()",
  "user": {
    "login": "pvienneau",
    "id": 4933086,
    "node_id": "MDQ6VXNlcjQ5MzMwODY=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/4933086?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pvienneau",
    "html_url": "https://github.com/pvienneau",
    "followers_url": "https://api.github.com/users/pvienneau/followers",
    "following_url": "https://api.github.com/users/pvienneau/following{/other_user}",
    "gists_url": "https://api.github.com/users/pvienneau/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pvienneau/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pvienneau/subscriptions",
    "organizations_url": "https://api.github.com/users/pvienneau/orgs",
    "repos_url": "https://api.github.com/users/pvienneau/repos",
    "events_url": "https://api.github.com/users/pvienneau/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pvienneau/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2017-01-26T15:30:01Z",
  "updated_at": "2019-07-18T06:45:48Z",
  "closed_at": "2017-01-26T15:50:15Z",
  "author_association": "NONE",
  "body": "React's [0.13 RC](https://facebook.github.io/react/blog/2015/03/03/react-v0.13-rc2.html) suggests that `ref` prop on components pushed through `React.cloneElement()` will allow for two parents to maintain `ref` props to the same child.\r\n\r\nI've tried to replicate this behaviour in a [CodePen](http://codepen.io/pvienneau/pen/PWJjKq), but I am not able to maintain two `ref` references to the same child (ie the ancestor component's `ref` gets nulled).\r\n\r\nHere is the jist of the code, working code found [here](http://codepen.io/pvienneau/pen/PWJjKq):\r\n\r\n```\r\nclass ChildComponent extends React.Component{\r\n  constructor(props){\r\n    super(props);   \r\n  \r\n    this.onClick = this.onClick.bind(this);\r\n    this.extendsChildren = this.extendChildren(this);\r\n  }\r\n  \r\n  onClick(e) {\r\n    e.preventDefault();\r\n    \r\n    try{\r\n      alert(this._input.value);\r\n    }catch(e){\r\n      alert('ref broken :(');\r\n    }\r\n  }\r\n  \r\n  extendChildren(){\r\n    return React.Children.map(this.props.children, child => {\r\n      return React.cloneElement(\r\n        child,\r\n        {\r\n          ref: ref => this._input = ref\r\n        }\r\n      );\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <div>\r\n      <button onClick={this.onClick}>\r\n        ChildComponent ref check\r\n      </button>\r\n      {this.extendChildren()}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass AncestorComponent extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  \r\n  onClick(e) {\r\n    e.preventDefault();\r\n    \r\n    try{\r\n      alert(this._input.value);\r\n    }catch(e){\r\n      alert('ref broken :(');\r\n    }\r\n    \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n    <div>\r\n        <p>\r\n          The expected behaviour is that I should be able to click on both Application and ChildComponent check buttons and have a reference to the input (poping an alert with the input's value).\r\n        </p>\r\n      <button onClick={this.onClick}>\r\n        Ancestor ref check\r\n      </button>\r\n      <ChildComponent>\r\n        <input ref={ref => this._input = ref} defaultValue=\"Hello World\"/>\r\n      </ChildComponent>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\nHas this behaviour been dropped/never implemented since the above RC? Or am I doing something wrong?",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
