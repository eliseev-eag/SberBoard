{
  "url": "https://api.github.com/repos/facebook/react/issues/5052",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5052/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5052/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5052/events",
  "html_url": "https://github.com/facebook/react/issues/5052",
  "id": 109787985,
  "node_id": "MDU6SXNzdWUxMDk3ODc5ODU=",
  "number": 5052,
  "title": "React and WebComponents",
  "user": {
    "login": "qzqzzz",
    "id": 582616,
    "node_id": "MDQ6VXNlcjU4MjYxNg==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/582616?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qzqzzz",
    "html_url": "https://github.com/qzqzzz",
    "followers_url": "https://api.github.com/users/qzqzzz/followers",
    "following_url": "https://api.github.com/users/qzqzzz/following{/other_user}",
    "gists_url": "https://api.github.com/users/qzqzzz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qzqzzz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qzqzzz/subscriptions",
    "organizations_url": "https://api.github.com/users/qzqzzz/orgs",
    "repos_url": "https://api.github.com/users/qzqzzz/repos",
    "events_url": "https://api.github.com/users/qzqzzz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qzqzzz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2015-10-05T12:43:19Z",
  "updated_at": "2016-11-04T14:01:23Z",
  "closed_at": "2015-11-30T19:55:39Z",
  "author_association": "NONE",
  "body": "I see a lot of questions, blog posts and discussions around `React` and `WebComponents`, but none of them are actually an official statement from Facebook that could clarify whether or not `React` will going to implement `WebComponents` W3C specs in the future.\n\nThere are also quite a few GitHub Issues around this subject, like \"Enable rendering into shadow roots\" #1167, \"Allow rendering into a document fragment\" #840, \"Track upcoming DOM technology upgrades\" #2836, \"Proof of concept: Shadow DOM support\" #1877, \"Support for custom DOM elements & attributes\" #2746, \"Templates?\" #2286, \"Add naive custom element support\" #1249, \"Add support in the future for custom elements\" #1214 etc.\n\nNevertheless there are some open-source projects that allows `React` to be `WebComponents`-aware, like https://github.com/Wildhoney/Maple.js, https://github.com/wix/react-templates or https://github.com/PixelsCommander/ReactiveElements\n\nAs for `WebComponents`, it seems that the reconciliation between `HTML Imports` and `ES6 Modules` is inevitable, thus the `HTML Imports` part of the spec might need to change in order to be widely accepted among the open-source community and browser vendors https://bugzilla.mozilla.org/show_bug.cgi?id=877072 Until then, wrapping components and importing them as `ES6 Modules` is as good as including them in HTML pages and importing them with `<link rel=\"import\" />`\n\nThe `Custom Elements` are more or less about defining new markup that you can interact in the same way as with native HTML elements, allowing you to extend existing native HTML elements and giving you some lifecycle methods. This is already possible with `React` and `JSX`, even though `JSX`'s XHTML-like syntax transpiles to JavaScript which ultimately becomes HTML through the `Virtual DOM`.\n\n`Shadow DOM` is hard and in some cases even impossible to be polyfilled. This is the reason why `Polymer` is using `Shady DOM` https://www.polymer-project.org/1.0/articles/shadydom.html With the current browser support http://caniuse.com/#feat=shadowdom, adopting `BEM` conventions or even inline styles backed by JavaScript objects, which is what `React` is doing, remains a viable alternative but still is different from `Shadow DOM`.\n\n`Templates` are really pointless without data binding. Two-way data binding is slow because the `Object.observe` polyfill (https://github.com/Polymer/observe-js) is slow. Also, two-way data binding is about code complexity and the fact that the more dependencies you have between between components, the bigger the complexity grows, as opposed to unidirectional data flow. `React`'s one-way data flow with immutable data structures has the potential to scale and be highly performant, especially if we think about large-scale applications and complex interactions between thousands of entities.\n\nEven though the open-source community is looking both at `React` and `WebComponents`, in the end the developer experience is what matters most and drives adoption. No doubt standards are having their own place in this.\n\nTherefore, my question is: what is `React`'s strategy for `WebComponents`?\n\n@sebmarkbage any thoughts?\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
