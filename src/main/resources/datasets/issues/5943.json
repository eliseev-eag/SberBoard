{
  "url": "https://api.github.com/repos/facebook/react/issues/5943",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5943/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5943/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5943/events",
  "html_url": "https://github.com/facebook/react/issues/5943",
  "id": 129874140,
  "node_id": "MDU6SXNzdWUxMjk4NzQxNDA=",
  "number": 5943,
  "title": "Cascading props",
  "user": {
    "login": "esseswann",
    "id": 6066417,
    "node_id": "MDQ6VXNlcjYwNjY0MTc=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6066417?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/esseswann",
    "html_url": "https://github.com/esseswann",
    "followers_url": "https://api.github.com/users/esseswann/followers",
    "following_url": "https://api.github.com/users/esseswann/following{/other_user}",
    "gists_url": "https://api.github.com/users/esseswann/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/esseswann/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/esseswann/subscriptions",
    "organizations_url": "https://api.github.com/users/esseswann/orgs",
    "repos_url": "https://api.github.com/users/esseswann/repos",
    "events_url": "https://api.github.com/users/esseswann/events{/privacy}",
    "received_events_url": "https://api.github.com/users/esseswann/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2016-01-29T20:29:05Z",
  "updated_at": "2016-02-01T22:49:15Z",
  "closed_at": "2016-02-01T21:09:37Z",
  "author_association": "NONE",
  "body": "After using react for a while I came up with a strange idea to support some kind of cascading props.\nSo we have parent component\n\n```\nconst Parent = React.createClass({\n  render () {\n    return (\n      <div>\n        <Child />\n        <Child />\n        <Child text='some text'/>\n      </div>\n    )\n  }\n})\n```\n\nand then a child component\n\n```\nconst Child = React.createClass({\n  render () {\n    return (\n      <div>{this.props.text}</div>\n    )\n  }\n})\n```\n\nand then we call Parent component with following prop\n`<Parent Child={{text: 'cascading prop'}}/>`\nIt would render as this\n\n```\ncascading prop\ncascading prop\nsome text (or maybe override?)\n```\n\nGoing further I would propse the use of CSS-like traversal selectors on these props (i.e. >, :first-child). I know all of it looks very much like some kind of mad antipattern, but I would like to hear why, besides obvious performance isssues.\n\nThe main reason behind it is that a lot of times you have to change a little bit insides of a component in one particular place and have to implement new methods\\props and then declare them in parent component anyways.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
