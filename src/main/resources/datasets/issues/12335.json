{
  "url": "https://api.github.com/repos/facebook/react/issues/12335",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12335/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12335/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12335/events",
  "html_url": "https://github.com/facebook/react/issues/12335",
  "id": 302679189,
  "node_id": "MDU6SXNzdWUzMDI2NzkxODk=",
  "number": 12335,
  "title": "getDerivedStateFromProps and requestAnimationFrame problem",
  "user": {
    "login": "grahammendick",
    "id": 1761227,
    "node_id": "MDQ6VXNlcjE3NjEyMjc=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1761227?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/grahammendick",
    "html_url": "https://github.com/grahammendick",
    "followers_url": "https://api.github.com/users/grahammendick/followers",
    "following_url": "https://api.github.com/users/grahammendick/following{/other_user}",
    "gists_url": "https://api.github.com/users/grahammendick/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/grahammendick/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/grahammendick/subscriptions",
    "organizations_url": "https://api.github.com/users/grahammendick/orgs",
    "repos_url": "https://api.github.com/users/grahammendick/repos",
    "events_url": "https://api.github.com/users/grahammendick/events{/privacy}",
    "received_events_url": "https://api.github.com/users/grahammendick/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2018-03-06T12:20:39Z",
  "updated_at": "2018-03-07T17:52:56Z",
  "closed_at": "2018-03-07T17:52:56Z",
  "author_association": "NONE",
  "body": "Thanks for all your hard work. React is incredible.\r\n\r\nThe new static lifecycle methods don’t work well with the common usage animation pattern. The approach, popularised by ReactMotion, is to add an `animate raf` in `componentDidMount`. Inside the `animate` function you update the state and keep adding a new `animate raf` until the animation finishes. That way the `animate raf` only runs when there’s work to do. In `componentWilReceiveProps` you add a new `animate raf` to start the animation again if it’s stopped. \r\n\r\n```javascript\r\nclass Animation extends React.Component {\r\n  componentDidMount() {\r\n    this.id = requestAnimationFrame(this.animate);\r\n  }\r\n  componentWillReceiveProps() {\r\n    if (!this.id)\r\n      this.id = requestAnimationFrame(this.animate);\r\n  }\r\n  animate(tick) {\r\n    this.setState(() => {\r\n      if (animationNeeded)\r\n        this.id = requestAnimationFrame(this.animate);\r\n    });\r\n    return newState;\r\n  }\r\n  render() {\r\n    return <AnimatedItem />\r\n  }\r\n}\r\n```\r\nThere’s no way to reliably translate this pattern to the new static lifecycle.\r\n\r\nYou can’t move `componentWillReceiveProps` into `getDerivedStateFromProps` because you can’t access the `animate raf` from a static function. \r\n\r\nYou can’t move `componentWillReceiveProps` into `componentDidUpdate` because then the `animate raf` will run forever, even when there’s no work to do. The `componentDidUpdate` has no way of knowing whether the update is because of new props or because the `animate raf` has run. So it always has to add a new `animate raf` even when the animation’s finished (re-running the `animationNeeded` check inside `componentDidUpdate` isn’t always possible).\r\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
