{
  "url": "https://api.github.com/repos/facebook/react/issues/7536",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7536/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7536/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7536/events",
  "html_url": "https://github.com/facebook/react/issues/7536",
  "id": 172291908,
  "node_id": "MDU6SXNzdWUxNzIyOTE5MDg=",
  "number": 7536,
  "title": "Allow generators (that yield components) in place of arrays",
  "user": {
    "login": "mnpenner",
    "id": 1112998,
    "node_id": "MDQ6VXNlcjExMTI5OTg=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1112998?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mnpenner",
    "html_url": "https://github.com/mnpenner",
    "followers_url": "https://api.github.com/users/mnpenner/followers",
    "following_url": "https://api.github.com/users/mnpenner/following{/other_user}",
    "gists_url": "https://api.github.com/users/mnpenner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mnpenner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mnpenner/subscriptions",
    "organizations_url": "https://api.github.com/users/mnpenner/orgs",
    "repos_url": "https://api.github.com/users/mnpenner/repos",
    "events_url": "https://api.github.com/users/mnpenner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mnpenner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2016-08-20T21:34:04Z",
  "updated_at": "2018-08-02T18:49:55Z",
  "closed_at": "2016-09-09T20:59:45Z",
  "author_association": "CONTRIBUTOR",
  "body": "**Do you want to request a _feature_ or report a _bug_?**\n\nFeature\n\n**What is the current behavior?**\n\nGenerators are silently discarded\n\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar (template: https://jsfiddle.net/reactjs/69z2wepo/).**\n\n[This is allowed](https://jsfiddle.net/zfLnL3r3/):\n\n``` jsx\nvar Hello = React.createClass({\n  render: function() {\n    return <ul>\n        {(() => [\n        <li key=\"foo\">foo</li>,\n        <li key=\"bar\">bar</li>\n      ])()}\n    </ul>;\n  }\n});\n```\n\n[This](https://jsfiddle.net/s7cxrro8/) should be legal too:\n\n``` jsx\nvar Hello = React.createClass({\n  render: function() {\n    return <ul>\n        {(function*() {\n        yield (<li key=\"foo\">foo</li>);\n        yield (<li key=\"bar\">bar</li>);\n      })()}\n    </ul>;\n  }\n});\n```\n\nWould be even better if the trailing `()` wasn't required, and it just executed the function.\n\n**What is the expected behavior?**\n\nBoth examples should generate:\n\n``` html\n<ul><li>foo</li><li>bar</li></ul>\n```\n\nThis would make it _much_ easier to write `if` conditions in the middle of a JSX block. Here's a snippet of how this can be used from my current project:\n\n``` jsx\n <div className=\"row\">\n     {generatorToArray(function*(){\n         if(sameVehicleAndDriverForAllSegments) {\n             yield <div key=\"billing_type\" className=\"col\">\n                 <label>Billing Type</label>\n                 <RadioGroup valueLink={linkState(billingForm, 'billing_type')}>\n                     <RadioButton value=\"HOURLY\">Hourly</RadioButton>\n                     <RadioButton value=\"FLAT\">Flat</RadioButton>\n                 </RadioGroup>\n             </div>;\n         }\n\n         switch(data.billing_type) {\n             case 'HOURLY':\n                 yield <div key=\"hourly_rate\" className=\"col\">\n                     <label htmlFor=\"hourly_rate\">Hourly Rate</label>\n                     <div>$<TextBox id=\"hourly_rate\" valueLink={linkState(billingForm, 'hourly_rate')} className=\"amount-input\" disabled={!vehicleId}/>/hour</div>\n                     <div><Slider {...hourlyRateSliderOptions} valueLink={linkState(billingForm, 'hourly_rate')} disabled={!vehicleId}/></div>\n                 </div>;\n                 break;\n             case 'FLAT':\n                 yield <div key=\"flat_rate\" className=\"col\">\n                     <label htmlFor=\"flat_rate\">Flat Rate</label>\n                     <div>$<TextBox id=\"flat_rate\" valueLink={linkState(billingForm, 'flat_rate')} className=\"amount-input\" /></div>\n                 </div>;\n                 break;\n         }\n     })}\n </div>\n```\n\nNotice how I can write `if` conditions and `switch` statements without having to instantiate an empty array, push elements into it as needed, and then return an array at the end -- generators take care of all of that for you.\n\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\n\nn/a\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
