{
  "url": "https://api.github.com/repos/facebook/react/issues/12261",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12261/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12261/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12261/events",
  "html_url": "https://github.com/facebook/react/issues/12261",
  "id": 298997978,
  "node_id": "MDU6SXNzdWUyOTg5OTc5Nzg=",
  "number": 12261,
  "title": "setState callbacks not getting executed in expected order",
  "user": {
    "login": "nihartrivedi810",
    "id": 5328845,
    "node_id": "MDQ6VXNlcjUzMjg4NDU=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5328845?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nihartrivedi810",
    "html_url": "https://github.com/nihartrivedi810",
    "followers_url": "https://api.github.com/users/nihartrivedi810/followers",
    "following_url": "https://api.github.com/users/nihartrivedi810/following{/other_user}",
    "gists_url": "https://api.github.com/users/nihartrivedi810/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nihartrivedi810/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nihartrivedi810/subscriptions",
    "organizations_url": "https://api.github.com/users/nihartrivedi810/orgs",
    "repos_url": "https://api.github.com/users/nihartrivedi810/repos",
    "events_url": "https://api.github.com/users/nihartrivedi810/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nihartrivedi810/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-02-21T14:47:15Z",
  "updated_at": "2018-03-27T22:59:54Z",
  "closed_at": "2018-03-27T22:59:54Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nA bug\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nv. 15.6.2\r\nNot sure if it worked in previous versions.\r\n\r\n**What is the current behavior?**\r\n\r\nFor the following piece of code, when `componentWillReceiveProps` is called multiple times quickly without executing the callbacks(or completing `setState`), it is expected that the callbacks are executed in the correct order with the corresponding `nextProps` in their scope.\r\n\r\n```\r\ncomponentWillReceiveProps(nextProps) {\r\n    this.setState({someStateValue:  nextProps.someValue}, () => {\r\n         this.doSomethingElse(nextProps);\r\n    })\r\n}\r\n```\r\n\r\nBut, contrary to the expected behavior, the callback with the later value of `nextProps` is being called first and the one with the older value next, eventually calling the `doSomethingElse` with an older value.\r\n\r\nUpon debugging, in the following piece of code from `react-dom.js`\r\n\r\n```\r\nenqueueCallback: function (publicInstance, callback, callerName) {\r\n    ReactUpdateQueue.validateCallback(callback, callerName);\r\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\r\n\r\n    // Previously we would throw an error if we didn't have an internal\r\n    // instance. Since we want to make it a no-op instead, we mirror the same\r\n    // behavior we have in other enqueue* methods.\r\n    // We also need to ignore callbacks in componentWillMount. See\r\n    // enqueueUpdates.\r\n    if (!internalInstance) {\r\n      return null;\r\n    }\r\n\r\n    if (internalInstance._pendingCallbacks) {\r\n      internalInstance._pendingCallbacks.push(callback);\r\n    } else {\r\n      internalInstance._pendingCallbacks = [callback];\r\n    }\r\n    // TODO: The callback here is ignored when setState is called from\r\n    // componentWillMount. Either fix it or disallow doing so completely in\r\n    // favor of getInitialState. Alternatively, we can disallow\r\n    // componentWillMount during server-side rendering.\r\n    enqueueUpdate(internalInstance);\r\n  },\r\n```\r\nIt was found that for the second call to `setState`, `internalInstance._pendingCallbacks` was null even though the callback for the first `setState` was not executed.\r\n\r\n**What is the expected behavior?**\r\nExpected that callbacks are registered and executed in order.\r\n\r\nIs this a known bug or is there some mistake being made here? ",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
