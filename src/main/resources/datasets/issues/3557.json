{
  "url": "https://api.github.com/repos/facebook/react/issues/3557",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3557/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3557/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3557/events",
  "html_url": "https://github.com/facebook/react/issues/3557",
  "id": 65577752,
  "node_id": "MDU6SXNzdWU2NTU3Nzc1Mg==",
  "number": 3557,
  "title": "Teardown TestUtils method",
  "user": {
    "login": "robcolburn",
    "id": 245860,
    "node_id": "MDQ6VXNlcjI0NTg2MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/245860?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/robcolburn",
    "html_url": "https://github.com/robcolburn",
    "followers_url": "https://api.github.com/users/robcolburn/followers",
    "following_url": "https://api.github.com/users/robcolburn/following{/other_user}",
    "gists_url": "https://api.github.com/users/robcolburn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/robcolburn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/robcolburn/subscriptions",
    "organizations_url": "https://api.github.com/users/robcolburn/orgs",
    "repos_url": "https://api.github.com/users/robcolburn/repos",
    "events_url": "https://api.github.com/users/robcolburn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/robcolburn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 139734344,
      "node_id": "MDU6TGFiZWwxMzk3MzQzNDQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Test%20Utils",
      "name": "Component: Test Utils",
      "color": "eb6420",
      "default": false
    },
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2015-04-01T00:55:22Z",
  "updated_at": "2018-01-02T13:22:12Z",
  "closed_at": "2018-01-02T13:22:12Z",
  "author_association": "NONE",
  "body": "I'm doing some unit-testing on a module, to be used in an isomorphic app process. So, I write-up `server-side.js` and `client-side.js` for Mocha to consume.  Individually, they each run pretty good - so far.  However, after starting to use TestUtils in `client-side`, `server-side` starts failing on account of:\n\n```\nUncaught ReferenceError: document is not defined\n at getActiveElement (~p/node_modules/react/lib/getActiveElement.js:23:12)\n at ReactReconcileTransaction.ReactInputSelection.getSelectionInformation (~p/node_modules/react/lib/ReactInputSelection.js:40:23)\n at ReactReconcileTransaction.Mixin.initializeAll (~p/node_modules/react/lib/Transaction.js:168:30)\n at ReactReconcileTransaction.Mixin.perform (~p/node_modules/react/lib/Transaction.js:133:12)\n at ReactUpdatesFlushTransaction.Mixin.perform (~p/node_modules/react/lib/Transaction.js:134:20)\n at ReactUpdatesFlushTransaction.assign.perform (~p/node_modules/react/lib/ReactUpdates.js:95:38)\n at Object.flushBatchedUpdates (~p/node_modules/react/lib/ReactUpdates.js:175:19)\n at Object.wrapper [as flushBatchedUpdates] (~p/node_modules/react/lib/ReactPerf.js:70:21)\n at ReactDefaultBatchingStrategyTransaction.Mixin.closeAll (~p/node_modules/react/lib/Transaction.js:207:25)\n at ReactDefaultBatchingStrategyTransaction.Mixin.perform (~p/node_modules/react/lib/Transaction.js:148:16)\n at Object.ReactDefaultBatchingStrategy.batchedUpdates (~p/node_modules/react/lib/ReactDefaultBatchingStrategy.js:66:19)\n at Object.enqueueUpdate (~p/node_modules/react/lib/ReactUpdates.js:215:22)\n at enqueueUpdate (~p/node_modules/react/lib/ReactUpdateQueue.js:30:18)\n at Object.ReactUpdateQueue.enqueueSetState (~p/node_modules/react/lib/ReactUpdateQueue.js:208:5)\n at ReactComponent.setState (~p/node_modules/react/lib/ReactComponent.js:69:20)\n at cb (~p/node_modules/reflux/src/connect.js:17:85)\n at EventEmitter.eventHandler (~p/node_modules/reflux/src/PublisherMethods.js:40:22)\n at EventEmitter.emit (~p/node_modules/reflux/node_modules/eventemitter3/index.js:72:35)\n at Store.module.exports.trigger (~p/node_modules/reflux/src/PublisherMethods.js:110:26)\n at Store.Reflux.createStore.onLoadFailed (~p/test/fixtures/WikiApp.js:40:10)\n at Store.Reflux.createStore.onLoadCompleted (~p/test/fixtures/WikiApp.js:35:12)\n at EventEmitter.eventHandler (~p/node_modules/reflux/src/PublisherMethods.js:40:22)\n at EventEmitter.emit (~p/node_modules/reflux/node_modules/eventemitter3/index.js:72:35)\n at Function.module.exports.trigger (~p/node_modules/reflux/src/PublisherMethods.js:110:26)\n at null._onTimeout (~p/node_modules/reflux/src/PublisherMethods.js:120:24)\n at Timer.listOnTimeout (timers.js:110:15)\n```\n\nApparently, this line has kicked React into client-mode.\n\n``` js\nvar node = TestUtils.renderIntoDocument(element);\n```\n\nThat's not too bad, but I need way to kick React out of client-mode, so I can add it to my teardown method (aka `after`).\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
