{
  "url": "https://api.github.com/repos/facebook/react/issues/4832",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4832/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4832/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4832/events",
  "html_url": "https://github.com/facebook/react/pull/4832",
  "id": 105737469,
  "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzA2MTQ=",
  "number": 4832,
  "title": "Use a Symbol to tag every ReactElement",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/facebook/react/milestones/13",
    "html_url": "https://github.com/facebook/react/milestone/13",
    "labels_url": "https://api.github.com/repos/facebook/react/milestones/13/labels",
    "id": 1035426,
    "node_id": "MDk6TWlsZXN0b25lMTAzNTQyNg==",
    "number": 13,
    "title": "0.14",
    "description": null,
    "creator": {
      "login": "sophiebits",
      "id": 6820,
      "node_id": "MDQ6VXNlcjY4MjA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sophiebits",
      "html_url": "https://github.com/sophiebits",
      "followers_url": "https://api.github.com/users/sophiebits/followers",
      "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
      "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
      "organizations_url": "https://api.github.com/users/sophiebits/orgs",
      "repos_url": "https://api.github.com/users/sophiebits/repos",
      "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sophiebits/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 74,
    "state": "closed",
    "created_at": "2015-03-23T23:33:55Z",
    "updated_at": "2015-10-09T17:52:30Z",
    "due_on": null,
    "closed_at": "2015-10-08T00:19:55Z"
  },
  "comments": 2,
  "created_at": "2015-09-10T05:58:59Z",
  "updated_at": "2016-01-12T05:56:29Z",
  "closed_at": "2015-09-10T06:19:33Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/4832",
    "html_url": "https://github.com/facebook/react/pull/4832",
    "diff_url": "https://github.com/facebook/react/pull/4832.diff",
    "patch_url": "https://github.com/facebook/react/pull/4832.patch"
  },
  "body": "Fixes #3473\n\nI tag each React element with `$$typeof: Symbol.for('react.element')`. We need\nthis to be able to safely distinguish these from plain objects that might have\ncome from user provided JSON.\n\nThe idiomatic JavaScript way of tagging an object is for it to inherent some\nprototype and then use `instanceof` to test for it.\n\nHowever, this has limitations since it doesn't work with value types which\nrequire `typeof` checks. They also don't work across realms. Which is why there\nare alternative tag checks like `Array.isArray` or the `toStringTag`. Another\nproblem is that different instances of React that might have been created not knowing about eachother. npm tends to make this kind of problem occur a lot.\n\nAdditionally, it is our hope that ReactElement will one day be specified in\nterms of a \"Value Type\" style record instead of a plain Object.\n\nThis Value Types proposal by @nikomatsakis is currently on hold but does satisfy all these requirements:\n\nhttps://github.com/nikomatsakis/typed-objects-explainer/blob/master/valuetypes.md#the-typeof-operator\n\nAdditionally, there is already a system for coordinating tags across module\nsystems and even realms in ES6. Namely using `Symbol.for`. (thx @sebmck)\n\nCurrently these objects are not able to transfer between Workers but there is\nnothing preventing that from being possible in the future. You could imagine\neven `Symbol.for` working across Worker boundaries. You could also build a\nsystem that coordinates Symbols and Value Types from server to client or through\nserialized forms. That's beyond the scope of React itself, and if it was built\nit seems like it would belong with the `Symbol` system. A system could override\nthe `Symbol.for('react.element')` to return a plain yet\ncryptographically random or unique number. That would allow ReactElements to\npass through JSON without risking the XSS issue.\n\nThe fallback solution is a plain well-known number. This makes it unsafe with\nregard to the XSS issue described in #3473. We could have used a much more\nconvoluted solution to protect against JSON specifically but that would require\nsome kind of significant coordination, or change the check to do a\n`typeof element.$$typeof === 'function'` check which would not make it unique to\nReact. It seems cleaner to just use a fixed number since the protection is just\na secondary layer anyway. I'm not sure if this is the right tradeoff.\n\nIn short, if you want the XSS protection, use a proper Symbol polyfill.\n\nFinally, the reason for calling it `$$typeof` is to avoid confusion with `.type`\nand the use case is to add a tag that the `typeof` operator would refer to.\nI would use `@@typeof` but that seems to deopt in JSC. I also don't use\n`__typeof` because this is more than a framework private. It should really be\npart of the polyfilling layer.\n\nTest Plan:\n\n`examples/basic/index.html` works in Chrome and Firefox which both have native Symbols - and in Safari which doesn't.\n\n`React.createElement('div').$$typeof // Symbol(react.element)`.\n",
  "closed_by": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  }
}
