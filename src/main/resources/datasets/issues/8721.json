{
  "url": "https://api.github.com/repos/facebook/react/issues/8721",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8721/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8721/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8721/events",
  "html_url": "https://github.com/facebook/react/issues/8721",
  "id": 199608871,
  "node_id": "MDU6SXNzdWUxOTk2MDg4NzE=",
  "number": 8721,
  "title": "[Feature request] PropTypes: validate that no extra props has been passed",
  "user": {
    "login": "mqklin",
    "id": 9456433,
    "node_id": "MDQ6VXNlcjk0NTY0MzM=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/9456433?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mqklin",
    "html_url": "https://github.com/mqklin",
    "followers_url": "https://api.github.com/users/mqklin/followers",
    "following_url": "https://api.github.com/users/mqklin/following{/other_user}",
    "gists_url": "https://api.github.com/users/mqklin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mqklin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mqklin/subscriptions",
    "organizations_url": "https://api.github.com/users/mqklin/orgs",
    "repos_url": "https://api.github.com/users/mqklin/repos",
    "events_url": "https://api.github.com/users/mqklin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mqklin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-01-09T17:14:21Z",
  "updated_at": "2017-01-09T17:42:34Z",
  "closed_at": "2017-01-09T17:42:34Z",
  "author_association": "NONE",
  "body": "Here is a [stackoverflow question](http://stackoverflow.com/questions/33907154/react-validate-that-no-extra-props-has-been-passed) and sorta solution:\r\n\r\n```\r\ncomponentWillReceiveProps(nextProps) {\r\n  const passedPropNames = Object.keys(nextProps);\r\n  const expectedPropNames = Object.keys(MyComponent.propTypes);\r\n  passedPropNames.forEach(propName => {\r\n    if (!expectedPropNames.includes(propName)) {\r\n      console.warn('Not expecting a property called', propName);\r\n    }\r\n  });\r\n}\r\n```\r\n\r\nIt's not working properly at least because there is no recursion, but I hope that the idea is clear.\r\nIt can be useful for example after refactoring and helps to eliminate death code, when some props are no longer needed.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
