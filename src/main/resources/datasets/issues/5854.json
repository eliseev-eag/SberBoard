{
  "url": "https://api.github.com/repos/facebook/react/issues/5854",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5854/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5854/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5854/events",
  "html_url": "https://github.com/facebook/react/issues/5854",
  "id": 126798272,
  "node_id": "MDU6SXNzdWUxMjY3OTgyNzI=",
  "number": 5854,
  "title": "Allow props/state to be of types other than Object",
  "user": {
    "login": "japgolly",
    "id": 202935,
    "node_id": "MDQ6VXNlcjIwMjkzNQ==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/202935?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/japgolly",
    "html_url": "https://github.com/japgolly",
    "followers_url": "https://api.github.com/users/japgolly/followers",
    "following_url": "https://api.github.com/users/japgolly/following{/other_user}",
    "gists_url": "https://api.github.com/users/japgolly/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/japgolly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/japgolly/subscriptions",
    "organizations_url": "https://api.github.com/users/japgolly/orgs",
    "repos_url": "https://api.github.com/users/japgolly/repos",
    "events_url": "https://api.github.com/users/japgolly/events{/privacy}",
    "received_events_url": "https://api.github.com/users/japgolly/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2016-01-15T03:08:01Z",
  "updated_at": "2016-01-15T04:41:05Z",
  "closed_at": "2016-01-15T04:41:05Z",
  "author_association": "NONE",
  "body": "Hello I'm the author of [scalajs-react](https://japgolly.github.io/scalajs-react/) which facilitates using React from the statically-typed Scala language.\n\nI use immutable Scala values as components' props and state but because React requires JS objects I have to wrap all props/values in a single-key object. For example instead of just setting a component's state to `3` I have to wrap it into `{v: 3}`.\n\nAlso as I understand it, React performs additional work with the objects it receives, like if a component has state `{a: 9, b: 8}` when receiving a `setState {a: 1}` it will actually merge the two to create a new object `{a: 1, b: 8}`. This feature is very useful when developing in JS but very useless for all consumers of my library and perhaps others (Om maybe? maybe not); the reason being that in my case, that merging of props/state is done via Scala itself where all the static types and other invariants can be checked by the compiler.\n\nIt would be much more efficient for us who use React via other languages to allow components to use types other than Object in props/state. Even a simple check like _if (newState is Object) mergeStates else blindlyReplaceState_ would be sufficient. WDYT?\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
