{
  "url": "https://api.github.com/repos/facebook/react/issues/15726",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15726/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15726/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15726/events",
  "html_url": "https://github.com/facebook/react/issues/15726",
  "id": 447903009,
  "node_id": "MDU6SXNzdWU0NDc5MDMwMDk=",
  "number": 15726,
  "title": "Improving the component logging/debugging experience",
  "user": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bvaughn",
      "id": 29597,
      "node_id": "MDQ6VXNlcjI5NTk3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 21,
  "created_at": "2019-05-23T22:37:15Z",
  "updated_at": "2019-05-29T00:23:06Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "body": "# Backstory\r\n\r\nDevTools re-renders function components that use hooks in order to build up metadata to display in the selected element panel. This may cause confusion, since these re-renders will trigger breakpoints and cause unexpected console logging (see [this comment](https://github.com/facebook/react-devtools/issues/1215#issuecomment-495382645)). We avoid unnecessary re-renders by caching data (see [PR 289](https://github.com/bvaughn/react-devtools-experimental/pull/289)) but even so this is likely to be a point of confusion.\r\n\r\n# Solution\r\n\r\nIt would be nice if the shallow re-rendering done by DevTools were less observable (e.g. console logs were suppressed to avoid cluttering the console). Breakpoints would still be hit, but that seems like a less common use case. \r\n\r\nWhile we are considering logging, we might also consider if there are additional improvements that could be made, e.g.\r\n\r\n1. Add a new section to the Components tree that shows the most recently logged messages for a given component.\r\n2. Add an option to coalesce render-time logs into a single message that's printed at commit (or error) time to make debug logging easier to read. (Perhaps we could use `console.group` to also indicate the nested structure of these logs.)\r\n\r\nThe proposals below address both (a) collecting per-component logging info and (b) temporarily disabling console logging while re-rendering for inspection purposes.\r\n\r\n# API Proposals\r\n\r\n## 1: Modify built-in `console` methods\r\n\r\nDevTools could spy on the built-in `console` methods and disable the pass-through functionality when re-rendering.\r\n\r\n### Pros\r\n* Requires no effort / code changes for developers to opt in and benefit from this.\r\n* \"Just works\" for advanced methods like `console.group` and `console.table`.\r\n* \"Just works\" for third party libraries that may not even be React-specific.\r\n### Cons\r\n* Feels questionable to modify native browser APIs.\r\n\r\n## 2: Add `React.log` and `React.info` API\r\n\r\nReact will be adding two new logging methods in the upcoming v16.9 release- `React.warn` and `React.error` (see #15170). These methods decorate `console.warn` and `console.error` and append the current component stack to any logged messages. We could extend this pattern and add additional `log` and `info` methods. These APIs could be extended by DevTools as needed.\r\n\r\n### Pros\r\n* Does not require mutating global APIs.\r\n### Cons\r\n* Requires code changes to opt-in.\r\n* Would not cover (or would be a hassle to cover) all `console` methods (e.g. `group`)\r\n* Would not work for third party components or non-React utility code.\r\n\r\n## 3: Add `React.debug(callback)` API\r\n\r\nReact could add a new `debug` API that accepts a callback for general debug operations (most commonly `console` logging, but also potentially breakpoints or other things).\r\n\r\n### Pros\r\n* Works with breakpoints.\r\n* Covers more complex use cases (e.g. pushing to an array for debug purposes).\r\n* Single method rather than mirroring (or spying on) multiple `console` APIs.\r\n### Cons\r\n* Requires code changes to opt-in.\r\n* Requires more boilerplate for simple logging use cases.\r\n",
  "closed_by": null
}
