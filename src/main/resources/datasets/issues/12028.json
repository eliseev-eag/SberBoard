{
  "url": "https://api.github.com/repos/facebook/react/issues/12028",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12028/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12028/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12028/events",
  "html_url": "https://github.com/facebook/react/pull/12028",
  "id": 289075252,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MTYzMzAxNjU4",
  "number": 12028,
  "title": "RFC 6: Deprecate unsafe lifecycles",
  "user": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2018-01-16T22:17:26Z",
  "updated_at": "2018-03-14T17:03:17Z",
  "closed_at": "2018-01-19T17:36:47Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/12028",
    "html_url": "https://github.com/facebook/react/pull/12028",
    "diff_url": "https://github.com/facebook/react/pull/12028.diff",
    "patch_url": "https://github.com/facebook/react/pull/12028.patch"
  },
  "body": "This codemod corresponds with reactjs/rfcs/pull/6, reactjs/react-codemod/pull/195, and #12036.\r\n\r\n### Proposed Release Plan\r\n* **16.3**: Add new lifecycles.\r\n* **16.4**: Warn about old lifecycles being deprecated. (Enable `warnAboutDeprecatedLifecycles` feature flag).\r\n* **17.0**: Remove deprecated lifecycles.\r\n\r\nThe minor version numbers for 16 are just examples. The main point is to note that we plan to release this change over two minor updates, to give libraries a chance to update without noisy deprecation warnings.\r\n\r\n### Differences from RFC\r\nThis proposal differs from the original RFC in a couple of ways. I have updated the RFC to reflect these changes, but they are also listed below:\r\n- [x] `getDerivedStateFromNextProps` has been renamed to `getDerivedStateFromProps` ([reactjs/rfcs/pull/6/commits/8f6c20e](https://github.com/reactjs/rfcs/pull/6/commits/8f6c20edd98f16ecc7395b83332944d1757590a4))\r\n- [x] `getDerivedStateFromProps` will be called after instantiation. In this case, `prevState` will either be `null` _or_ the value set in the constructor. Any state returned from `getDerivedStateFromProps` will be merged into the previous state, overriding it. ([reactjs/rfcs/pull/6/commits/e05e317](https://github.com/reactjs/rfcs/pull/6/commits/e05e317f8a293459273a162e92635807e7598b53))\r\n- [x] `getDerivedStateFromProps` will not accept a `prevProps` parameter. Its signature will be: `static getDerivedStateFromProps(props: Props, prevState: State | null): PartialState | null` ([reactjs/rfcs/pull/6/commits/e05e317](https://github.com/reactjs/rfcs/pull/6/commits/e05e317f8a293459273a162e92635807e7598b53))\r\n- [x] The `unsafe_*` prefix will actually be `UNSAFE_*` (capitalized) to make it more noticeable. ([reactjs/rfcs/pull/6/commits/7042a2a](https://github.com/reactjs/rfcs/pull/6/commits/7042a2abcbdc90b4a7784ea6a753ce9abac169d9))\r\n\r\n### Open Questions\r\n- [x] Is it okay that some inline comments (eg [here](https://github.com/facebook/react/blob/4f309f86df3d5eea452f7c1651bc9903cbee021a/packages/react-reconciler/src/ReactFiberBeginWork.js#L223)) and strings (eg [here](https://github.com/facebook/react/blob/4f309f86df3d5eea452f7c1651bc9903cbee021a/packages/react-reconciler/src/ReactDebugFiberPerf.js#L25) and [here](https://github.com/facebook/react/blob/4f309f86df3d5eea452f7c1651bc9903cbee021a/packages/react-dom/src/__tests__/ReactMultiChild-test.js#L334)) still refer to the old lifecycle names:\r\n**Decision**: Yes. These can be incrementally replaced if necessary.\r\n- [x] Should `startPhaseTimer` calls use new lifecycle prefix?\r\n**Decision**: No, the old names are okay.\r\n- [x] Should invariants referencing the old lifecycle name (sans prefix) be updated?\r\n**Tentative decision**: No. The meaning of these messages is clear enough that this is not worth the pain it would cause WRT white-listing.\r\n- [x] Is it worth releasing an update to `create-react-class/factory` so:\r\nIt's aware of the new lifecyle methods?\r\n**Tentative decision**: Yes. This is fairly low-effort and worth the cost to keep `create-react-class` working. (PR #12036)\r\n- [x] Should we release an update to 15 with the new `UNSAFE_*` lifecycle hooks as well?\r\n**Decision**: No. Instead, we will release a backwards-compatible polyfill for library authors. (See [reactjs/react-lifecycles-compat](https://github.com/reactjs/react-lifecycles-compat).)\r\n\r\n### Remaining Work\r\n- [x] Invoke either either old lifecycles or new unsafe_* ones (e709e30)\r\n- [x] Add deprecation warnings for old lifecycle names (e709e30)\r\n- [x] Create codemod (reactjs/react-codemod/pull/195) and rename lifecycles (28a0e4b, f0e6f62, d9e0d48)\r\n- [x] Update `NativeMethodsMixin` with new lifecycle hooks (8679926)\r\n- [x] Manually audit repo and update comments and inline strings\r\n- [x] Rename `unsafe_` to uppercase `UNSAFE_`. (8d0e001)\r\n- [x] Implement new `static getDerivedStateFromProps` method.\r\n  - [x] For server-side rendering (5d51854, 035c220)\r\n  - [x] For shallow renderer (1047182)\r\n  - [x] For all other renderers via `ReactFiberClassComponent` (b71ca93)\r\n- [x] Verify we have new test coverage for all of the following:\r\n  - [x] Ensure the old lifecycles are invoked and log the correct warnings (5d51854, 035c220, 1047182, b71ca93)\r\n  - [x] Cover the new `static getDerivedStateFromProps` method (5d51854, 035c220, 1047182, b71ca93)\r\n  - [x] Verify that we warn about misspelled `UNSAFE_componentWillReceiveProps` (09c39d0)\r\n  - [x] gDSFP works for `createReactClass` components (286df77, 68f2fe7)\r\n- [x] Add DEV warning to functional components that define a static `getDerivedStateFromProps ` method (re [this comment](https://github.com/reactjs/rfcs/pull/6#issuecomment-358214670)). (b699543)\r\n- [x] Put lifecycle deprecation warnings behind a feature flag. (This will enable us to do a minor release that adds the new UNSAFE_* methods, but without any warnings, giving the ecosystem time to upgrade without noise.) (2d9f75d)\r\n\r\n### Follow Up Work\r\n- [x] #12044: Coalesce warnings for deprecated lifecycle hooks and print single message after reconciliation (rather than one per component-type)\r\n- [x] #12046: Update `debugRenderPhaseSideEffects` behavior.\r\n- [x] Write reactjs.org blog posts:\r\n  - [x] #12047: For 16.3: Letting people know how to prepare for upcoming 16.4 release\r\n    * App developers should run codemod.\r\n    * Library maintainers should move code to `render`.\r\n  - [x] #12048: For 16.4+: Show examples of how to use the new API, pointing out tricky things to avoid (eg `setTimeout` calls to `setState`), etc.",
  "closed_by": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  }
}
