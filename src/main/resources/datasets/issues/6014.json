{
  "url": "https://api.github.com/repos/facebook/react/issues/6014",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6014/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6014/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6014/events",
  "html_url": "https://github.com/facebook/react/issues/6014",
  "id": 132732193,
  "node_id": "MDU6SXNzdWUxMzI3MzIxOTM=",
  "number": 6014,
  "title": "Input re-render does not happen as expected when value is null",
  "user": {
    "login": "mrozbarry",
    "id": 566486,
    "node_id": "MDQ6VXNlcjU2NjQ4Ng==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/566486?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mrozbarry",
    "html_url": "https://github.com/mrozbarry",
    "followers_url": "https://api.github.com/users/mrozbarry/followers",
    "following_url": "https://api.github.com/users/mrozbarry/following{/other_user}",
    "gists_url": "https://api.github.com/users/mrozbarry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mrozbarry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mrozbarry/subscriptions",
    "organizations_url": "https://api.github.com/users/mrozbarry/orgs",
    "repos_url": "https://api.github.com/users/mrozbarry/repos",
    "events_url": "https://api.github.com/users/mrozbarry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mrozbarry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2016-02-10T15:34:24Z",
  "updated_at": "2016-02-10T16:05:34Z",
  "closed_at": "2016-02-10T15:52:05Z",
  "author_association": "NONE",
  "body": "I'm building an app that has a series of single-character text inputs that auto advances as you input.  This app syncs data with our servers, and each input can only be one of a list of characters or null.  Here is a minimal demo to illustrate what's happening:\n\n```\nconst CLEARED_VALUE = null\n\nconst Component = React.createComponent({\n  getInitialState: function () {\n    return {\n      myInputValue: CLEARED_VALUE\n    }\n  },\n\n  validateInput: function (value) {\n    return value === '' || !!value.match(/[0-9]/g)\n  },\n\n  getStorableValue: function (value) {\n    if (value === '') return CLEARED_VALUE\n    return value\n  },\n\n  onChange: function (e) {\n    console.log('onChange event fired')\n    if (this.validateInput(e.target.value)) {\n      console.log(' - onChange event accepted')\n      this.setState({myInputValue: this.getStorableValue(e.target.value)})\n    } else {\n      console.log(' - onChange event rejected')\n      e.preventDefault()\n    }\n  },\n\n  render: function () {\n    return (\n      <input\n        type='text'\n        minLength={ 0 }\n        maxLength={ 1 }\n        value={ this.state.myInputValue }\n        onChange={ this.onChange }\n        />,\n    )\n  }\n})\n```\n\nNotice when you clear the field then type anything (valid or not), onChange is not fired.  I suspect this has something to do with `value={ null }` is the culprit, since it tells React that the component isn't controlled so it doesn't know to re-render after input to correct from what's in state.  Changing `CLEARED_VALUE` to an empty string corrects this issue.\n\nThe issue here is I really don't want to have to convert nulls to empty strings, since data from the server will have nulls in it intentionally.  Obviously, there is nothing stopping me from doing:\n\n```\ngetInputValue: function () {\n  if (this.state.myInputValue === null) return ''\n  return this.state.myInputValue\n}\n\n// ...\n\nreturn (\n  <input value={ this.getInputValue() } />\n)\n```\n\nIs there any other workarounds or discussion about how we tell an input element that it is controlled?  Avoiding constant '' <-> null conversion would be the ideal situation here, since there are a lot of moving parts in the app that may have to do this a few times per render.\n\nThis is definitely an edge case, because if this were a multicharacter input that had validation, the second character would kick off validation and all would be good.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
