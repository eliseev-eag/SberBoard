{
  "url": "https://api.github.com/repos/facebook/react/issues/13381",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13381/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13381/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13381/events",
  "html_url": "https://github.com/facebook/react/issues/13381",
  "id": 350010652,
  "node_id": "MDU6SXNzdWUzNTAwMTA2NTI=",
  "number": 13381,
  "title": "React.cloneElement cannot remove existing props",
  "user": {
    "login": "tokland",
    "id": 24643,
    "node_id": "MDQ6VXNlcjI0NjQz",
    "avatar_url": "https://avatars2.githubusercontent.com/u/24643?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tokland",
    "html_url": "https://github.com/tokland",
    "followers_url": "https://api.github.com/users/tokland/followers",
    "following_url": "https://api.github.com/users/tokland/following{/other_user}",
    "gists_url": "https://api.github.com/users/tokland/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tokland/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tokland/subscriptions",
    "organizations_url": "https://api.github.com/users/tokland/orgs",
    "repos_url": "https://api.github.com/users/tokland/repos",
    "events_url": "https://api.github.com/users/tokland/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tokland/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 139653724,
      "node_id": "MDU6TGFiZWwxMzk2NTM3MjQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Core%20Utilities",
      "name": "Component: Core Utilities",
      "color": "c5def5",
      "default": false
    },
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-08-13T12:34:23Z",
  "updated_at": "2019-09-16T10:37:02Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nA feature.\r\n\r\n**What is the current behavior?**\r\n\r\nWhen an element is cloned with [React.cloneElement](https://reactjs.org/docs/react-api.html#cloneelement), it's possible to add new props or modify existing ones, but not to remove existing props. \r\n\r\n[Relevant code](https://github.com/facebook/react/blob/v16.8.0-alpha.1/packages/react/src/ReactElement.js#L333).\r\n\r\nExample of how it works right now:\r\n\r\n```\r\nconst element = React.createElement(\"a\", {href: \"http://github.com\"});\r\nconst newElement = React.cloneElement(element, {href: undefined});\r\nconsole.log(newElement.props); // {href: undefined}\r\n```\r\n\r\n**What is the desired behavior?**\r\n\r\nIt would be great to add some way to remove props (passing `undefined` as value?):\r\n\r\n```\r\nconst element = React.createElement(\"a\", {href: \"http://github.com\"});\r\nconst newElement = React.cloneElement(element, {href: undefined});\r\nconsole.log(newElement.props); // {}\r\n```\r\n\r\nI guess I could use directly `React.createElement` but, AFAIK, I'll have also to worry about special attributes like `key` and `ref`. I'd rather not mess with internals.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nI think it has worked this way in all React versions.\r\n\r\n**What's your use case?**\r\n\r\nI am applying a map transformation of elements recursively and I need to remove some virtual props before passing the real elements for React to render.  Console shows `React does not recognize the [unknownProp] prop on a DOM element` for those props, I'd want to avoid that.",
  "closed_by": null
}
