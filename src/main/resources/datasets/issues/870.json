{
  "url": "https://api.github.com/repos/facebook/react/issues/870",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/870/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/870/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/870/events",
  "html_url": "https://github.com/facebook/react/pull/870",
  "id": 25467527,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MTE0MzY0NzU=",
  "number": 870,
  "title": "Fix iframe reloading when moved",
  "user": {
    "login": "syranide",
    "id": 1714255,
    "node_id": "MDQ6VXNlcjE3MTQyNTU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/syranide",
    "html_url": "https://github.com/syranide",
    "followers_url": "https://api.github.com/users/syranide/followers",
    "following_url": "https://api.github.com/users/syranide/following{/other_user}",
    "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
    "organizations_url": "https://api.github.com/users/syranide/orgs",
    "repos_url": "https://api.github.com/users/syranide/repos",
    "events_url": "https://api.github.com/users/syranide/events{/privacy}",
    "received_events_url": "https://api.github.com/users/syranide/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    },
    {
      "id": 332720629,
      "node_id": "MDU6TGFiZWwzMzI3MjA2Mjk=",
      "url": "https://api.github.com/repos/facebook/react/labels/HTML",
      "name": "HTML",
      "color": "f7c6c7",
      "default": false
    },
    {
      "id": 347968397,
      "node_id": "MDU6TGFiZWwzNDc5NjgzOTc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Unsolved",
      "name": "Resolution: Unsolved",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 23,
  "created_at": "2014-01-12T18:50:34Z",
  "updated_at": "2016-03-26T17:48:13Z",
  "closed_at": "2016-03-26T17:48:06Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/870",
    "html_url": "https://github.com/facebook/react/pull/870",
    "diff_url": "https://github.com/facebook/react/pull/870.diff",
    "patch_url": "https://github.com/facebook/react/pull/870.patch"
  },
  "body": "https://github.com/facebook/react/issues/858\n\nMy implementation automatically detect any \"immovable\" descendant nodes (`iframe`, `object` and `embed`) inside `DOMChildrenOperations` and then perform a strategy where it pre-shifts these immovable DOM nodes into place before proceeding with the regular updates. If there are no immovable DOM nodes then this has virtually zero cost.\n\nIt uses `getElementsByTagName` to achieve this magic, and contrary to what one might suspect, it is _crazy fast_. http://jsperf.com/queryselectorall-vs-getelementsbytagname/83 It's so fast that it's certainly faster than propagating and checking attributes on nodes.\n\n**You can see it in action here:**\nhttp://dev.cetrez.com/jsx/2/index2.html (no longer online)\n\nThis PR solves the `iframe` issue as far as is physically possible, stopping only short of being able to have iframes swap places (which is _impossible_). So iframes are actually useful now in React, at (what should be) virtually zero cost!\n\n---\n\nI should perhaps also mention that I would personally find it _very useful_ to have this fixed (be it this PR or any other), as I require `iframe` support for the editor at work. It's fixed in place, but there may be changes in the structure outside of the editor that would cause it to reload. Also, most `contentEditable` editors use iframes to isolate themselves, so this should find some quite universal usefulness.\n\n---\n\n**PS.** I tried benchmarking it with `react-bench`, but it's beyond useless as I can get up to ~30% _consistent_ perf diff, while benchmarking with the same React-library.\n\n---\n\n```\n   raw     gz Compared to master @ 3d47177596e9782de36a5cd7065e01c69897b2bb\n     =      = build/JSXTransformer.js\n +6240  +1561 build/react-with-addons.js\n  +771   +268 build/react-with-addons.min.js\n +6240  +1570 build/react.js\n  +771   +275 build/react.min.js\n```\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
