{
  "url": "https://api.github.com/repos/facebook/react/issues/16619",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16619/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16619/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16619/events",
  "html_url": "https://github.com/facebook/react/issues/16619",
  "id": 487442458,
  "node_id": "MDU6SXNzdWU0ODc0NDI0NTg=",
  "number": 16619,
  "title": "Better support for internal use of forwardRef",
  "user": {
    "login": "MilosRasic",
    "id": 533052,
    "node_id": "MDQ6VXNlcjUzMzA1Mg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/533052?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MilosRasic",
    "html_url": "https://github.com/MilosRasic",
    "followers_url": "https://api.github.com/users/MilosRasic/followers",
    "following_url": "https://api.github.com/users/MilosRasic/following{/other_user}",
    "gists_url": "https://api.github.com/users/MilosRasic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MilosRasic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MilosRasic/subscriptions",
    "organizations_url": "https://api.github.com/users/MilosRasic/orgs",
    "repos_url": "https://api.github.com/users/MilosRasic/repos",
    "events_url": "https://api.github.com/users/MilosRasic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MilosRasic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-08-30T11:51:30Z",
  "updated_at": "2019-09-09T15:35:20Z",
  "closed_at": "2019-09-09T15:35:20Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nNot sure. The core of the issue is `React.forwardRef` passing `null` as `ref` argument to the wrapped component if the parent component doesn't pass a ref. `undefined` would be better in this case, but there might be a reason to pass `null` that I'm not aware of, so I'm not comfortable calling this a bug.\r\n\r\n**What is the current behavior?**\r\n\r\nGiven:\r\n```javascript\r\nexport default React.forwardRef((props, ref) => <MyComponent innerRef={ref} {...props} />);\r\n```\r\n\r\n`MyComponent` will receive `null` as `ref` argument when a parent component doesn't pass a ref. Leaving aside that `undefined` better represent the fact that something was not passed than `null`, this also makes it impossible to use the forwarded ref internally in `MyComponent` because it will be `null` and we cannot reassign the prop.\r\n\r\nI've been able to work around this using the following solution (excuse my classyness please, shouldn't matter much for the example):\r\n```javascript\r\nclass MyComponent extends React.Component {\r\n\tel = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.el.current) {\r\n\t\t\tthis.el = this.props.innerRef;\r\n\t\t}\r\n\r\n\t\tif (!this.el.current) return;\r\n\r\n\t\t// bind event handlers to this.el\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst childRef = this.props.innerRef || this.el;\r\n\r\n\t\treturn <button ref={childRef}>Look at my button</button>;\r\n\t}\r\n}\r\n```\r\n\r\nWhile the above works, it's not the nicest piece of code and there's code in two places in order to support adapting to the case when parent doesn't pass a ref.\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nNot only is `undefined` a less surprising value for `ref` argument when no ref is passed by the parent, but I think it would also allow us to use `defaultProps` to make a new ref the default when nothing is passed in. My initial attempt was something like:\r\n```javascript\r\nclass MyComponent extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\tinnerRef: React.createRef(),\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.innerRef.current) return;\r\n\r\n\t\t// bind event handlers to this.innerRef.current\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <button ref={innerRef}>Look at my button</button>;\r\n\t}\r\n}\r\n```\r\nbut it didn't work because `innerRef` is `null`.\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.9.0\r\nChrome 76.0.3809.132 on Linux\r\nDidn't try with older versions of React or in other browsers.\r\n",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
