{
  "url": "https://api.github.com/repos/facebook/react/issues/11410",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/11410/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/11410/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/11410/events",
  "html_url": "https://github.com/facebook/react/pull/11410",
  "id": 269979726,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ5ODAxODIy",
  "number": 11410,
  "title": "Support iframes (nested browsing contexts) in selection event handling for React 16",
  "user": {
    "login": "acusti",
    "id": 517889,
    "node_id": "MDQ6VXNlcjUxNzg4OQ==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/517889?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acusti",
    "html_url": "https://github.com/acusti",
    "followers_url": "https://api.github.com/users/acusti/followers",
    "following_url": "https://api.github.com/users/acusti/following{/other_user}",
    "gists_url": "https://api.github.com/users/acusti/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acusti/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acusti/subscriptions",
    "organizations_url": "https://api.github.com/users/acusti/orgs",
    "repos_url": "https://api.github.com/users/acusti/repos",
    "events_url": "https://api.github.com/users/acusti/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acusti/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2017-10-31T14:29:23Z",
  "updated_at": "2017-12-14T15:02:23Z",
  "closed_at": "2017-11-02T23:32:06Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/11410",
    "html_url": "https://github.com/facebook/react/pull/11410",
    "diff_url": "https://github.com/facebook/react/pull/11410.diff",
    "patch_url": "https://github.com/facebook/react/pull/11410.patch"
  },
  "body": "Fixes #427\r\n\r\nAs promised in https://github.com/facebook/react/pull/9184#issuecomment-323630820, here’s a version of #9184 that is based on React 16 and entirely removes the React input selection restoration plugin (other versions of this work include #7866 and #7936).\r\n\r\n@nhunzaker was most recently active in the latest previous PR and had mentioned wanting to look into the React input selection restoration logic. I’m not sure how far he was able to get with that, but I’d love to know anything discovered! We are currently QAing the built version of the work in this PR to verify it for our own uses, but a quick initial pass was promising. As mentioned elsewhere, making the React input selection restoration logic work across nested browsing contexts broke regular text input blur as of Chrome 60, so I tried removing the whole plugin, and everything worked beautifully. I don’t know React’s official policy on browser support, but so far, in the latest 2 versions of every browser we’ve tested, there seem to be no regressions from removing that plugin. According to the comments in the file:\r\n\r\n> If any selection information was potentially lost, restore it. This is useful when performing operations that could remove dom nodes and place them back in, resulting in focus being lost.\r\n\r\nThe best way to test if the plugin is still needing would of course be to set up a component that can have selections and then cause a render that would result in it being removed and then placed back in within that single render transaction, but I don’t know how to make that happen, nor do I know if that is in fact still possible with React fiber.\r\n\r\nFor anyone who wants to test these changes out in their own project, you can do so by updating the `react` and `react-dom` dependencies in your `package.json` to:\r\n\r\n```json\r\n    \"react\": \"brandcast/react-built#7c8fc6b\",\r\n    \"react-dom\": \"brandcast/react-dom-built#017534a\",\r\n```\r\n\r\nIf you’re also using draft.js and want the full latest and greatest cross-iframe experience, use:\r\n\r\n```json\r\n    \"draft-js\": \"brandcast/draft-js-built#003f24b\",\r\n```\r\n",
  "closed_by": {
    "login": "acusti",
    "id": 517889,
    "node_id": "MDQ6VXNlcjUxNzg4OQ==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/517889?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acusti",
    "html_url": "https://github.com/acusti",
    "followers_url": "https://api.github.com/users/acusti/followers",
    "following_url": "https://api.github.com/users/acusti/following{/other_user}",
    "gists_url": "https://api.github.com/users/acusti/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acusti/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acusti/subscriptions",
    "organizations_url": "https://api.github.com/users/acusti/orgs",
    "repos_url": "https://api.github.com/users/acusti/repos",
    "events_url": "https://api.github.com/users/acusti/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acusti/received_events",
    "type": "User",
    "site_admin": false
  }
}
