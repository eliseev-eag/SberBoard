{
  "url": "https://api.github.com/repos/facebook/react/issues/16945",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16945/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16945/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16945/events",
  "html_url": "https://github.com/facebook/react/pull/16945",
  "id": 499805440,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MzIyNDM1OTAy",
  "number": 16945,
  "title": "Client render Suspense content if there's no boundary match",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-09-28T18:31:36Z",
  "updated_at": "2019-09-29T09:07:16Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/16945",
    "html_url": "https://github.com/facebook/react/pull/16945",
    "diff_url": "https://github.com/facebook/react/pull/16945.diff",
    "patch_url": "https://github.com/facebook/react/pull/16945.patch"
  },
  "body": "Without the `enableSuspenseServerRenderer` flag there will never be a boundary match. Also when it is enabled, there might not be a boundary match if something was conditionally rendered by mistake.\r\n\r\nWith this PR it will now client render the content of a Suspense boundary in that case and issue a DEV only hydration warning. This is the only sound semantics for this case.\r\n\r\nUnfortunately, landing this will once again break #16938. It will be less bad though because at least it'll just work by client rendering the content instead of hydrating and issue a DEV only warning.\r\n\r\nHowever, we must land this before enabling the `enableSuspenseServerRenderer` flag since it does this anyway.\r\n\r\nI did notice that we special case `fallback={undefined}` due to our unfortunate semantics for that. So technically a workaround that works is actually setting the fallback to undefined on the server and during hydration. Then flip it on only after hydration. That could be a workaround if you want to be able to have a Suspense boundary work only after hydration for some reason.\r\n\r\nIt's kind of unfortunate but at least those semantics are internally consistent. So I added a test for that.\r\n\r\ncc @Timer @timneutkens",
  "closed_by": null
}
