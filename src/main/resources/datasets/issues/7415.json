{
  "url": "https://api.github.com/repos/facebook/react/issues/7415",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7415/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7415/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7415/events",
  "html_url": "https://github.com/facebook/react/issues/7415",
  "id": 169199362,
  "node_id": "MDU6SXNzdWUxNjkxOTkzNjI=",
  "number": 7415,
  "title": "Freeze classes and defaultProps in DEV mode",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 139653724,
      "node_id": "MDU6TGFiZWwxMzk2NTM3MjQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Core%20Utilities",
      "name": "Component: Core Utilities",
      "color": "c5def5",
      "default": false
    },
    {
      "id": 40929153,
      "node_id": "MDU6TGFiZWw0MDkyOTE1Mw==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Enhancement",
      "name": "Type: Enhancement",
      "color": "84b6eb",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2016-08-03T18:23:45Z",
  "updated_at": "2017-10-04T12:13:39Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "body": "To make compiler optimizations around classes and inlining defaultProps we need to know that they don't get mutated. This escape analysis can be difficult to do in a JS compiler so we should start enforce it so we don't have to rely on escape analysis.\n\n``` js\nconst type = element.type;\nif (typeof type === 'function' && !type.wasTaggedReactComponent) {\n  Object.defineProperty(type, 'wasTaggedReactComponent', { value: true });\n  Object.defineProperty(type, 'defaultProps', { writable: false, configurable: false });\n  Object.defineProperty(type.prototype, 'render', { writable: false, configurable: false });\n  Object.defineProperty(type.prototype, 'componentDidUpdate', { writable: false, configurable: false });\n  ...\n  Object.freeze(type);\n  Object.freeze(type.defaultProps);\n  Object.freeze(type.prototype);\n}\n```\n\nWe can also make them getters/setters so that we can make nice warning messages for sets. Although we should weigh this against slowing down DEV mode.\n\nIf a property exists it should preserve its enumerability. If a property doesn't exist it is still ok to attach a getter/setter as long as it is non-enumerable.\n",
  "closed_by": null
}
