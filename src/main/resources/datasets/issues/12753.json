{
  "url": "https://api.github.com/repos/facebook/react/issues/12753",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12753/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12753/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12753/events",
  "html_url": "https://github.com/facebook/react/issues/12753",
  "id": 320676526,
  "node_id": "MDU6SXNzdWUzMjA2NzY1MjY=",
  "number": 12753,
  "title": "Expose a way of creating a ReactTestInstance for React DOM nodes",
  "user": {
    "login": "petegleeson",
    "id": 1969329,
    "node_id": "MDQ6VXNlcjE5NjkzMjk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1969329?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/petegleeson",
    "html_url": "https://github.com/petegleeson",
    "followers_url": "https://api.github.com/users/petegleeson/followers",
    "following_url": "https://api.github.com/users/petegleeson/following{/other_user}",
    "gists_url": "https://api.github.com/users/petegleeson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/petegleeson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/petegleeson/subscriptions",
    "organizations_url": "https://api.github.com/users/petegleeson/orgs",
    "repos_url": "https://api.github.com/users/petegleeson/repos",
    "events_url": "https://api.github.com/users/petegleeson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/petegleeson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-05-07T05:18:39Z",
  "updated_at": "2018-08-07T01:16:01Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nI would like to request a new feature. \r\n\r\n**What is the current behavior?**\r\nAt the moment there is no way to create an instance of a `ReactTestInstance`. I would love to be able to do something like:\r\n\r\n```js\r\nconst div = document.createElement('div');\r\nconst componentRef = ReactDOM.render(<MyComponentUnderTest />, div); // or renderIntoDocument\r\nconst testInstance = new ReactTestInstance(componentRef);\r\n// now I can run queries using the API of ReactTestInstance\r\n// against a component tree that has been fully DOM rendered\r\ntestInstance.findAll(..)\r\ntestInstance.children.forEach(() => {});\r\ntestInstance.parent\r\n```\r\n\r\n**Why?**\r\nLibraries such as [Enzyme](https://github.com/airbnb/enzyme) can be used to test React components by [full DOM rendering](http://airbnb.io/enzyme/docs/api/mount.html) and providing an API to find components and get information about them.\r\n\r\nAs far as I know, there is no way of querying the component tree created by `ReactDOM.render` without relying on the internals of React nodes. This means that Enzyme, in order to support full DOM rendering and it's querying API, it has to interact with React nodes directly. This reliance causes problems in Enzyme whenever React adds a new node type (forwardRef, ContextProvider/Consumer for example).\r\n\r\nI have started [this RFC](https://github.com/airbnb/enzyme/issues/1648) that proposes that Enzyme uses `ReactTestWrapper` from `react-test-renderer` as a layer on top of React node objects. This allows the library to be decoupled from the internals of React. The solution proposed in the RFC relies on the being able to create a `ReactTestInstance` from a `ReactDOM.render` component tree.\r\n\r\nPlease let me know if this is something you would consider ðŸ˜„ ",
  "closed_by": null
}
