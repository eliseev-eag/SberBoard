{
  "url": "https://api.github.com/repos/facebook/react/issues/3236",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3236/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3236/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3236/events",
  "html_url": "https://github.com/facebook/react/issues/3236",
  "id": 58548187,
  "node_id": "MDU6SXNzdWU1ODU0ODE4Nw==",
  "number": 3236,
  "title": "Deprecate replaceState",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 739777675,
      "node_id": "MDU6TGFiZWw3Mzk3Nzc2NzU=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Component%20API",
      "name": "Component: Component API",
      "color": "d4c5f9",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 25,
  "created_at": "2015-02-23T06:35:56Z",
  "updated_at": "2018-03-08T23:20:56Z",
  "closed_at": "2018-03-08T23:20:56Z",
  "author_association": "MEMBER",
  "body": "The use cases for replaceState seems to fit one of these patterns:\n\n1) Let state temporarily be null until some data is fetched. Then reset it to null using replaceState at some later point.\n\n2) Use an immutable-js Record to store your state. That way you can use it with cursors and convenience methods like \"update\" and batching.\n\n3) Using immutable-js Map to store your data. \n\n4) Use state as a map. I.e. adding new keys dynamically. `setState({ [someID]: value })`\n\nAll these use cases break down when you need to add another state value which makes refactoring a pain when you thought that you wouldn't need to.\n\nIt also means that mixins can't add state. (I'm not particularly found of this pattern but it is a common one.)\n\nWe could potentially add native support for (2) but it would expand the record type to one that contains all the fields required by mixins.\n\nWe would like to add a warning if you expand the state with fields that are not in the original getInitialState. The reason is that VMs optimize around records that keep their type signature. By changing the type signature dynamically you introduce performance penalties. We can't add that warning if patterns 3-4 is used.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
