{
  "url": "https://api.github.com/repos/facebook/react/issues/7361",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7361/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7361/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7361/events",
  "html_url": "https://github.com/facebook/react/pull/7361",
  "id": 167835686,
  "node_id": "MDExOlB1bGxSZXF1ZXN0NzkwMTA3NDM=",
  "number": 7361,
  "title": "RFC: Inline HTML rendering, replaces dangerouslySetInnerHTML",
  "user": {
    "login": "syranide",
    "id": 1714255,
    "node_id": "MDQ6VXNlcjE3MTQyNTU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/syranide",
    "html_url": "https://github.com/syranide",
    "followers_url": "https://api.github.com/users/syranide/followers",
    "following_url": "https://api.github.com/users/syranide/following{/other_user}",
    "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
    "organizations_url": "https://api.github.com/users/syranide/orgs",
    "repos_url": "https://api.github.com/users/syranide/repos",
    "events_url": "https://api.github.com/users/syranide/events{/privacy}",
    "received_events_url": "https://api.github.com/users/syranide/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    },
    {
      "id": 127893911,
      "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
      "name": "Component: DOM",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2016-07-27T11:52:58Z",
  "updated_at": "2017-10-04T23:09:19Z",
  "closed_at": "2017-10-04T23:09:19Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/7361",
    "html_url": "https://github.com/facebook/react/pull/7361",
    "diff_url": "https://github.com/facebook/react/pull/7361.diff",
    "patch_url": "https://github.com/facebook/react/pull/7361.patch"
  },
  "body": "This is just a proof-of-concept of #6253 to gauge interest, it's a _very shoddy_ implementation, but can quite easily be fixed up if greenlit. It relies on the same concept as ReactDOMTextComponent.\n\nBasically, the idea being to be able to render HTML without having a dedicated wrapping element (and also deprecates the magic `dangerouslySetInnerHTML`). Syntax is up for discussion, but could be anything from `<i>{{__html: ...}}<i>` to `<i>{React.createHTMLFragment(...)}<i>` to `<i><rawhtml>...</rawhtml><i>`, etc.\n\nIs this something we're interested in supporting?\n\nPS. It probably makes a lot of sense to introduce a callback as well, which would provide the opening and closing comment node to the user so that you can interact with the rendered nodes in-between (just like `ref`). This also allows you to render no HTML so that you then have free control over the children inside the open/close comment. You could even imagine that being the only feature we expose and what you render inside is up to you (however, SSR and simplicity would suffer). **EDIT:** We could also easily support an API which takes a list of nodes and appends them the same way, would provide a neater escape hatch for some situations.\n\nSuggested API: `React.createHTMLFragment(markup, callback(openingNode, closingNode))`\n\n---\n\nIn this proof-of-concept PR it uses `<rawhtml html={...} />` just for the sake of simplicity.\n\nhttps://jsfiddle.net/8n2L6yyL/1/ play with it here if you want (you need to go to https://dev.cetrez.com/react/react.js first and allow the invalid certificate).\n\n``` js\nvar Hello = React.createClass({\n    getInitialState() {\n    return {i: 0};\n  },\n\n  componentDidMount() {\n    setInterval(() => {\n        this.setState({i: this.state.i + 1});\n    }, 100);\n  },\n\n  render: function() {\n    return <div>Hello {this.props.name}a<rawhtml html={\"<b>x\"+this.state.i+\"x</b><b>i</b><b>j</b>X\"}/>a{this.state.i}{this.state.i % 2 == 0 ? <u>{this.state.i}</u> : null}<b>{this.state.i}</b></div>;\n  }\n});\n\nReactDOM.render(\n  <Hello name=\"World\" />,\n  document.getElementById('container')\n);\n```\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
