{
  "url": "https://api.github.com/repos/facebook/react/issues/8030",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8030/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8030/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8030/events",
  "html_url": "https://github.com/facebook/react/issues/8030",
  "id": 184426393,
  "node_id": "MDU6SXNzdWUxODQ0MjYzOTM=",
  "number": 8030,
  "title": "Maximum call stack size exceeded in ReactDOMComponent._updateDOMChildren",
  "user": {
    "login": "andersekdahl",
    "id": 163637,
    "node_id": "MDQ6VXNlcjE2MzYzNw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/163637?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/andersekdahl",
    "html_url": "https://github.com/andersekdahl",
    "followers_url": "https://api.github.com/users/andersekdahl/followers",
    "following_url": "https://api.github.com/users/andersekdahl/following{/other_user}",
    "gists_url": "https://api.github.com/users/andersekdahl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/andersekdahl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/andersekdahl/subscriptions",
    "organizations_url": "https://api.github.com/users/andersekdahl/orgs",
    "repos_url": "https://api.github.com/users/andersekdahl/repos",
    "events_url": "https://api.github.com/users/andersekdahl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/andersekdahl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 155984160,
      "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
      "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
      "name": "Status: Unconfirmed",
      "color": "d4c5f9",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "aweary",
      "id": 6886061,
      "node_id": "MDQ6VXNlcjY4ODYwNjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aweary",
      "html_url": "https://github.com/aweary",
      "followers_url": "https://api.github.com/users/aweary/followers",
      "following_url": "https://api.github.com/users/aweary/following{/other_user}",
      "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
      "organizations_url": "https://api.github.com/users/aweary/orgs",
      "repos_url": "https://api.github.com/users/aweary/repos",
      "events_url": "https://api.github.com/users/aweary/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aweary/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2016-10-21T08:21:55Z",
  "updated_at": "2017-04-12T11:06:24Z",
  "closed_at": "2017-03-07T14:17:51Z",
  "author_association": "NONE",
  "body": "First off, I realize that this likely isn't a problem with React but a problem with our application, but I tought I'd open an issue to see if you think it might be a problem in React, or if you could give any pointers on how to dig deeper. Since the call stack only contains React code, there isn't all that much for us to trouble shoot to see if we've messed up.\n\n**Do you want to request a _feature_ or report a _bug_?**\nPossible bug.\n\n**What is the current behavior?**\nWe sometimes get random \"Maximum call stack size exceeded\" errors from a small percentage of our users. It doesn't look like it's related to browser/device as it seems to happen on all types of devices from mobile to tablet to desktop and in Firefox, Chrome, Safari (both iOS and Mac).\n\nThe stack trace doesn't contain any of our code, only React. It looks like this:\n\n``` js\n// at lastProps line 795, column 0 (webpack:///./~/react/lib/ReactDOMComponent.js:795)\n\n      _updateDOMProperties: function (lastProps, nextProps, transaction) { // <-- this line\n        var propKey;\n        var styleName;\n        var styleUpdates;\n\n// at _updateDOMProperties line 758, column 0 // (webpack:///./~/react/lib/ReactDOMComponent.js:758)\n\n\n        assertValidProps(this, nextProps);\n        this._updateDOMProperties(lastProps, nextProps, transaction) // <-- this line\n        this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n        switch (this._tag) {\n\n// at updateComponent line 717, column 0 (webpack:///./~/react/lib/ReactDOMComponent.js:717)\n\n      receiveComponent: function (nextElement, transaction, context) {\n        var prevElement = this._currentElement;\n        this._currentElement = nextElement;\n        this.updateComponent(transaction, prevElement, nextElement, context); // <-- this line\n      },\n\n\n// at receiveComponent line 126, column 0 (webpack:///./~/react/lib/ReactReconciler.js:126)\n\n          ReactRef.detachRefs(internalInstance, prevElement);\n        }\n\n        internalInstance.receiveComponent(nextElement, transaction, context); // <-- this line\n\n        if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n          transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\n// at receiveComponent line 110, column 0 (webpack:///./~/react/lib/ReactChildReconciler.js:110)\n\n        var prevElement = prevChild && prevChild._currentElement;\n        var nextElement = nextChildren[name];\n        if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n          ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context); // <-- this line\n          nextChildren[name] = prevChild;\n        } else {\n          if (prevChild) {\n\n// at updateChildren line 215, column 0 (webpack:///./~/react/lib/ReactMultiChild.js:215)\n\n            }\n          }\n          nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID); // <-- this line\n          return nextChildren;\n        },\n\n\n// at _reconcilerUpdateChildren line 314, column 0 (webpack:///./~/react/lib/ReactMultiChild.js:314)\n\n        var prevChildren = this._renderedChildren;\n        var removedNodes = {};\n        var mountImages = [];\n        var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context); // <-- this line\n        if (!nextChildren && !prevChildren) {\n          return;\n        }\n\n// at _updateChildren line 301, column 0 (webpack:///./~/react/lib/ReactMultiChild.js:301)\n\n        updateChildren: function (nextNestedChildrenElements, transaction, context) {\n          // Hook used by React ART\n          this._updateChildren(nextNestedChildrenElements, transaction, context); // <-- this line\n        },\n\n\n// at updateChildren line 941, column 0 (webpack:///./~/react/lib/ReactDOMComponent.js:941)\n\n            setContentChildForInstrumentation.call(this, null);\n          }\n\n          this.updateChildren(nextChildren, transaction, context); // <-- this line\n        }\n      },\n\n\n// at _updateDOMChildren line 759, column 0 (webpack:///./~/react/lib/ReactDOMComponent.js:759)\n\n\n        assertValidProps(this, nextProps);\n        this._updateDOMProperties(lastProps, nextProps, transaction);\n        this._updateDOMChildren(lastProps, nextProps, transaction, context); // <-- this line\n\n        switch (this._tag) {\n          case 'input':\n```\n\nWe have some pages that are larger than others, but not anyone that have nesting deep enough that it could realistically cause a maximum call stack size exceeded error.\n\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\n15.3.1. Don't know if this is true for other versions, we haven't had any other version deployed.\n\nAny help reagarding this would be much appreciated!\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
