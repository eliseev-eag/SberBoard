{
  "url": "https://api.github.com/repos/facebook/react/issues/7222",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7222/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7222/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7222/events",
  "html_url": "https://github.com/facebook/react/issues/7222",
  "id": 164446546,
  "node_id": "MDU6SXNzdWUxNjQ0NDY1NDY=",
  "number": 7222,
  "title": "firefox hack for `onSelect` is leaky without a noop `onKeyUp`",
  "user": {
    "login": "ianstormtaylor",
    "id": 311752,
    "node_id": "MDQ6VXNlcjMxMTc1Mg==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/311752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ianstormtaylor",
    "html_url": "https://github.com/ianstormtaylor",
    "followers_url": "https://api.github.com/users/ianstormtaylor/followers",
    "following_url": "https://api.github.com/users/ianstormtaylor/following{/other_user}",
    "gists_url": "https://api.github.com/users/ianstormtaylor/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ianstormtaylor/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ianstormtaylor/subscriptions",
    "organizations_url": "https://api.github.com/users/ianstormtaylor/orgs",
    "repos_url": "https://api.github.com/users/ianstormtaylor/repos",
    "events_url": "https://api.github.com/users/ianstormtaylor/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ianstormtaylor/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 52079258,
      "node_id": "MDU6TGFiZWw1MjA3OTI1OA==",
      "url": "https://api.github.com/repos/facebook/react/labels/Difficulty:%20starter",
      "name": "Difficulty: starter",
      "color": "94ce52",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-07-08T02:19:21Z",
  "updated_at": "2016-08-20T04:29:50Z",
  "closed_at": "2016-08-20T01:03:46Z",
  "author_association": "NONE",
  "body": "**Do you want to request a _feature_ or report a _bug_?**\n\nBug.\n\n**What is the current behavior?**\n\nRight now, React provides a cross-browser workaround for the `onSelect` event. [In Firefox, the `selectionchange` event doesn't fire](https://github.com/facebook/react/blob/master/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js#L198-L211), so React hacks around this by evaluating the selection after both `keydown` and `keyup`, which is smart!\n\nHowever, if you haven't added an `onKeyUp` handler to your component, the `keyup` part of the selection listening hack for Firefox won't ever fire. Which means if you happen to be doing something in `onKeyDown` that changes the selection, it won't be caught by `keyup` as expected, such that the next time `keydown` fires, the `onSelect` handler will be triggered (via the `keydown` part of the hack), since React thinks the selection has changed.\n\nExample:\n- You place your cursor at the end of a sentence.\n  - `onSelect` fires thanks to `mouseup`.\n  - `render` updates the selection.\n- You `backspace` the last `.` character:\n  - `onKeyDown` you handle deleting the character, and preventing default.\n  - `onSelect` doesn't fire, because on change hasn't taken place yet, as expected.\n  - `render` updates the selection.\n- You `backspace` another character:\n  - `onKeyDown` you handle deleting another character.\n  - `onSelect` fires thanks to `onkeydown`, but its internal state is comparing it to the selection before it was updated by `render`, so it is out of date. Not expected.\n\nIf you add a noop handler for `onKeyUp`, this problem goes away, since `onSelect` will always fire after rendering thanks to `keyup`, and then it will never fire incorrectly due to `keydown`. \n\nAn example is in Draft.js, [this `onKeyUp` handler](https://github.com/facebook/draft-js/blob/master/src/component/base/DraftEditor.react.js#L268) actually doesn't do anything. Except without, the `onSelect` handling wouldn't stay in sync in Firefox.\n\n**What is the expected behavior?**\n\nIdeally I'd think that the `keyup` event hack would still fire even without having to have the developer add a `onKeyUp` noop to their `contentEditable` component?\n\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\n\nReact 15 in Firefox.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
