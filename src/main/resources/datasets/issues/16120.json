{
  "url": "https://api.github.com/repos/facebook/react/issues/16120",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16120/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16120/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16120/events",
  "html_url": "https://github.com/facebook/react/issues/16120",
  "id": 467322717,
  "node_id": "MDU6SXNzdWU0NjczMjI3MTc=",
  "number": 16120,
  "title": "[react-cache] [Question] Feedback and stale-while-revalidate strategy",
  "user": {
    "login": "nulladdict",
    "id": 26379644,
    "node_id": "MDQ6VXNlcjI2Mzc5NjQ0",
    "avatar_url": "https://avatars1.githubusercontent.com/u/26379644?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nulladdict",
    "html_url": "https://github.com/nulladdict",
    "followers_url": "https://api.github.com/users/nulladdict/followers",
    "following_url": "https://api.github.com/users/nulladdict/following{/other_user}",
    "gists_url": "https://api.github.com/users/nulladdict/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nulladdict/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nulladdict/subscriptions",
    "organizations_url": "https://api.github.com/users/nulladdict/orgs",
    "repos_url": "https://api.github.com/users/nulladdict/repos",
    "events_url": "https://api.github.com/users/nulladdict/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nulladdict/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-07-12T09:46:28Z",
  "updated_at": "2019-09-03T10:51:07Z",
  "closed_at": "2019-09-03T10:51:07Z",
  "author_association": "NONE",
  "body": "First of all, I am aware that `react-cache` package is highly experimental and unstable, but I still would like to experiment and express my thoughts on the subject. (skip to the end for the actual question)\r\n\r\nI've tried using it in several fun projects, and in my experience current version works pretty well with anything static, e.g. resources that need to be loaded only once, or can be loaded once and updated separately.\r\n\r\nHowever, not all resources are like that, and some of them need cache invalidation.  This https://github.com/facebook/react/issues/14783#issuecomment-461860954 mentions that there is no API for invalidation, but you can actually invalidate the resource, using the clever hash function. I've put together a little [demo](https://codesandbox.io/s/react-cache-stale-while-revalidate-startegy-0o9jj).\r\n\r\nThe problem with that approach is that invalidations happens \"soundly\" and will trigger the suspense. \r\n\r\nThis could be solved by busting the cache only after the `preload` of the next entry already happened, but there's unfortunately no way to track the `preload` state of the next entry, since the `preload` method actually doesn't return the promise it called;\r\n\r\nAnother way to go around this issue is to have a side effect inside the async resource, that would cause a re-render when completed, thus giving the ability to invalidate the old entry only after the new entry has been completed;\r\n\r\nLastly thereâ€™s the ability to create a invalidation method, wrapping a `read` method in a try-catch block and have custom logic of resolving with a result / awaiting  a suspender. This however makes the invalidation async, but it's probably fine, since we only need to invalidate the cache after we already have the initial result and can update the result when the invalidation has already happened.\r\n\r\nSince the first approach is basically impossible with current cache package and later two required a lot of custom logic, one would probably be better of writing an entirely custom suspender and cache provider with a required strategy.\r\n\r\nSorry for the long read, thus comes the question:\r\n\r\n**TLDR:** Is `react-cache` being developed and presented as a low-level API for writing custom resource caching logic OR as an example of writing custom suspenders and cache strategies?",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
