{
  "url": "https://api.github.com/repos/facebook/react/issues/11171",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/11171/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/11171/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/11171/events",
  "html_url": "https://github.com/facebook/react/issues/11171",
  "id": 264145756,
  "node_id": "MDU6SXNzdWUyNjQxNDU3NTY=",
  "number": 11171,
  "title": "Should React use requestAnimationFrame by default?",
  "user": {
    "login": "dakom",
    "id": 6406986,
    "node_id": "MDQ6VXNlcjY0MDY5ODY=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6406986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dakom",
    "html_url": "https://github.com/dakom",
    "followers_url": "https://api.github.com/users/dakom/followers",
    "following_url": "https://api.github.com/users/dakom/following{/other_user}",
    "gists_url": "https://api.github.com/users/dakom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dakom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dakom/subscriptions",
    "organizations_url": "https://api.github.com/users/dakom/orgs",
    "repos_url": "https://api.github.com/users/dakom/repos",
    "events_url": "https://api.github.com/users/dakom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dakom/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 127893911,
      "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
      "name": "Component: DOM",
      "color": "fef2c0",
      "default": false
    },
    {
      "id": 739761016,
      "node_id": "MDU6TGFiZWw3Mzk3NjEwMTY=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Reconciler",
      "name": "Component: Reconciler",
      "color": "f9a798",
      "default": false
    },
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 37,
  "created_at": "2017-10-10T08:47:25Z",
  "updated_at": "2018-11-07T16:00:53Z",
  "closed_at": "2018-08-30T14:02:33Z",
  "author_association": "NONE",
  "body": "Consider the following sample code: (pasted [here too](https://gist.github.com/dakom/e68503e59c7a73c3bc926b7e8ae65a07))\r\n\r\n```\r\nclass extends React.Component {\r\n    private canRender: boolean = false;\r\n    private latestData: any;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let nJobs = 0;\r\n        let lastRenderTime: number;\r\n        props.someObservableThing.listen(data => {\r\n            nJobs++;\r\n\r\n            this.latestData = data;\r\n\r\n            if (this.canRender) {\r\n                const now = performance.now();\r\n                this.canRender = false;\r\n                this.setState({\r\n                    data: this.latestData,\r\n                    jobsPerRender: nJobs,\r\n                    fps: (lastRenderTime === undefined) ? 0 : 1000 / (now - lastRenderTime)\r\n                });\r\n                nJobs = 0;\r\n                lastRenderTime = now;\r\n            }\r\n        });\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    /* Lifecycle */\r\n    componentDidMount() {\r\n        this.canRender = true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.canRender = true;\r\n    }\r\n\r\n    render() {\r\n        outputStats(this.state);\r\n        return this.state.data === undefined ? null : <View {...this.state.data} />\r\n    }\r\n}\r\n```\r\n\r\nWhen outputStats is hit - I'm getting framerates of like 2000fps. In other words `requestAnimationFrame` does _not_ seem to be a limiter for react itself.\r\n\r\nIs this correct? \r\n\r\n(as a slightly separate topic- if that is true, for animation things do you think it would be good to simply wrap the `if (this.canRender) {}` block in a `requestAnimationFrame()`? I guess that's not really a React question though since the observableThing could also be capped via ticks...)\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
