{
  "url": "https://api.github.com/repos/facebook/react/issues/12924",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12924/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12924/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12924/events",
  "html_url": "https://github.com/facebook/react/issues/12924",
  "id": 327237077,
  "node_id": "MDU6SXNzdWUzMjcyMzcwNzc=",
  "number": 12924,
  "title": "Keep using legacy Context API - or how to achieve this with new API",
  "user": {
    "login": "Twisterking",
    "id": 4247268,
    "node_id": "MDQ6VXNlcjQyNDcyNjg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/4247268?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Twisterking",
    "html_url": "https://github.com/Twisterking",
    "followers_url": "https://api.github.com/users/Twisterking/followers",
    "following_url": "https://api.github.com/users/Twisterking/following{/other_user}",
    "gists_url": "https://api.github.com/users/Twisterking/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Twisterking/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Twisterking/subscriptions",
    "organizations_url": "https://api.github.com/users/Twisterking/orgs",
    "repos_url": "https://api.github.com/users/Twisterking/repos",
    "events_url": "https://api.github.com/users/Twisterking/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Twisterking/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-05-29T09:22:53Z",
  "updated_at": "2018-05-29T10:03:26Z",
  "closed_at": "2018-05-29T10:03:25Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nmore like a feature.\r\n\r\n**What is the current behavior?**\r\n\r\nSo I am currently using the legacy context api very heavily.\r\nA typical \"component tree\" in my app might look a bit like this:\r\n```js\r\n<App>\r\n  <Component1> // provides 3 Objects via context all children might need at some point\r\n    <Component2> // might need one of the 3 Objects passed via context\r\n      <Foo> // additionally provides 2 Functions via context\r\n        <SomeList> // needs some Objects from <Component1>\r\n          <ListItem>\r\n            <SomeChild> // needs both functions from <Foo> and maybe some Objects from <Component1>\r\n              // ... and so on and so forth - you get the idea\r\n            </SomeChild>\r\n          </ListItem>\r\n        </SomeList>\r\n      </Foo>\r\n    </Component2>\r\n  </Component1>\r\n</App>\r\n```\r\n\r\nSo I Have a heavily nested component tree, where I use context all the time to pass functions, booleans, objects or whatever without having to use props all the time - I am trying to avoid \"prop drilling\" as much as possible.\r\n\r\nAdditionally, some of these context vars might be set in lifecycle methods after a first render or maybe after some HOC provided some data. It is basically all over the place.\r\n\r\n**What is the expected behavior?**\r\n\r\nMy question now is: I can't see any **proper** solution to achieve all this with the next context api. It will be a huge pain in the a** to achieve it and make some of my code completely unreadable.\r\n\r\nIs there any way to keep using the legacy context api? Maybe the React team could provide a extra package for that? Or maybe someone has a better idea on how to achieve this without having pretty bad prop drilling all over the place.\r\n\r\nLooking forward to your answers! best, Patrick\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
