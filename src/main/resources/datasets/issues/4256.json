{
  "url": "https://api.github.com/repos/facebook/react/issues/4256",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4256/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4256/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4256/events",
  "html_url": "https://github.com/facebook/react/issues/4256",
  "id": 92062143,
  "node_id": "MDU6SXNzdWU5MjA2MjE0Mw==",
  "number": 4256,
  "title": "Extend propTypes and deprecate getDefaultProps()",
  "user": {
    "login": "fizker",
    "id": 736545,
    "node_id": "MDQ6VXNlcjczNjU0NQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/736545?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fizker",
    "html_url": "https://github.com/fizker",
    "followers_url": "https://api.github.com/users/fizker/followers",
    "following_url": "https://api.github.com/users/fizker/following{/other_user}",
    "gists_url": "https://api.github.com/users/fizker/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fizker/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fizker/subscriptions",
    "organizations_url": "https://api.github.com/users/fizker/orgs",
    "repos_url": "https://api.github.com/users/fizker/repos",
    "events_url": "https://api.github.com/users/fizker/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fizker/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2015-06-30T11:08:00Z",
  "updated_at": "2016-02-17T23:18:16Z",
  "closed_at": "2016-02-17T23:18:16Z",
  "author_association": "NONE",
  "body": "There are some prop types which are not easy to describe via propTypes. I find it unfortunate that it is not obvious when a propType have a default, especially if null is not an accepted value.\n\nA short summary of how you can get the React type warnings to act as intended (in flow syntax first):\n- Optional\n  \n  ```\n  // Flow\n  someString:?String\n  \n  // React\n  propTypes: {\n    someString: React.PropTypes.string\n  },\n  getDefaultProps: function() {\n    return {\n    }\n  },\n  ```\n- Non-Optional\n  \n  ```\n  // Flow\n  someString:String\n  \n  // React\n  propTypes: {\n    someString: React.PropTypes.string.isRequired\n  },\n  getDefaultProps: function() {\n    return {\n    }\n  },\n  ```\n- Optional with default value\n  \n  ```\n  // Flow\n  someString:?String = \"default\"\n  \n  // React\n  propTypes: {\n    someString: React.PropTypes.string\n  },\n  getDefaultProps: function() {\n    return {\n        someString: \"default\"\n    }\n  },\n  ```\n- Non-Optional with default\n  \n  ```\n  // Flow\n  someString:String = \"default\"\n  \n  // React\n  propTypes: {\n    someString: React.PropTypes.string.isRequired\n  },\n  getDefaultProps: function() {\n    return {\n        someString: \"default\"\n    }\n  },\n  ```\n\nAll these give the type warnings that you would expect based on the flow type,\nbut especially the “non-optional with default” case is really hard to read in React.\n\nPerhaps an alternate syntax for propTypes which incorporates default values should be considered:\n\n```\npropTypes: {\n    someString: React.PropTypes.string.notNull.defaultValue(\"default\"),\n},\n```\n\nThis also solves the readability issue of `getDefaultProps()`, where you would\nthink that it is resolved at runtime, when in fact it should be considered a set\nof static values.\n\n---\n\nI discovered this issue because of some code where there is a non-required prop (because it has a default), but `null` is not an acceptable value. The issue is that you get no warning if you overwrite it with `null`, because React thinks that this is acceptable. And putting `.isRequired` on something with a default value looks really funky.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
