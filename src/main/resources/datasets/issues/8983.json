{
  "url": "https://api.github.com/repos/facebook/react/issues/8983",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8983/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8983/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8983/events",
  "html_url": "https://github.com/facebook/react/issues/8983",
  "id": 207095437,
  "node_id": "MDU6SXNzdWUyMDcwOTU0Mzc=",
  "number": 8983,
  "title": "Add new typechecking rule for class inherit",
  "user": {
    "login": "zslucky",
    "id": 15725589,
    "node_id": "MDQ6VXNlcjE1NzI1NTg5",
    "avatar_url": "https://avatars1.githubusercontent.com/u/15725589?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zslucky",
    "html_url": "https://github.com/zslucky",
    "followers_url": "https://api.github.com/users/zslucky/followers",
    "following_url": "https://api.github.com/users/zslucky/following{/other_user}",
    "gists_url": "https://api.github.com/users/zslucky/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zslucky/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zslucky/subscriptions",
    "organizations_url": "https://api.github.com/users/zslucky/orgs",
    "repos_url": "https://api.github.com/users/zslucky/repos",
    "events_url": "https://api.github.com/users/zslucky/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zslucky/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2017-02-13T00:09:17Z",
  "updated_at": "2017-02-17T02:21:08Z",
  "closed_at": "2017-02-16T16:37:56Z",
  "author_association": "NONE",
  "body": "I'm not sure is it possible or necessary to do this, but I got the trouble here, please see the example code below:\r\n```javascript\r\nclass Grandpa extends React.Component {}\r\n\r\nclass Parent extends Grandpa {}\r\n\r\nclass ChildOne extends Parent {}\r\nclass ChildTwo extends Parent {}\r\nclass ChildThree extends Parent {}\r\n\r\nclass TestComponent extends React.Component {\r\n    render() {\r\n        const CustomComponent = this.props.component;\r\n        return <CustomComponent />\r\n    }\r\n}\r\nTestComponent.propTypes = {\r\n    // component: React.PropTypes.class.inheritOf(Parent)\r\n    // or\r\n    // component: React.PropTypes.class.inheritOf(Grandpa)\r\n};\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n      return (\r\n          <TestComponent\r\n            component={ChildOne}\r\n          />\r\n      );\r\n    }\r\n}\r\n```\r\n\r\nAs I add some common function in `Parent` or `Grandpa` class, so the component passed into `TestComponent` should inherit from these classes. then some component can work correctly.\r\n\r\nI tested `ChildOne.prototype instanceof Parent` and `ChildOne.prototype instanceof Grandpa` are both correct, so is it necessary to add this rule?",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
