{
  "url": "https://api.github.com/repos/facebook/react/issues/15329",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15329/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15329/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15329/events",
  "html_url": "https://github.com/facebook/react/issues/15329",
  "id": 429521250,
  "node_id": "MDU6SXNzdWU0Mjk1MjEyNTA=",
  "number": 15329,
  "title": "[eslint-plugin-react-hooks] setState in effect guard prevents cases like DOM measurement",
  "user": {
    "login": "billyjanitsch",
    "id": 1158733,
    "node_id": "MDQ6VXNlcjExNTg3MzM=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1158733?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/billyjanitsch",
    "html_url": "https://github.com/billyjanitsch",
    "followers_url": "https://api.github.com/users/billyjanitsch/followers",
    "following_url": "https://api.github.com/users/billyjanitsch/following{/other_user}",
    "gists_url": "https://api.github.com/users/billyjanitsch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/billyjanitsch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/billyjanitsch/subscriptions",
    "organizations_url": "https://api.github.com/users/billyjanitsch/orgs",
    "repos_url": "https://api.github.com/users/billyjanitsch/repos",
    "events_url": "https://api.github.com/users/billyjanitsch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/billyjanitsch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-04-04T23:13:18Z",
  "updated_at": "2019-04-05T00:59:52Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nThe new guard against a direct call to `setState` inside of an effect (https://github.com/facebook/react/pull/15184) seems to prevent a class of patterns where the value being set is dependent on something other than props. For example, the rule disallows storing a value read from the DOM via a ref (see below).\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n```js\r\nfunction MeasuredButton(props) {\r\n  const buttonRef = useRef(null)\r\n  const [buttonWidth, setButtonWidth] = useState(0)\r\n\r\n  useLayoutEffect(() => {\r\n    if (buttonRef.current) {\r\n      // we rely on the same value bailout to avoid an infinite loop\r\n      setButtonWidth(buttonRef.current.clientWidth)\r\n      // we could bail out explicitly instead:\r\n      // const {clientWidth} = buttonRef.current\r\n      // if (clientWidth !== buttonWidth) setButtonWidth(clientWidth)\r\n      // but the linter would still disallow it\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <button ref={buttonRef}>{props.children}</button>\r\n      Button width: {buttonWidth}\r\n    </>\r\n  )\r\n}\r\n```\r\n\r\nThis code yields the error:\r\n\r\n>React Hook useLayoutEffect contains a call to 'setButtonWidth'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useLayoutEffect Hook.\r\n\r\nThe auto-fix breaks the component because the width no longer updates on subsequent renders.\r\n\r\n**What is the expected behavior?**\r\n\r\nBasically, the guard assumes that the infinite loop problem can always be solved by adding a dependency array. This is true when setting a value derived from props (such as data returned from a request based on a prop), but not when the source of the value can only be retrieved inside of the effect (such as a DOM measurement). In the latter case, an infinite loop has to be avoided by adding a condition or relying on the same value bailout.\r\n\r\nIs this known and/or intentional? I notice that #15184 considered early returns, which would help.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact: 16.8.6\r\neslint-plugin-react-hooks: 1.6.0",
  "closed_by": null
}
