{
  "url": "https://api.github.com/repos/facebook/react/issues/7146",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7146/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7146/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7146/events",
  "html_url": "https://github.com/facebook/react/issues/7146",
  "id": 162978636,
  "node_id": "MDU6SXNzdWUxNjI5Nzg2MzY=",
  "number": 7146,
  "title": "Allow indirect children in ReactTransitionGroup",
  "user": {
    "login": "sbai",
    "id": 1148798,
    "node_id": "MDQ6VXNlcjExNDg3OTg=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1148798?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sbai",
    "html_url": "https://github.com/sbai",
    "followers_url": "https://api.github.com/users/sbai/followers",
    "following_url": "https://api.github.com/users/sbai/following{/other_user}",
    "gists_url": "https://api.github.com/users/sbai/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sbai/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sbai/subscriptions",
    "organizations_url": "https://api.github.com/users/sbai/orgs",
    "repos_url": "https://api.github.com/users/sbai/repos",
    "events_url": "https://api.github.com/users/sbai/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sbai/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-06-29T17:09:56Z",
  "updated_at": "2016-06-29T19:34:01Z",
  "closed_at": "2016-06-29T19:34:01Z",
  "author_association": "NONE",
  "body": "`ReactTransitionGroup` calls transition-related lifecycle hooks like `componentWillLeave` on its direct children. This is inconvenient when a child component is wrapped by a third-party decorator such as `@connect` or `@injectIntl`, because the decorators may return their own components, the outermost of which will be the direct child of `ReactTransitionGroup` and receive the lifecycle calls.\n\nWould it be possible to let descendants register themselves (in their constructors, for instance) to receive these calls? This would save app developers the hassle of writing a wrapper component that sits between `ReactTransitionGroup` and the animated child just to intercept the hooks and pass them on in the presence of intermediate wrapper components.\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
