{
  "url": "https://api.github.com/repos/facebook/react/issues/4415",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4415/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4415/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4415/events",
  "html_url": "https://github.com/facebook/react/issues/4415",
  "id": 95627594,
  "node_id": "MDU6SXNzdWU5NTYyNzU5NA==",
  "number": 4415,
  "title": "How could I know when dangerouslySetInnerHTML set the innerHTML?",
  "user": {
    "login": "leozdgao",
    "id": 8381024,
    "node_id": "MDQ6VXNlcjgzODEwMjQ=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/8381024?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/leozdgao",
    "html_url": "https://github.com/leozdgao",
    "followers_url": "https://api.github.com/users/leozdgao/followers",
    "following_url": "https://api.github.com/users/leozdgao/following{/other_user}",
    "gists_url": "https://api.github.com/users/leozdgao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/leozdgao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leozdgao/subscriptions",
    "organizations_url": "https://api.github.com/users/leozdgao/orgs",
    "repos_url": "https://api.github.com/users/leozdgao/repos",
    "events_url": "https://api.github.com/users/leozdgao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/leozdgao/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-07-17T10:07:51Z",
  "updated_at": "2015-07-18T06:57:39Z",
  "closed_at": "2015-07-18T06:57:39Z",
  "author_association": "NONE",
  "body": "I use [marked](https://github.com/chjj/marked) to parse the article, and get the html string of the article, then I use `dangerouslySetInnerHTML` to insert it to the DOM. After that, I want to use my [autoIndexer](https://github.com/leozdgao/autoindexer.git) to generate index for this article.\n\nHere is the code:\n\n``` javascript\nlet About = React.createClass({\n  componentDidMount: function() {\n    let node = React.findDOMNode(this.refs.testNode);\n    console.log(node.children.length);  // what? 0, which cause my autoIndexer don't work.\n  },\n  render() {\n    return (\n      <div>\n        <Link to=\"info\">Info</Link>\n        <div ref=\"testNode\" dangerouslySetInnerHTML={{__html: this.props.content}}></div>\n      </div>\n    );\n  }\n});\n```\n\nI try to get the length of content's children node, but it is 0. Which means the innerHTML hasn't set at this time?\n\nBut check this test code:\n\n``` javascript\nlet About = React.createClass({\n  componentDidMount: function() {\n    let node = React.findDOMNode(this.refs.testNode);\n    console.log(node.children.length);  // yes, it is 1\n  },\n  render() {\n    return (\n      <div>\n        <Link to=\"info\">Info</Link>\n        <div ref=\"testNode\" dangerouslySetInnerHTML={{__html: \"<h2>Test</h2>\"}}></div>\n      </div>\n    );\n  }\n});\n```\n\nMy content is longer than `<h2>Test</h2>`. So it confused me, how could I know when dangerouslySetInnerHTML set the innerHTML? It seems the short html was set when `componentDidMount` invoked, but longer html was not set when `componentDidMount` invoked.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
