{
  "url": "https://api.github.com/repos/facebook/react/issues/14580",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14580/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14580/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14580/events",
  "html_url": "https://github.com/facebook/react/issues/14580",
  "id": 398543420,
  "node_id": "MDU6SXNzdWUzOTg1NDM0MjA=",
  "number": 14580,
  "title": "[Hooks] useImperativeMethods should expose its content",
  "user": {
    "login": "drcmda",
    "id": 2223602,
    "node_id": "MDQ6VXNlcjIyMjM2MDI=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/2223602?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drcmda",
    "html_url": "https://github.com/drcmda",
    "followers_url": "https://api.github.com/users/drcmda/followers",
    "following_url": "https://api.github.com/users/drcmda/following{/other_user}",
    "gists_url": "https://api.github.com/users/drcmda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drcmda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drcmda/subscriptions",
    "organizations_url": "https://api.github.com/users/drcmda/orgs",
    "repos_url": "https://api.github.com/users/drcmda/repos",
    "events_url": "https://api.github.com/users/drcmda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drcmda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-01-12T10:49:21Z",
  "updated_at": "2019-01-18T09:30:31Z",
  "closed_at": "2019-01-18T02:51:24Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\n```js\r\nconst api = useImperativeMethods(ref, () => ({\r\n  start: () => Promise.all(ctrl.current.map(c => c.start())),\r\n  stop: () => ctrl.current.forEach(c => c.stop()),\r\n}))\r\n\r\n// api is undefined\r\n```\r\n\r\nUsers can use the api from outside by forwarding a ref, but it is sealed inside and cannot be re-used\r\n\r\n**What is the expected behavior?**\r\n\r\n```js\r\nconst api = useImperativeMethods(ref, () => ({\r\n  start: () => Promise.all(ctrl.current.map(c => c.start())),\r\n  stop: () => ctrl.current.forEach(c => c.stop()),\r\n}))\r\n\r\napi.start()\r\napi.stop()\r\n```\r\n\r\nNow we can re-use our code and even treat it like a public api that can be used outside or inside (like public class methods in reacts class components which could be used by ref or internally). The api-object could of course be wrapped into useState or useMemo prior to feeding it to useImperativeMethods, but it would be yet another step and if it would just channel through its input it would be cleaner.\r\n\r\nI would also expect the api to be present if \"ref\" is undefined. ",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
