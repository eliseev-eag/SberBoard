{
  "url": "https://api.github.com/repos/facebook/react/issues/13316",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13316/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13316/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13316/events",
  "html_url": "https://github.com/facebook/react/issues/13316",
  "id": 347278255,
  "node_id": "MDU6SXNzdWUzNDcyNzgyNTU=",
  "number": 13316,
  "title": "[Feature]React behaves bad performance when updating a very huge array",
  "user": {
    "login": "yuqingc",
    "id": 29723652,
    "node_id": "MDQ6VXNlcjI5NzIzNjUy",
    "avatar_url": "https://avatars3.githubusercontent.com/u/29723652?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yuqingc",
    "html_url": "https://github.com/yuqingc",
    "followers_url": "https://api.github.com/users/yuqingc/followers",
    "following_url": "https://api.github.com/users/yuqingc/following{/other_user}",
    "gists_url": "https://api.github.com/users/yuqingc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yuqingc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yuqingc/subscriptions",
    "organizations_url": "https://api.github.com/users/yuqingc/orgs",
    "repos_url": "https://api.github.com/users/yuqingc/repos",
    "events_url": "https://api.github.com/users/yuqingc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yuqingc/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-08-03T06:44:58Z",
  "updated_at": "2018-08-03T14:18:31Z",
  "closed_at": "2018-08-03T10:27:43Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nfeature\r\n\r\n**What is the current behavior?**\r\nThere's very bad performance if I only want to update a very small part of an array with the `setState` method, which causes the `render` method is triggered every time I update the array, and the entire array is traversed again and again . As the array gets larger and larger, react takes more resource of the computer, especially CPU. In such cases, calling the DOM  method `ParentNode.append` with the `ref` feature of react makes a lot better performance than the React's `setState` way. However, calling the DOM method a lot out of React is not the graceful solution.\r\n\r\nI have come across such scenario a few times. Here is an example written in pseudocode.\r\n```jsx\r\nclass DataList extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      dataSourceList = [],\r\n    };\r\n  }\r\n\r\n  getData = () => {\r\n    // Some data is being fetched from the server\r\n    // This piece of data is assigned to a variable, say `newData`\r\n    this.setState({\r\n      dataSourceList: _.deepClone(this.state.dataSourceList).push(newData)\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.dataSourceList.map(v => {\r\n            return <DataItem key={v.id} value={v.value} />\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n```\r\nEvery time the `getData` method is invoked, the `render` method and `map` method are triggered in order to update the React element array. This does not bother much performance if you fetch these data manually by clicking some button to trigger the `getData` method.\r\n\r\nHowever, there is a scenario where this costs a lot of CPU resource. I wrote a \"streaming log\" component with which a line of log was printed to the screen every time the \"websocket\" receive a message from the server. One piece of message renders the counterpart component `DataItem` above. Sometimes, the server sends hundreds of thousands of messages within one second, which causes the `render` method and `map` method has to be triggered thousands of times accordingly. This behavior even makes the current web page occupy 100% of the CPU and my computer got frozen until the updating process was finished.\r\n\r\nIn order to solve this issue, I have to use the web API's `append` method to mount a DOM node carrying those messages directly in to the DOM node of the \"steaming log\" component' wrapper `div`. This solution avoids the `render` part which is under the complexity of O(n) (*n* is the length of the array). A snippet of pseudocode is as below\r\n\r\n```jsx\r\nclass DataList extends React.Component {\r\n\r\n  getData = () => {\r\n    // Some data is being fetched from the server\r\n    // This piece of data is assigned to a variable, say `newData`\r\n    dataItem = document.createElement('div');\r\n    dataItem.innerHTML = newData.value;\r\n    this.containerNode.append(dataItem);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div ref={node => this.containerNode = node} />\r\n    );\r\n  }\r\n}\r\n```\r\nEven though using the DOM method `append` improves the behavior greatly, it is not always the elegant solution. Is it possible that we have a _\"React\"_ way to update a very small part of the array, or just to pushing an element to the array to be rendered?\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nIt is not a bug. It probably be a flaw of the React architecture\r\n\r\n**What is the expected behavior?**\r\nThe expected behavior is we may update the array in the above scenario with the original React API rather than directly calling the DOM node's method\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nPresent version: v16.x\r\nBrowser: All\r\nOS: All\r\nIt did not work in previous versions either.\r\n",
  "closed_by": {
    "login": "jquense",
    "id": 339286,
    "node_id": "MDQ6VXNlcjMzOTI4Ng==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/339286?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jquense",
    "html_url": "https://github.com/jquense",
    "followers_url": "https://api.github.com/users/jquense/followers",
    "following_url": "https://api.github.com/users/jquense/following{/other_user}",
    "gists_url": "https://api.github.com/users/jquense/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jquense/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jquense/subscriptions",
    "organizations_url": "https://api.github.com/users/jquense/orgs",
    "repos_url": "https://api.github.com/users/jquense/repos",
    "events_url": "https://api.github.com/users/jquense/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jquense/received_events",
    "type": "User",
    "site_admin": false
  }
}
