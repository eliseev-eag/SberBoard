{
  "url": "https://api.github.com/repos/facebook/react/issues/13044",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13044/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13044/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13044/events",
  "html_url": "https://github.com/facebook/react/issues/13044",
  "id": 332416688,
  "node_id": "MDU6SXNzdWUzMzI0MTY2ODg=",
  "number": 13044,
  "title": "Allow Portals to be used for Reparenting",
  "user": {
    "login": "philipp-spiess",
    "id": 458591,
    "node_id": "MDQ6VXNlcjQ1ODU5MQ==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/458591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/philipp-spiess",
    "html_url": "https://github.com/philipp-spiess",
    "followers_url": "https://api.github.com/users/philipp-spiess/followers",
    "following_url": "https://api.github.com/users/philipp-spiess/following{/other_user}",
    "gists_url": "https://api.github.com/users/philipp-spiess/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/philipp-spiess/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/philipp-spiess/subscriptions",
    "organizations_url": "https://api.github.com/users/philipp-spiess/orgs",
    "repos_url": "https://api.github.com/users/philipp-spiess/repos",
    "events_url": "https://api.github.com/users/philipp-spiess/events{/privacy}",
    "received_events_url": "https://api.github.com/users/philipp-spiess/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2018-06-14T14:01:27Z",
  "updated_at": "2019-08-26T11:30:58Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nfeature\r\n\r\n**What is the current behavior?**\r\n\r\n[Reparenting](https://github.com/facebook/react/issues/3965) is an unsolved issues of React(DOM). So far, it was possible to hack around the missing support for it by relying on unstable API (`unstable_renderSubtreeIntoContainer`) to render **and update** a subtree inside a different container. It's important to note that this API was using React's diffing algorithm so that, similar to `ReactDOM.render()`, it is possible to keep components mounted.\r\n\r\n```js\r\nReactDOM.render(<Foo />, container);\r\n// This won't get <Foo /> to be unmounted and mounted again:\r\nReactDOM.render(<Foo />, container);\r\n\r\nReactDOM.unstable_renderSubtreeIntoContainer(\r\n  parentComponent,\r\n  <Foo />,\r\n  container\r\n);\r\n// This also won't get <Foo /> to be unmounted and mounted again, no matter if \r\n// we change parentComponent (and thus call it from a different parent):\r\nReactDOM.unstable_renderSubtreeIntoContainer(\r\n  parentComponent,\r\n  <Foo />,\r\n  container\r\n);\r\n```\r\n\r\nHowever this unstable API is [going to be deprecated soon](https://github.com/facebook/react/issues/10143) and recent features like the introduction of the new context API introduced [additional issues](https://github.com/facebook/react/issues/12493).\r\n\r\nAs an alternative to this unstable API, `ReactDOM.createPortal(children, container)` was introduced. However this API is unsuitable for the reparenting issue since it will always [create a new mount point](https://github.com/facebook/react/issues/10713) inside the `container` instead of applying the diffing _when called from a different parent_ (Check out this [CodeSandbox](https://codesandbox.io/s/91o7oovo54) where calling the portal from a different portal will cause the `<Leaf />` to have a new uuid). The reason for this is that we want multiple portals to be able to render inside the same `container` which makes perfect sense for more common use cases like popovers, etc.\r\n\r\nBefore we're going to remove `unstable_renderSubtreeIntoContainer`, I suggest we find a way to portal into a specific node instead of appending to it so that we can diff its contents instead (or implement a solution for #3965 although that seems to be more complicated), similar to `unstable_renderSubtreeIntoContainer`.",
  "closed_by": null
}
