{
  "url": "https://api.github.com/repos/facebook/react/issues/8212",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8212/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8212/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8212/events",
  "html_url": "https://github.com/facebook/react/pull/8212",
  "id": 187488148,
  "node_id": "MDExOlB1bGxSZXF1ZXN0OTI0NDg2NzI=",
  "number": 8212,
  "title": "[Fiber] Add more tests and fix an issue with incremental error handling",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "acdlite",
    "id": 3624098,
    "node_id": "MDQ6VXNlcjM2MjQwOTg=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acdlite",
    "html_url": "https://github.com/acdlite",
    "followers_url": "https://api.github.com/users/acdlite/followers",
    "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
    "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
    "organizations_url": "https://api.github.com/users/acdlite/orgs",
    "repos_url": "https://api.github.com/users/acdlite/repos",
    "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acdlite/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "acdlite",
      "id": 3624098,
      "node_id": "MDQ6VXNlcjM2MjQwOTg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acdlite",
      "html_url": "https://github.com/acdlite",
      "followers_url": "https://api.github.com/users/acdlite/followers",
      "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
      "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
      "organizations_url": "https://api.github.com/users/acdlite/orgs",
      "repos_url": "https://api.github.com/users/acdlite/repos",
      "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acdlite/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2016-11-05T10:05:47Z",
  "updated_at": "2016-12-01T16:56:29Z",
  "closed_at": "2016-12-01T16:56:29Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/8212",
    "html_url": "https://github.com/facebook/react/pull/8212",
    "diff_url": "https://github.com/facebook/react/pull/8212.diff",
    "patch_url": "https://github.com/facebook/react/pull/8212.patch"
  },
  "body": "See individual commits.\r\n\r\n### Add more tests for incremental error handling\r\n\r\nAdded more tests that test how error boundaries behave inside different priorities.\r\nThese new tests are currently failing:\r\n\r\n```\r\n  ✕ catches render error in a boundary during partial deferred mounting\r\n  ✕ catches render error in a boundary during animation mounting\r\n  ✕ propagates an error from a noop error boundary during full deferred mounting\r\n  ✕ propagates an error from a noop error boundary during partial deferred mounting\r\n  ✕ propagates an error from a noop error boundary during animation mounting\r\n```\r\n\r\nThe observed behavior is that `unstable_handleError()` unexpectedly gets called twice:\r\n\r\n```diff\r\n      \"ErrorBoundary render success\",\r\n      \"BrokenRender\",\r\n      \"ErrorBoundary unstable_handleError\",\r\n  +   \"ErrorBoundary render success\",\r\n  +   \"BrokenRender\",\r\n  +   \"ErrorBoundary unstable_handleError\",\r\n      \"ErrorBoundary render error\"\r\n```\r\n\r\nThis is not a big deal but if people call error reporting services in `unstable_handleError`, they'll get each error twice on mounting.\r\n\r\n### \tAlways reuse progressChild when starting Task work\r\n\r\nThe above problem happens because `Task` is a higher priority work than animated or deferred, and so it throws away the already progressed child. This is why we render the failed path twice before continuing with the success path.\r\n\r\nAs a fix, I changed it to always reuse the progressed child when we're working with `Task` priority. **I’m not sure this is the right fix.** Maybe we should only do this for error handling work. I couldn’t figure out how to come up with a counter-example to this so I’d appreciate special attention there.\r\n\r\n### \tVerify batched updates get scheduled despite errors\r\n\r\nThis just adds a few tests I planned to do earlier so that we don’t accidentally regress on them.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
