{
  "url": "https://api.github.com/repos/facebook/react/issues/4530",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4530/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4530/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4530/events",
  "html_url": "https://github.com/facebook/react/issues/4530",
  "id": 98292230,
  "node_id": "MDU6SXNzdWU5ODI5MjIzMA==",
  "number": 4530,
  "title": "Feature: Higher-level wormhole pattern",
  "user": {
    "login": "dantman",
    "id": 53399,
    "node_id": "MDQ6VXNlcjUzMzk5",
    "avatar_url": "https://avatars2.githubusercontent.com/u/53399?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dantman",
    "html_url": "https://github.com/dantman",
    "followers_url": "https://api.github.com/users/dantman/followers",
    "following_url": "https://api.github.com/users/dantman/following{/other_user}",
    "gists_url": "https://api.github.com/users/dantman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dantman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dantman/subscriptions",
    "organizations_url": "https://api.github.com/users/dantman/orgs",
    "repos_url": "https://api.github.com/users/dantman/repos",
    "events_url": "https://api.github.com/users/dantman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dantman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2015-07-31T00:28:13Z",
  "updated_at": "2018-06-07T00:36:34Z",
  "closed_at": "2015-07-31T06:39:51Z",
  "author_association": "CONTRIBUTOR",
  "body": "I’ve been thinking about code that needs to render React nodes somewhere other than as a direct DOM child of a React component. With examples such as:\n- A user of [Tether](http://tether.io/), a library which sometimes needs to relocate the DOM node for positioning to work right.\n- A React `Popover`/`Dropdown`/`Dialog` component that planning to render its children as a decedent of `body` so it can position things correctly. (as a bonus this means a popover component can be passed directly to the button that controls it).\n- A React component that uses a 3rd party modal dialog library and renders its React children in the body created by that component.\n- This could also be slightly related to the need some people have to keep a DOM node around even when it’s not being rendered. (Assuming the implementation is able to React render into a detached node).\n\nThe current pattern for these kind of use cases is for the component to `React.render` its children in a different DOM node and then `React.unmountComponentAtNode` when the component unmounts. Which as I understand it, is called the “wormhole” pattern.\n\nHowever this pattern is problematic. With this method context is not passed to the children the way it should be. And while we ‘could’ add a way for a component to access the internal context it’s not supposed to see (the properties it hasn’t declared) and allow `React.render` to accept that. That would expose internals in ways it shouldn’t be exposed. And in the case that there is any other thing internal to react that should be passed on would not help.\n\nSo we need a higher level api to declare faux/virtual/relocated “children” (pick a name) which render into a separate DOM component somewhere else in the dom but are still linked to another component (most components will simply pass `this` into the api).\n- The component is responsible for creating the DOM container and telling ReactDOM where it is.\n- This would be integrated into React(DOM) so context and any other piece of data would flow as it normally does.\n- The component would be responsible for cleaning up the container. I’m unsure if React should be responsible for unmounting children from the faux/virtual/relocated location or if that would be another function.\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
