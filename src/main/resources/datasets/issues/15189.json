{
  "url": "https://api.github.com/repos/facebook/react/issues/15189",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15189/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15189/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15189/events",
  "html_url": "https://github.com/facebook/react/issues/15189",
  "id": 424090307,
  "node_id": "MDU6SXNzdWU0MjQwOTAzMDc=",
  "number": 15189,
  "title": "How Fetch the particular data from the online API in react-native",
  "user": {
    "login": "AGPatel",
    "id": 35211339,
    "node_id": "MDQ6VXNlcjM1MjExMzM5",
    "avatar_url": "https://avatars0.githubusercontent.com/u/35211339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AGPatel",
    "html_url": "https://github.com/AGPatel",
    "followers_url": "https://api.github.com/users/AGPatel/followers",
    "following_url": "https://api.github.com/users/AGPatel/following{/other_user}",
    "gists_url": "https://api.github.com/users/AGPatel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AGPatel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AGPatel/subscriptions",
    "organizations_url": "https://api.github.com/users/AGPatel/orgs",
    "repos_url": "https://api.github.com/users/AGPatel/repos",
    "events_url": "https://api.github.com/users/AGPatel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AGPatel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-03-22T08:10:16Z",
  "updated_at": "2019-03-23T11:21:52Z",
  "closed_at": "2019-03-22T13:39:45Z",
  "author_association": "NONE",
  "body": "I fetch the API data and store in the array and then I print that data in **return()** method but it's give me all the data of API .\r\nI have no idea how take particular data from the particular index\r\n\r\n```\r\nimport React, { Component } from 'react';\r\nimport { View, ScrollView, KeyboardAvoidingView, Alert, StyleSheet, FlatList, Text, ActivityIndicator } from 'react-native';\r\nimport { openDatabase } from 'react-native-sqlite-storage';\r\nvar db = openDatabase({ name: 'UserDatabase.db' });\r\n\r\nexport default class API extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employee_id: '',\r\n            employee_name: '',\r\n            employee_salary: '',\r\n            employee_age: '',\r\n            isLoading: true,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        return fetch('http://dummy.restapiexample.com/api/v1/employees')\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            this.setState(\r\n                {\r\n                    isLoading: false,\r\n                    dataSource: responseJson,\r\n                },\r\n            );\r\n        })\r\n        .catch((error) => { console.error(error);});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={{ flex: 1, padding: 20 }}>\r\n                    <ActivityIndicator />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <View style={{ backgroundColor: 'white', flex: 1 }}>\r\n                <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n                    <KeyboardAvoidingView\r\n                        behavior=\"padding\"\r\n                        style={{ flex: 1, justifyContent: 'space-between' }}>\r\n                        <View style={{ flex: 1, }}>\r\n                            <View style={[styles.MainContainer,{  flexDirection: 'row', borderColor: 'black', borderWidth: 1}]}>\r\n                                <View style={{ borderColor: 'black', borderRightWidth: 0.5, width: '15%', backgroundColor: '#F5FCFF' }}><Text style={{ fontSize: 20, }} onChangeText={employee_id => this.setState({ employee_id })} >Id</Text></View>\r\n                                <View style={{ borderColor: 'black', borderLeftWidth: 0.5, borderRightWidth: 0.5, width: '52%', backgroundColor: '#F5FCFF' }}><Text style={{ fontSize: 20, }} onChangeText={employee_name => this.setState({ employee_name })} >Name</Text></View>\r\n                                <View style={{ borderColor: 'black', borderLeftWidth: 0.5, borderRightWidth: 0.5, width: '23%', backgroundColor: '#F5FCFF' }}><Text style={{ fontSize: 20, }} onChangeText={employee_id => this.setState({ employee_id })} > Salary</Text></View>\r\n                                <View style={{ borderColor: 'black', borderLeftWidth: 0.5, width: '10%', backgroundColor: '#F5FCFF' }}><Text style={{ fontSize: 20, }} onChangeText={employee_age => this.setState({ employee_age })} >Age</Text></View>\r\n                            </View>\r\n                            <FlatList\r\n                                data={this.state.dataSource}\r\n                                renderItem={({ item }) =>\r\n                                    <View style={styles.MainContainer}>\r\n                                        <View style={{ marginTop: 5 }}>\r\n                                            <View style={{ width: '100%', flexDirection: 'row', borderColor: 'black', borderWidth: 1 }}>\r\n                                                <View style={{ borderColor: 'black', borderRightWidth: 0.5, width: '15%', backgroundColor: '#F5FCFF' }}><Text style={{ fontSize: 20, }} onChangeText={employee_id => this.setState({ employee_id })} >{item.id}</Text></View>\r\n                                                <View style={{ borderColor: 'black', borderLeftWidth: 0.5, borderRightWidth: 0.5, width: '52%', backgroundColor: '#F5FCFF' }}><Text style={{ fontSize: 20, }} onChangeText={employee_name => this.setState({ employee_name })} > {item.employee_name}</Text></View>\r\n                                                <View style={{ borderColor: 'black', borderLeftWidth: 0.5, borderRightWidth: 0.5, width: '23%', backgroundColor: '#F5FCFF' }}><Text style={{ fontSize: 20, }} onChangeText={employee_id => this.setState({ employee_id })} > {item.employee_salary}</Text></View>\r\n                                                <View style={{ borderColor: 'black', borderLeftWidth: 0.5, width: '10%', backgroundColor: '#F5FCFF' }}><Text style={{ fontSize: 20, }} onChangeText={employee_age => this.setState({ employee_age })} > {item.employee_age}</Text></View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n                                }\r\n                                keyExtractor={({ id }, index) => id}\r\n                            />\r\n                        </View>\r\n                        \r\n                    </KeyboardAvoidingView>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    MainContainer:{\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n        flex: 1,\r\n        margin: 2,\r\n    },\r\n});\r\n```\r\n\r\nThen i change the code and try **Array**\r\n```\r\nimport React from 'react';\r\nimport { FlatList, ActivityIndicator, Text, View, StyleSheet, ScrollView, Alert, KeyboardAvoidingView, TouchableOpacity } from 'react-native';\r\nimport { openDatabase } from 'react-native-sqlite-storage';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nvar db = openDatabase({ name: 'UserDatabase.db' });\r\n\r\nconst Person = (props) => {\r\n    return(\r\n        <View>\r\n            <Text style={[styles.text, { fontWeight: 'bold' }]}>{props.Person.id}</Text>\r\n            <Text style={[styles.text,]}><Text style={{ fontWeight: 'bold' }}>-></Text>userId={props.Person.userId}</Text>\r\n            <Text style={styles.text}><Text style={{ fontWeight: 'bold' }}>-></Text>{props.Person.title}</Text>\r\n            <Text style={styles.text}><Text style={{ fontWeight: 'bold' }}>-></Text>{props.Person.body}</Text>\r\n        </View>\r\n    )\r\n}\r\nexport default class MAPI extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            id: '',\r\n            title: '',\r\n            body: '',\r\n            data:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts', {method: 'GET'})\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            this.setState(\r\n                {\r\n                    isLoading: false,\r\n                    data: responseJson\r\n                },\r\n            );\r\n        })\r\n    }\r\n\r\n    alertItemName = (item) => {\r\n        Alert.alert(item.title);\r\n    }\r\n\r\n    render() {\r\n        // const data = this.state.data\r\n        let data = this.state.data\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={{ flex: 1, padding: 20, alignContent:'center',alignItems:\"center\" }}>\r\n                    <ActivityIndicator />\r\n                    <Text style={{color: 'red', fontSize:20}}>Loading....</Text>\r\n                </View>\r\n            )\r\n        }\r\n        return (\r\n            <View>\r\n                <ScrollView>\r\n                    {\r\n                        this.state.data.map((item, index) => (\r\n                            <TouchableOpacity key={item.id} style={styles.container}onPress={() => this.alertItemName(item)}>\r\n                                <Person key={item.title} Person={item} />\r\n                            </TouchableOpacity>\r\n                        ))\r\n                    }\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 5,\r\n        marginTop: 3,\r\n        backgroundColor: '#F5FCFF',\r\n        alignItems: 'flex-start',\r\n        borderColor: 'black',\r\n        borderWidth:1,\r\n    },\r\n    text: {\r\n        color: 'black',\r\n        fontSize: 20\r\n    }\r\n});\r\n```\r\nwhere i need to change?",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
