{
  "url": "https://api.github.com/repos/facebook/react/issues/129",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/129/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/129/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/129/events",
  "html_url": "https://github.com/facebook/react/issues/129",
  "id": 16061931,
  "node_id": "MDU6SXNzdWUxNjA2MTkzMQ==",
  "number": 129,
  "title": "Maybe interpolate within JSX attributes?",
  "user": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2013-06-26T23:23:37Z",
  "updated_at": "2014-05-09T18:09:42Z",
  "closed_at": "2014-05-09T18:09:42Z",
  "author_association": "COLLABORATOR",
  "body": "Would be cool and useful if `<div title=\"hello {there}\">` compiled down into\n\n``` js\nReact.DOM.div({title: \"hello \" + there})\n```\n\nor similar, though it looks like I'm fighting an uphill battle here:\n\n```\n22:56 < balpert> any reason why <div title=\"hello {there}\"> shouldn't interpolate?\n22:58 <@zpao> lbljeffmo: that's in your court :)\n22:58 <@lbljeffmo> balpert: because that's hard :)\n22:58 <@lbljeffmo> We'd basically need to eval strings\n22:58 < balpert> I mean, <div>hello {there}</div> already works?\n22:58 <@lbljeffmo> let me think for more than a second...\n23:00 <@lbljeffmo> also, we'd need to escape the output\n23:00 < balpert> what do you mean?\n23:00 <@zpao> well, react will escape the whole attr when creating html\n23:01 <@lbljeffmo> what would it interpolate to?\n23:01 < balpert> {title: \"hello \" + there}?\n23:01 < balpert> or maybe something like {title: [\"hello \", there]} if we made that work\n23:01 <@zpao> yea\n23:01 <@zpao> same as <div title={'hello ' + there}/>\n23:02 <@lbljeffmo> I'm hesitant because it changes the semantics of a string (but I'm still processing…)\n23:02  * zpao isn't sure this is really quite a path we want to go down but it interesting to think about\n23:02 < balpert> yeah, I'm unsure too\n23:03 < balpert> a coworker asked though and it would seem to make JSX a bit more consistent\n23:03 <@lbljeffmo> also, string literals would act differently from refs to string lits\n23:03 < balpert> lbljeffmo: what do you mean?\n23:03 <@zpao> well, JSX ≠ templating, which it sounds like your coworker actually wants\n23:03 <@lbljeffmo> var stuff = \"dude\"; var myStuff = \"Hello {stuff}\"; <div title={stuff} />;\n23:04 <@lbljeffmo> we only have the opportunity to re-write the string if we can analyze it at compile time\n23:04 <@lbljeffmo> not at run time\n23:04 < balpert> correct\n23:04 < balpert> I definitely wouldn't expect that interpolation to work\n23:05 <@lbljeffmo> seems unclear to a noob though who hasn't thought about the depths of the transform though\n23:05 <@lbljeffmo> I'm inclined to suggest that this would be something you'd want to do with a templating library and then pass the result of the template processing in\n23:07 < balpert> lbljeffmo: I dunno, it seems pretty simple to have JSX interpolate {...} in attrs and element bodies\n23:07 < balpert> I don't think anyone who knows anything about how JSX works would get confused when var myStuff = \"Hello {stuff}\"; <div title={stuff} /> doesn't work\n23:08 <@lbljeffmo> ya maybe not\n23:09 < balpert> well, something to think about\n23:09 <@zpao> at that point we might as well just make jsx handlebars\n23:09 < balpert> obviously not a big deal\n23:10 <@zpao> handlerbars + xml\n23:10 <@lbljeffmo> but the \"jsx is not a templating tool\" argument still makes a lot of sense to me -- using a real templating utility seems more modular and less slippery-slopey down the new-templating-features slope\n23:13 < balpert> this particular feature doesn't feel at all like \"new features\" to me, but I agree with your general argument\n23:14 < balpert> obviously (to me, at least) it doesn't make sense to add loops or anything like that to JSX\n23:14 < balpert> at least, certainly not some {{#each ...}} thing\n23:14 <@lbljeffmo> see also: http://wiki.ecmascript.org/doku.php?id=harmony:quasis\n```\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
