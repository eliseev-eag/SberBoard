{
  "url": "https://api.github.com/repos/facebook/react/issues/14718",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14718/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14718/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14718/events",
  "html_url": "https://github.com/facebook/react/issues/14718",
  "id": 404290039,
  "node_id": "MDU6SXNzdWU0MDQyOTAwMzk=",
  "number": 14718,
  "title": "Unable to use useContext hook inline in Context.Provider",
  "user": {
    "login": "AlmeroSteyn",
    "id": 5063473,
    "node_id": "MDQ6VXNlcjUwNjM0NzM=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/5063473?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AlmeroSteyn",
    "html_url": "https://github.com/AlmeroSteyn",
    "followers_url": "https://api.github.com/users/AlmeroSteyn/followers",
    "following_url": "https://api.github.com/users/AlmeroSteyn/following{/other_user}",
    "gists_url": "https://api.github.com/users/AlmeroSteyn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AlmeroSteyn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AlmeroSteyn/subscriptions",
    "organizations_url": "https://api.github.com/users/AlmeroSteyn/orgs",
    "repos_url": "https://api.github.com/users/AlmeroSteyn/repos",
    "events_url": "https://api.github.com/users/AlmeroSteyn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AlmeroSteyn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2019-01-29T13:26:12Z",
  "updated_at": "2019-01-31T12:22:37Z",
  "closed_at": "2019-01-29T16:09:12Z",
  "author_association": "CONTRIBUTOR",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nNot sure if it is a bug or a feature yet. This relates to Hooks.\r\n\r\nIt could also be that this is all expected behaviour and one of the workarounds mentioned is required.\r\n\r\n**What is the current behavior?**\r\n\r\nI have a hook that depends on the `useContext` hook. Using it as follows works perfectly:\r\n\r\n```\r\nconst MyHookedComponent = () => {\r\n    const contextValue = useContext(DemoContext);\r\n\r\n    return (\r\n       //Do something with contextValue\r\n    )\r\n}\r\n\r\nconst MyContextProviderComponent = () => {\r\n\r\n   return (\r\n        <DemoContext.Provider value={someContextValue}>\r\n                <MyHookedComponent />\r\n         </DemoContext.Provider>\r\n   )\r\n}\r\n```\r\n\r\nWhat if I want to use the `getContext` hook inline in the same component that declares the `DemoContext.Provider` ?\r\n\r\n```\r\nconst MyContextProviderComponent = () => {\r\n       const contextValue = useContext(DemoContext); //Of course this fails due to the Context hierarchy.\r\n   return (\r\n        <DemoContext.Provider value={someContextValue}>\r\n                     //Do something with contextValue\r\n         </DemoContext.Provider>\r\n   )\r\n}\r\n```\r\n\r\nI seem to be unable to get this working.\r\n\r\n**Please note**:\r\n- I have a very good reason for solving my issue with Context and not passing props.\r\n- The implementation I show above looks trivial and dumb but it is the simplest way to illustrate what the use case is. In my implementation the `Provider` sits in a complex component that does a lot of data management which I really want to happen at this level.\r\n- The usual way to use this will be the first working version I noted above, it is only in the case where the user would want to use the hook inline inside the `Provider`.\r\n- I have searched for a couple of hours and tried various configurations without success, so my apologies if this is a duplicate of another issue.\r\n\r\n**What is the expected behavior?**\r\n\r\nAny method to consume context inline in the provider using the same re-usable hook without having to revert back to render props.\r\n\r\nI know I can solve this with **render props** but I am trying to convert an implementation using render props to hooks. I also know I can hoist the Context Provider higher up but in my implementation it would quadruple the code complexity to develop and maintain while introducing extra complexity into the user interface.\r\n\r\nAlso, by extracting the body inside the `Provider` to a new component I can also solve this but ideally I would not like to have a user do this for this use case.\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
