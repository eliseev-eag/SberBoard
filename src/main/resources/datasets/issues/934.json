{
  "url": "https://api.github.com/repos/facebook/react/issues/934",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/934/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/934/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/934/events",
  "html_url": "https://github.com/facebook/react/pull/934",
  "id": 25859537,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MTE2NDc5Mjk=",
  "number": 934,
  "title": "Shortened generated \"data-reactid\"",
  "user": {
    "login": "syranide",
    "id": 1714255,
    "node_id": "MDQ6VXNlcjE3MTQyNTU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/syranide",
    "html_url": "https://github.com/syranide",
    "followers_url": "https://api.github.com/users/syranide/followers",
    "following_url": "https://api.github.com/users/syranide/following{/other_user}",
    "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
    "organizations_url": "https://api.github.com/users/syranide/orgs",
    "repos_url": "https://api.github.com/users/syranide/repos",
    "events_url": "https://api.github.com/users/syranide/events{/privacy}",
    "received_events_url": "https://api.github.com/users/syranide/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2014-01-18T12:31:22Z",
  "updated_at": "2014-06-17T23:24:17Z",
  "closed_at": "2014-01-20T21:26:43Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/934",
    "html_url": "https://github.com/facebook/react/pull/934",
    "diff_url": "https://github.com/facebook/react/pull/934.diff",
    "patch_url": "https://github.com/facebook/react/pull/934.patch"
  },
  "body": "Previously generated IDs looked like:\n\n`.r[0].[0].{x}[0]{y}.[17]`\n\nThat has now been shortened to:\n\n`.0.0.$x:0:$y.g`\n\nThe older ID is 60% longer by comparison (above), and this new ID is still surprisingly readable in my opinion. It's also worth mentioning that I use `base-36` numerical indices instead to save further space, we could technically use `base-62` but I don't it would be worth it. It is technically possible to avoid `$` for keys but it would affect some ID functions that would have to check for both for an additional separator over the default `. SEPARATOR`, and I believe that keys are longer and less common anyway, so it would not be worth trade-off.\n\nPS. The React Chrome extension doesn't even need to be updated for this PR.\n#### Performance\n\nI did a torture test of it, mounting and unmounting (the same) randomly generated tree of divs, I could measure between 3-9% performance increase depending on browser, shortening `data-reactid` also helped measurably. Interestingly enough, using `reactid` resulted in significantly poorer performance on at least IE8.\n#### Size\n\nWhile testing on the React implementation of TodoMVC, with a few items, the entire body innerHTML is 7545bytes and the IDs are a total of 3550bytes of it, a whole 47% of it is IDs and I'm not even including `data-reactid`. Using the shorter IDs, that same page is 6440bytes and the keys are 2406bytes. That is a difference of 1105bytes, so with the old IDs the HTML was 17% larger and the IDs themselves were 48% larger and that is with TodoMVC's large item keys.\n#### Future improvements\n\nThere are even more efficient ways of cutting down the \"ID bloat\", but this is a very straight-forward implementation that should suffice for now, without being a head-ache. Apart from the refactoring/improvement below, it only modifies `traverseAllChildren` and no other React internals.\n\nI also experimented quickly with a proof-of-concept implementation that stores the full IDs in memory instead, with only minimal reference ID generated for each node, definitely doable. Server-rendering and the chrome extension would have to be modified accordingly though.\n#### Technical details\n\nI should mention that `traverseAllChildren` now generate the IDs it returns with prefixed `.`, technically this is because the order of the keys is otherwise ruined. Practically, this means that the use of the separator is not as spread out as it was before. And this has no practical difference other than for tests on IDs, which are already affected.\n\n```\n   raw     gz Compared to master @ 8ca62bd022b535386da08b8d2ba59b951d3cfc2a\n     =      = build/JSXTransformer.js\n     =      = build/react-test.js\n  +250    +43 build/react-with-addons.js\n   +84     +7 build/react-with-addons.min.js\n  +250    +44 build/react.js\n   +84     +9 build/react.min.js\n```\n",
  "closed_by": {
    "login": "petehunt",
    "id": 239742,
    "node_id": "MDQ6VXNlcjIzOTc0Mg==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/239742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/petehunt",
    "html_url": "https://github.com/petehunt",
    "followers_url": "https://api.github.com/users/petehunt/followers",
    "following_url": "https://api.github.com/users/petehunt/following{/other_user}",
    "gists_url": "https://api.github.com/users/petehunt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/petehunt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/petehunt/subscriptions",
    "organizations_url": "https://api.github.com/users/petehunt/orgs",
    "repos_url": "https://api.github.com/users/petehunt/repos",
    "events_url": "https://api.github.com/users/petehunt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/petehunt/received_events",
    "type": "User",
    "site_admin": false
  }
}
