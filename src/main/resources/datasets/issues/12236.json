{
  "url": "https://api.github.com/repos/facebook/react/issues/12236",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12236/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12236/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12236/events",
  "html_url": "https://github.com/facebook/react/issues/12236",
  "id": 297871716,
  "node_id": "MDU6SXNzdWUyOTc4NzE3MTY=",
  "number": 12236,
  "title": "Why does the new Context require an explicit interface?",
  "user": {
    "login": "thenewvu",
    "id": 6092585,
    "node_id": "MDQ6VXNlcjYwOTI1ODU=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6092585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/thenewvu",
    "html_url": "https://github.com/thenewvu",
    "followers_url": "https://api.github.com/users/thenewvu/followers",
    "following_url": "https://api.github.com/users/thenewvu/following{/other_user}",
    "gists_url": "https://api.github.com/users/thenewvu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/thenewvu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/thenewvu/subscriptions",
    "organizations_url": "https://api.github.com/users/thenewvu/orgs",
    "repos_url": "https://api.github.com/users/thenewvu/repos",
    "events_url": "https://api.github.com/users/thenewvu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/thenewvu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-02-16T18:02:23Z",
  "updated_at": "2018-02-16T19:29:03Z",
  "closed_at": "2018-02-16T19:28:51Z",
  "author_association": "NONE",
  "body": "I just read a post about the new Context, from what I understood, we're creating more problems rather than solving one! Please correct me if I was wrong.\r\n\r\nThe previous Context, in my opinion, it achieved what called `implicit interface`, it means you don't need to `import` explicitly an API to use it, instead you just define what an API should provide (using `prop-types`) and expect implicitly that it will be provided at runtime. This design helps to decouple API providers from API consumers in the React component tree, which I believe, the original idea of the Context.\r\n\r\n`implicit interface` was also applied in Golang, you would understand what I'm talking about if you have used its `interfaces`.\r\n\r\nBut the new Context ... consider below example:\r\n\r\n```javascript\r\n// x.js\r\nconst X = React.createContext('x')\r\n...\r\nexport default X\r\n\r\n// consumer.js\r\nimport X from '../../complex/project/x' // the problem!\r\n\r\nclass Something extends React.Component {\r\n  render() {\r\n    return (\r\n        <X.Consumer>...</X.Consumer>\r\n    )\r\n  }\r\n}\r\n```\r\n\r\nSo from now on, we have to `import` the X context in every consumers of X?\r\n\r\nI've worked in this industry for 8 years and got pain enough to understand how bad when we have a complex and heavy dependency graph in our code.\r\n\r\nI'm not good at explaining things in English, please help me to explain further the problem we're having here if you got me.\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
