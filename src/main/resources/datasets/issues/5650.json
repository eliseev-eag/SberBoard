{
  "url": "https://api.github.com/repos/facebook/react/issues/5650",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5650/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5650/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5650/events",
  "html_url": "https://github.com/facebook/react/issues/5650",
  "id": 121797526,
  "node_id": "MDU6SXNzdWUxMjE3OTc1MjY=",
  "number": 5650,
  "title": "Optimizing componentWillReceiveProps and shouldComponentUpdate",
  "user": {
    "login": "baaygun",
    "id": 386714,
    "node_id": "MDQ6VXNlcjM4NjcxNA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/386714?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/baaygun",
    "html_url": "https://github.com/baaygun",
    "followers_url": "https://api.github.com/users/baaygun/followers",
    "following_url": "https://api.github.com/users/baaygun/following{/other_user}",
    "gists_url": "https://api.github.com/users/baaygun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/baaygun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/baaygun/subscriptions",
    "organizations_url": "https://api.github.com/users/baaygun/orgs",
    "repos_url": "https://api.github.com/users/baaygun/repos",
    "events_url": "https://api.github.com/users/baaygun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/baaygun/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 40929155,
      "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
      "name": "Type: Question",
      "color": "cc317c",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2015-12-11T21:45:33Z",
  "updated_at": "2016-01-06T13:20:29Z",
  "closed_at": "2016-01-06T06:21:58Z",
  "author_association": "NONE",
  "body": "React component lifecycle dictates that when new props roll in, `componentWillReceiveProps` gets called, where you can calculate the new state and set it without a second cycle. Afterwards, shouldComponentUpdate gets called and we can compare props and state of last cycle with the next one.\n\nHowever, if state is a product of the props, it makes more sense to check whether the props have changed before calculating the state, so unnecessary calculations can be avoided. This produces some ugly looking code where `componentWillReceiveProps` first runs the code that would otherwise be in `shouldComponentUpdate` and based on that result sets a new state, or terminates. \n\nSimplified Example:\n\n```\ncomponentWillReceiveProps: function (nextProps) {\n    if (nextProps === this.props) {\n        return;\n    }\n\n    // Calculate new state\n    this.setState(...);\n},\n\nshouldComponentUpdate: function (nextProps, nextState) {\n    return this.state !== nextState;\n}\n```\n\nIs there a cleaner way of approaching this where no resources are wasted on unnecessary state calculations?\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
