{
  "url": "https://api.github.com/repos/facebook/react/issues/17016",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/17016/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/17016/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/17016/events",
  "html_url": "https://github.com/facebook/react/issues/17016",
  "id": 502557538,
  "node_id": "MDU6SXNzdWU1MDI1NTc1Mzg=",
  "number": 17016,
  "title": "synchronous setState makes manage-management w/ hooks very hard",
  "user": {
    "login": "drcmda",
    "id": 2223602,
    "node_id": "MDQ6VXNlcjIyMjM2MDI=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/2223602?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drcmda",
    "html_url": "https://github.com/drcmda",
    "followers_url": "https://api.github.com/users/drcmda/followers",
    "following_url": "https://api.github.com/users/drcmda/following{/other_user}",
    "gists_url": "https://api.github.com/users/drcmda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drcmda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drcmda/subscriptions",
    "organizations_url": "https://api.github.com/users/drcmda/orgs",
    "repos_url": "https://api.github.com/users/drcmda/repos",
    "events_url": "https://api.github.com/users/drcmda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drcmda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-10-04T10:27:54Z",
  "updated_at": "2019-10-04T10:47:37Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "It's about the dreaded \"zombie-child\" problem, which is a known problem, but i would still like to open this issue in order to track it. It currently throws a major wrench into our projects at work (which all use mixed reconcilers).\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nI consider it a bug.\r\n\r\n**What is the current behavior?**\r\n\r\nThe long explanation is here: https://kaihao.dev/posts/Stale-props-and-zombie-children-in-Redux\r\n\r\nIn short, when any dispatch, for instance via useState/useReducer.set(...), can cause an _immediate_ render pass, it allows leaf-components to render before their parents. Components that shouldn't even be rendering, because their parents would exclude them, now do render and access data which doesn't exist in the state model any longer. Rendering isn't deterministic and hierarchical any longer.\r\n\r\nDan Abramov acknowledges this behaviour here: https://twitter.com/dan_abramov/status/959507572951797761\r\n\r\nThe current solution that Sebastian Markb√•ge suggested is to wrap dispatches into batchedUpdates.\r\n\r\nBut that doesn't work in mixed-mode React, where multiple reconcilers are active. So the same component will work in one reconciler, but crash in another, unless the dispatch is wrapped into each batchedUpdates from each reconciler - which puts the burden onto the consumer of the component and makes the component platform dependent.\r\n\r\nThis problem affects all flex based state managers. Redux for instance. Some fail outright, some do implement batchedUpdates (like Redux), but they will all fail in mixed-mode.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**\r\n\r\nhttps://github.com/react-spring/zustand/issues/64\r\n\r\n**What is the expected behavior?**\r\n\r\nAs Dan Abramov himself said on Twitter, any dispatch should be async. But this was in feb 2018. Is there any news regarding this behaviour?\r\n\r\nThe churn outlined in the kaihao.dev article above, just to get simple state management, is almost overwhelming. Its conclusion is \"Our hands are tied, there's no solution yet to be known.\" I know this probably isn't a pressing issue, but i hope it can be prioritized.",
  "closed_by": null
}
