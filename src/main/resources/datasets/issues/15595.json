{
  "url": "https://api.github.com/repos/facebook/react/issues/15595",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15595/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15595/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15595/events",
  "html_url": "https://github.com/facebook/react/issues/15595",
  "id": 442017253,
  "node_id": "MDU6SXNzdWU0NDIwMTcyNTM=",
  "number": 15595,
  "title": "React useState Hook don't rerender the changes",
  "user": {
    "login": "Pankajmalhan",
    "id": 8931058,
    "node_id": "MDQ6VXNlcjg5MzEwNTg=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8931058?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Pankajmalhan",
    "html_url": "https://github.com/Pankajmalhan",
    "followers_url": "https://api.github.com/users/Pankajmalhan/followers",
    "following_url": "https://api.github.com/users/Pankajmalhan/following{/other_user}",
    "gists_url": "https://api.github.com/users/Pankajmalhan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Pankajmalhan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Pankajmalhan/subscriptions",
    "organizations_url": "https://api.github.com/users/Pankajmalhan/orgs",
    "repos_url": "https://api.github.com/users/Pankajmalhan/repos",
    "events_url": "https://api.github.com/users/Pankajmalhan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Pankajmalhan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-05-09T02:10:56Z",
  "updated_at": "2019-05-09T15:19:20Z",
  "closed_at": "2019-05-09T15:19:20Z",
  "author_association": "NONE",
  "body": "```jsx\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Example() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [count, setCount] = useState({\r\n    name: \"pankaj\",\r\n    age: 12,\r\n    city: \"alwar\"\r\n  });\r\n  const [data, updateData] = useState([\r\n    { id: 1, name: \"Pankaj 1\" },\r\n    { id: 2, name: \"Pankaj 2\" },\r\n    { id: 3, name: \"Pankaj 3\" },\r\n    { id: 4, name: \"Pankaj 4\" }\r\n  ]);\r\n\r\n  const updateStateData = id => {\r\n    let item = data.find(item => item.id == id);\r\n    item.name += \" updated 1\";\r\n    updateData(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count.name} name</p>\r\n      <p>You clicked {count.age} age</p>\r\n      <p>You clicked {count.city} city</p>\r\n      <button\r\n        onClick={() =>\r\n          setCount({\r\n            name: count.name + \" updated\",\r\n            age: count.age,\r\n            city: count.city\r\n          })\r\n        }\r\n      >\r\n        Update Name\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          setCount({ name: count.name, age: count.age + 10, city: count.city })\r\n        }\r\n      >\r\n        Update Age\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          setCount({\r\n            name: count.name,\r\n            age: count.age,\r\n            city: count.city + \" updated\"\r\n          })\r\n        }\r\n      >\r\n        Update City\r\n      </button>\r\n\r\n      <div>\r\n        {data.map(item => {\r\n          console.log({ item });\r\n          return (\r\n            <div>\r\n              <p>{item.id}</p>\r\n              <p>{item.name}</p>\r\n              <button onClick={() => updateStateData(item.id)}>Update</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n```\r\n\r\nI create a functional component and in this component, I am using the useState hook,  the second useState([data,updateData])  hook contains an array of objects and I am displaying all items in the component. With each rendered item there is button and onClick of this button I take the id of item and update the name of that particular item and assign newly updated array to \"updateData\" method that will update data of useState hook. \r\nBut now the issue is that array is going update(data) but changes are not reflecting in view.\r\n If I make the below replace the code of \"updateStateData\" method with below code then its work fine\r\n\r\n const updateStateData = (id) => {\r\n        let item = data.find(item => item.id == id);\r\n        item.name += ' updated 1';\r\n        updateData([...data]);\r\n    }\r\n\r\nSo, why I need to assign a new array([...data]) to reflect the changes. ",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
