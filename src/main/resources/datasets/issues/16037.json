{
  "url": "https://api.github.com/repos/facebook/react/issues/16037",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16037/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16037/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16037/events",
  "html_url": "https://github.com/facebook/react/issues/16037",
  "id": 463317050,
  "node_id": "MDU6SXNzdWU0NjMzMTcwNTA=",
  "number": 16037,
  "title": "Return render function in hooks ?",
  "user": {
    "login": "stonexer",
    "id": 6255130,
    "node_id": "MDQ6VXNlcjYyNTUxMzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6255130?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stonexer",
    "html_url": "https://github.com/stonexer",
    "followers_url": "https://api.github.com/users/stonexer/followers",
    "following_url": "https://api.github.com/users/stonexer/following{/other_user}",
    "gists_url": "https://api.github.com/users/stonexer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stonexer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stonexer/subscriptions",
    "organizations_url": "https://api.github.com/users/stonexer/orgs",
    "repos_url": "https://api.github.com/users/stonexer/repos",
    "events_url": "https://api.github.com/users/stonexer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stonexer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-07-02T16:11:48Z",
  "updated_at": "2019-07-02T17:04:33Z",
  "closed_at": "2019-07-02T17:04:33Z",
  "author_association": "CONTRIBUTOR",
  "body": "Example: \r\n\r\nhttps://codesandbox.io/s/usemodal-z715z\r\n\r\n```jsx\r\nconst useModal = () => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showModal = useCallback(() => setVisible(true), [])\r\n  const hideModal = useCallback(() => setVisible(false), [])\r\n\r\n  const renderModal = () => (\r\n    <AntdModal visible={visible} onCancel={hideModal} onOk={hideModal} />\r\n  )\r\n\r\n  return {\r\n    showModal,\r\n    hideModal,\r\n    renderModal,\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const {renderModal, showModal} = useModal()\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={showModal}>Show</Button>\r\n      {renderModal()}\r\n    </div>\r\n  )\r\n}\r\n```\r\n\r\nI found this way to extract some render things and some local state in hooks. I'm wondering if there is performance issue or bad practice. \r\n\r\nI tried to return Component at beginning and then find [OldModal !== NewModal](https://www.reddit.com/r/reactjs/comments/9yq1l8/how_do_you_feel_about_a_hook_returning_components/) issue. But how about just return partial renderer?\r\n\r\n",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
