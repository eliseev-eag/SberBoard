{
  "url": "https://api.github.com/repos/facebook/react/issues/15114",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15114/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15114/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15114/events",
  "html_url": "https://github.com/facebook/react/issues/15114",
  "id": 421538450,
  "node_id": "MDU6SXNzdWU0MjE1Mzg0NTA=",
  "number": 15114,
  "title": "createPortal lost onClick event when container is ShadowRoot",
  "user": {
    "login": "qwabra",
    "id": 5960180,
    "node_id": "MDQ6VXNlcjU5NjAxODA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5960180?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwabra",
    "html_url": "https://github.com/qwabra",
    "followers_url": "https://api.github.com/users/qwabra/followers",
    "following_url": "https://api.github.com/users/qwabra/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwabra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwabra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwabra/subscriptions",
    "organizations_url": "https://api.github.com/users/qwabra/orgs",
    "repos_url": "https://api.github.com/users/qwabra/repos",
    "events_url": "https://api.github.com/users/qwabra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwabra/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 127893911,
      "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
      "name": "Component: DOM",
      "color": "fef2c0",
      "default": false
    },
    {
      "id": 710722093,
      "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
      "name": "Type: Needs Investigation",
      "color": "fbca04",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-03-15T14:12:42Z",
  "updated_at": "2019-03-27T22:38:45Z",
  "closed_at": null,
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n*bug*\r\n\r\n**What is the current behavior?**\r\ncreatePortal lost onClick event when container is ShadowRoot\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nGoogle Chrome : 73.0.3683.75 (x64)\r\n\r\n```json\r\n{\r\n    \"dependencies\": {\r\n        \"react\": \"16.8.1\",\r\n        \"react-dom\": \"16.8.1\"\r\n    }\r\n}\r\n```\r\n\r\n-------\r\n\r\noriginal: https://reactjs.org/docs/portals.html#event-bubbling-through-portals\r\n\r\nsandbox: https://jsfiddle.net/tLqvh8xg/\r\n\r\ncode:\r\n\r\n```ts\r\n\r\n// --\r\nconst appRoot = document.createElement('div')\r\n// --\r\nconst modalRoot = document.createElement('div')\r\nmodalRoot.dataset.desc = 'portal conteiner'\r\nconst isShadow = true\r\nlet modalRootShadow = null\r\nif (isShadow) modalRootShadow = modalRoot.attachShadow({ mode: \"closed\" })\r\n// --\r\ndocument.body.appendChild(appRoot)\r\ndocument.body.appendChild(modalRoot)\r\n// --\r\n\r\nclass Modal extends React.Component {\r\n\r\n    el: HTMLDivElement\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (isShadow) modalRootShadow.appendChild(this.el);\r\n        else modalRoot.appendChild(this.el);    // is ok\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (isShadow) modalRootShadow.removeChild(this.el);\r\n        else modalRoot.removeChild(this.el);    // is ok\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nclass Parent extends React.Component<{}, { clicks }> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { clicks: 0 };\r\n    }\r\n\r\n    handleClick = function handleClick() {\r\n        this.setState(state => ({\r\n            clicks: state.clicks + 1\r\n        }));\r\n    }.bind(this)\r\n\r\n    refHackClick = el => { el.addEventListener('click', this.handleClick) }\r\n    render() {\r\n        return (\r\n            <div data-desc=\"Parent\">\r\n                <p>Number of clicks: {this.state.clicks}</p>\r\n                <p>\r\n                    Open up the browser DevTools\r\n                    to observe that the button\r\n                    is not a child of the div\r\n                    with the onClick handler.\r\n                </p>\r\n                <Modal>\r\n                    <div className=\"modal\">\r\n                        <button onClick={this.handleClick}>Click</button>\r\n                        <button ref={this.refHackClick}>hackClick</button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<Parent />, appRoot);\r\n```",
  "closed_by": null
}
