{
  "url": "https://api.github.com/repos/facebook/react/issues/13029",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13029/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13029/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13029/events",
  "html_url": "https://github.com/facebook/react/issues/13029",
  "id": 331682836,
  "node_id": "MDU6SXNzdWUzMzE2ODI4MzY=",
  "number": 13029,
  "title": "Share ref with multiple ref handlers",
  "user": {
    "login": "joaovieira",
    "id": 474603,
    "node_id": "MDQ6VXNlcjQ3NDYwMw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/474603?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joaovieira",
    "html_url": "https://github.com/joaovieira",
    "followers_url": "https://api.github.com/users/joaovieira/followers",
    "following_url": "https://api.github.com/users/joaovieira/following{/other_user}",
    "gists_url": "https://api.github.com/users/joaovieira/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joaovieira/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joaovieira/subscriptions",
    "organizations_url": "https://api.github.com/users/joaovieira/orgs",
    "repos_url": "https://api.github.com/users/joaovieira/repos",
    "events_url": "https://api.github.com/users/joaovieira/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joaovieira/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 24,
  "created_at": "2018-06-12T17:29:51Z",
  "updated_at": "2019-09-04T06:22:02Z",
  "closed_at": "2018-08-02T17:16:15Z",
  "author_association": "NONE",
  "body": "Before React 16.3 we were able to proxy the same element ref to multiple listeners, for example, to grab hold of the element for internal purposes and also expose it publicly, like so:\r\n\r\n```jsx\r\nclass MyComponent extends Component {\r\n  attachRef = el => {\r\n    this.buttonEl = el;\r\n    this.props.buttonRef(el);\r\n  }\r\n\r\n  // Do something with `this.buttonEl`\r\n\r\n  render () {\r\n    return <button ref={this.attachRef}>Button</button>;\r\n  }\r\n}\r\n```\r\n\r\nAfter React 16.3 this is more complicated as the ref prop can be a function or an object:\r\n\r\n```jsx\r\nclass MyComponent extends Component {\r\n  buttonRef = React.createRef();\r\n\r\n  attachRef = el => {\r\n    this.buttonRef.current = el;\r\n    \r\n    if (typeof this.props.inputRef === 'function') {\r\n      this.props.inputRef(el);\r\n    } else {\r\n      this.props.inputRef.current = el;\r\n    }\r\n  }\r\n\r\n  // Do something with `this.buttonRef.current`\r\n\r\n  render () {\r\n    return <button ref={this.attachRef}>Button</button>;\r\n  }\r\n}\r\n```\r\n\r\n**First, is this the right approach?** \r\n\r\nAnd if so, [Typescript types](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/index.d.ts#L53) say:\r\n\r\n```ts\r\ninterface RefObject<T> {\r\n  readonly current: T | null;\r\n}\r\n```\r\n\r\nWhich prevents us from assigning to `current`. **Shouldn't it not be readonly?**",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
