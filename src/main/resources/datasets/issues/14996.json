{
  "url": "https://api.github.com/repos/facebook/react/issues/14996",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14996/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14996/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14996/events",
  "html_url": "https://github.com/facebook/react/pull/14996",
  "id": 416341149,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjU3NjI5NjQ1",
  "number": 14996,
  "title": "[ESLint] Treat functions that don't capture anything as static",
  "user": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-03-02T01:40:16Z",
  "updated_at": "2019-03-06T08:05:24Z",
  "closed_at": "2019-03-05T21:07:38Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/14996",
    "html_url": "https://github.com/facebook/react/pull/14996",
    "diff_url": "https://github.com/facebook/react/pull/14996.diff",
    "patch_url": "https://github.com/facebook/react/pull/14996.patch"
  },
  "body": "The exact heuristics will take me some time to figure out. This is just the first minimal draft.\r\n\r\nIt lifts the restriction on specifying functions as deps where it's safe. In particular, a function like\r\n\r\n```js\r\n  function tick() {\r\n    setCount(c => c + 1);\r\n  }\r\n```\r\n\r\nwould be considered safe because it doesn't capture any render-phase values except knowingly static ones (we only do this if `setCount` comes from `useState` Hook).\r\n\r\nSo we could omit it:\r\n\r\n```js\r\n  useEffect(() => {\r\n    let id = setInterval(() => {\r\n      tick();\r\n    }, 1000);\r\n    return () => clearInterval(id);\r\n  }, []); // No warning\r\n```\r\n\r\nBut if we change `tick` to be\r\n\r\n```js\r\n  function tick() {\r\n    setCount(count + 1);\r\n  }\r\n```\r\n\r\nit would warn, asking you to add `tick` to dependencies.\r\n\r\nWe only do this check one level deep. So it helps for helper functions that only set state or dispatch, but you might end up in a situation where you can't add a prop to one of them without triggering warnings for all effects using it. Ideally we might want to push you to `useReducer` a bit sooner but I haven't figured out what a good flow is.\r\n\r\n**This PR makes the rule strictly more relaxed. It doesn't add any new behaviors, it just fires the warnings less often in cases where it's safe.**\r\n\r\nIn follow-ups, we'll need to tweak the behavior and warnings to be more useful for functions. Such as we might want to detect the above special case and *suggest the updater form* if it would fix the warning. Similarly, we could detect always-new deps (like `tick`) and in that case suggest wrapping in `useCallback`.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
