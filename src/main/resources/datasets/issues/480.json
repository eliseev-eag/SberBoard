{
  "url": "https://api.github.com/repos/facebook/react/issues/480",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/480/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/480/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/480/events",
  "html_url": "https://github.com/facebook/react/pull/480",
  "id": 22160691,
  "node_id": "MDExOlB1bGxSZXF1ZXN0OTcwMTU5Mw==",
  "number": 480,
  "title": "JSX whitespace coalescing rules",
  "user": {
    "login": "syranide",
    "id": 1714255,
    "node_id": "MDQ6VXNlcjE3MTQyNTU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/syranide",
    "html_url": "https://github.com/syranide",
    "followers_url": "https://api.github.com/users/syranide/followers",
    "following_url": "https://api.github.com/users/syranide/following{/other_user}",
    "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
    "organizations_url": "https://api.github.com/users/syranide/orgs",
    "repos_url": "https://api.github.com/users/syranide/repos",
    "events_url": "https://api.github.com/users/syranide/events{/privacy}",
    "received_events_url": "https://api.github.com/users/syranide/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "jeffmo",
    "id": 498293,
    "node_id": "MDQ6VXNlcjQ5ODI5Mw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/498293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jeffmo",
    "html_url": "https://github.com/jeffmo",
    "followers_url": "https://api.github.com/users/jeffmo/followers",
    "following_url": "https://api.github.com/users/jeffmo/following{/other_user}",
    "gists_url": "https://api.github.com/users/jeffmo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jeffmo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jeffmo/subscriptions",
    "organizations_url": "https://api.github.com/users/jeffmo/orgs",
    "repos_url": "https://api.github.com/users/jeffmo/repos",
    "events_url": "https://api.github.com/users/jeffmo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jeffmo/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "jeffmo",
      "id": 498293,
      "node_id": "MDQ6VXNlcjQ5ODI5Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/498293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeffmo",
      "html_url": "https://github.com/jeffmo",
      "followers_url": "https://api.github.com/users/jeffmo/followers",
      "following_url": "https://api.github.com/users/jeffmo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeffmo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeffmo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeffmo/subscriptions",
      "organizations_url": "https://api.github.com/users/jeffmo/orgs",
      "repos_url": "https://api.github.com/users/jeffmo/repos",
      "events_url": "https://api.github.com/users/jeffmo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeffmo/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2013-11-05T23:38:27Z",
  "updated_at": "2014-09-28T09:27:19Z",
  "closed_at": "2014-01-23T20:32:57Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/480",
    "html_url": "https://github.com/facebook/react/pull/480",
    "diff_url": "https://github.com/facebook/react/pull/480.diff",
    "patch_url": "https://github.com/facebook/react/pull/480.patch"
  },
  "body": "### Current rules\n\n```\n{1}··Aaa··Bbb··{2}··{3}  →  {1}·Aaa··Bbb·{2}{3}\n{1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}·Aaa·Bbb·{2}{3}\n```\n\nWhile they seem reasonable to some extent, they are quite nonsensical from a theoretical perspective.\n\n`{expr}` is treated identically to `<tag>` and `</tag>`\n`· space` `¬ newline`\n### Whitespace rules\n\n_1. Remove whitespace, makes no sense whatsoever._\n\n**2. Replace whitespace with a space, consistent output**\nMinimal whitespace is always produced and it is consistent with normal browser rendering, any and all special whitespace requirements are explicit and easy to spot in the code.\n\n**3. Replace whitespace with spaces, faithful to source code**\nUnintended double-spaces are possible but unlikely and normally renders identically to 2. Interesting in that it might encourage less hacky `&nbsp;` and more `white-space: pre`, all things considered it seems like a feature.\n\n_4. Keep whitespace as is, identical to source_\nNormally renders identically to 3 but relying on non-escaped non-space whitespace seems really finicky and hardly something that should be encouraged, non-space whitespace should be explicitly injected.\n\n```\n1.  {1}··Aaa··Bbb··{2}··{3}  →  {1}AaaBbb{2}{3}\n2.  {1}··Aaa··Bbb··{2}··{3}  →  {1}·Aaa·Bbb·{2}·{3}\n3.  {1}··Aaa··Bbb··{2}··{3}  →  {1}··Aaa··Bbb··{2}··{3}\n4.  {1}··Aaa··Bbb··{2}··{3}  →  {1}··Aaa··Bbb··{2}··{3}\n```\n### Newline rules\n\n**A. Remove newlines, consistent and uncomplicated**\nText requires explicit whitespace injection, slightly cumbersome and ugly in \"worst case\".\n\n**B. Remove newlines but insert a space between text**\nMost likely what the user wants without having to be overly explicit, implicit space can be overridden with braces.\n\n_C. Remove newlines, but insert a space before/after text_\nThis may seem kind of interesting at first, even though it's a bit weird. However this is, in its basic form, the root cause of all the excess whitespace that is creeping in at the start and end of every text with the current rules. In my opinion, the only way this rule makes sense (without being a burden) is if it _does not match_ after an opening tag or before a closing tag... simply put, it would only add a space when text is sibling to a node (or a brace). Which would make it quite magic, which isn't necessarily bad, but my gut feeling says it is. Being explicit in ambiguous cases is preferable to it sometimes making the wrong decision (especially when it comes to tests), and the rules would be very complex to explain.\n\n_D. Remove newlines but insert a newline between text_\nLikely unintended and very unlikely to be useful, easy to break if relying on identical text output, implicit newline can be overriden with braces.\n\n**E. Remove newlines before and after tags, faithful to source code**\nAlthough there are vaguely potential uses for this, that much text should never be inlined, be explicit if you absolutely must, implicit newlines can be overriden with braces.\n\n_F. Keep newlines as is, identical to source but whitespace is trimmed_\nThis is a horrible feature in HTML, let's not go there.\n\n```\nA.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}AaaBbb{2}{3}\nB.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}Aaa·Bbb{2}{3}\nC.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}·Aaa·Bbb·{2}{3}\nD.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}Aaa¬Bbb{2}{3}\nE.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}Aaa¬¬Bbb{2}{3}\nF.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}\n```\n\n_All lines are trimmed from leading and trailing whitespace, indenting code **must never** interfere with output in my opinion._\n\n---\n### Contenders\n\n**2A/2B. Minimal whitespace, consistent output, encourage explicit whitespace**\nThe user is encouraged to be explicit in special-cases. With 2A we assume nothing, slightly cumbersome/ugly when dealing with moderate amounts of text, but very straight-forward. With 2B we reasonably assume that multi line texts should be separated by a space, the user can override if necessary.\n\n```\n2.  {1}··Aaa··Bbb··{2}··{3}  →  {1}·Aaa·Bbb·{2}·{3}\nA.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}AaaBbb{2}{3}\nB.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}Aaa·Bbb{2}{3}\n```\n\n**3A/B. Additional whitespace is most likely intentional, but very rarely useful**\nAlthough in my opinion this is largely because of the largely unknown `white-space: pre`, although still limited in usefulness. Otherwise same as 2A/B, except that 3B has a bit weird mix of keeping and generating whitespace, but results are intuitive and straight-forward still.\n\n```\n3.  {1}··Aaa··Bbb··{2}··{3}  →  {1}··Aaa··Bbb··{2}··{3}\nA.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}AaaBbb{2}{3}\nB.  {1}¬¬Aaa¬¬Bbb¬¬{2}¬¬{3}  →  {1}Aaa·Bbb{2}{3}\n```\n\n**My personal vote goes to 3B at this time.**\n\nIt's also worth mentioning that ALL whitespace rules can be overriden with braces, so none of these rules are able to exclude any useful behavior, it can only make the resulting code more or less ugly.\n\nI would also strongly recommend https://github.com/facebook/react/pull/489 to cut down on braces exploding into spans (especially when transforming existing code as it would add braces in a lot of places, generating lots and lots of unnecessary spans).\n\n---\n### Legacy JSX\n\nSeeing as there's probably already a bit of code out there using JSX, I've written a first implementation of a tool that converts existing JSX files so that they continue to produce **identical output** even after switching to these new whitespace rules (final implementation is awaiting final verdict on which whitespace rules we want). This obviously potentially uglifies the code a bit with `{' '}`, but they are easy to spot, and each transformation in the tool is optional, including even using `{(' ')}` as space to make it more obvious what's auto-generated.\n\nhttps://github.com/syranide/react/compare/jsx-legacy-whitespace-tool\n",
  "closed_by": {
    "login": "jeffmo",
    "id": 498293,
    "node_id": "MDQ6VXNlcjQ5ODI5Mw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/498293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jeffmo",
    "html_url": "https://github.com/jeffmo",
    "followers_url": "https://api.github.com/users/jeffmo/followers",
    "following_url": "https://api.github.com/users/jeffmo/following{/other_user}",
    "gists_url": "https://api.github.com/users/jeffmo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jeffmo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jeffmo/subscriptions",
    "organizations_url": "https://api.github.com/users/jeffmo/orgs",
    "repos_url": "https://api.github.com/users/jeffmo/repos",
    "events_url": "https://api.github.com/users/jeffmo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jeffmo/received_events",
    "type": "User",
    "site_admin": false
  }
}
