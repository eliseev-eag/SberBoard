{
  "url": "https://api.github.com/repos/facebook/react/issues/12308",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12308/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12308/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12308/events",
  "html_url": "https://github.com/facebook/react/issues/12308",
  "id": 301078737,
  "node_id": "MDU6SXNzdWUzMDEwNzg3Mzc=",
  "number": 12308,
  "title": "Reset state",
  "user": {
    "login": "qtbit",
    "id": 25822015,
    "node_id": "MDQ6VXNlcjI1ODIyMDE1",
    "avatar_url": "https://avatars3.githubusercontent.com/u/25822015?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qtbit",
    "html_url": "https://github.com/qtbit",
    "followers_url": "https://api.github.com/users/qtbit/followers",
    "following_url": "https://api.github.com/users/qtbit/following{/other_user}",
    "gists_url": "https://api.github.com/users/qtbit/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qtbit/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qtbit/subscriptions",
    "organizations_url": "https://api.github.com/users/qtbit/orgs",
    "repos_url": "https://api.github.com/users/qtbit/repos",
    "events_url": "https://api.github.com/users/qtbit/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qtbit/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-02-28T15:55:36Z",
  "updated_at": "2018-03-27T22:56:45Z",
  "closed_at": "2018-03-27T22:56:19Z",
  "author_association": "NONE",
  "body": "I'd like to have a function that would reset all the state of react to start rendering from scratch again.\r\n\r\nCurrently, the code below causes a duplication of virtual dom. The React tab in devtools shows `<App />` node twice.\r\n\r\n```\r\ndocument.body.innerHTML = '<div id=\"app\"></div>';\r\nReactDOM.render(<App />, document.querySelector(\"#app\"));\r\n\r\n// page change\r\n\r\ndocument.body.innerHTML = '<div id=\"app\"></div>';\r\nReactDOM.render(<App />, document.querySelector(\"#app\"));\r\n```\r\n\r\nIt is possible to unmount it before the container element is lost to prevent the duplication of vdom.\r\n\r\n```\r\ndocument.body.innerHTML = '<div id=\"app\"></div>';\r\nReactDOM.render(<App />, document.querySelector(\"#app\"));\r\nReactDOM.unmountComponentAtNode(document.querySelector(\"#app\")); // <--- unmount and remove\r\n\r\n// page change\r\n\r\ndocument.body.innerHTML = '<div id=\"app\"></div>';\r\nReactDOM.render(<App />, document.querySelector(\"#app\"));\r\n```\r\n\r\nHowever, sometimes it is difficult to bind to an event or change a router code in a legacy app where React is used for rendering a page. The page is destroyed when the router decides to change the page to another and React don't get the same container element again.\r\n\r\nSince you can't call `ReactDOM.unmountComponentAtNode` before the change, nor after the change (before rendering) with the lost container element, it would be useful to have a function to reset all the React state before rendering the new page.\r\n\r\n```\r\ndocument.body.innerHTML = '<div id=\"app\"></div>';\r\nReactDOM.render(<App />, document.querySelector(\"#app\"));\r\n\r\n// page change\r\n\r\ndocument.body.innerHTML = '<div id=\"app\"></div>';\r\nReactDOM.reset();  // <--- I don't care about the previous state, I want to render the component from scratch (as there would be no rendering before)\r\nReactDOM.render(<App />, document.querySelector(\"#app\"));\r\n```\r\n\r\nThe name doesn't have to be called `reset` or be within `ReactDOM`. The point here is that the rendering should not duplicate virtual dom since the container element was changed.\r\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
