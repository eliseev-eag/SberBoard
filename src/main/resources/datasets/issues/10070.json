{
  "url": "https://api.github.com/repos/facebook/react/issues/10070",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10070/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10070/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10070/events",
  "html_url": "https://github.com/facebook/react/issues/10070",
  "id": 239393451,
  "node_id": "MDU6SXNzdWUyMzkzOTM0NTE=",
  "number": 10070,
  "title": "Don't convert attributes for DOM elements to strings for custom elements",
  "user": {
    "login": "trusktr",
    "id": 297678,
    "node_id": "MDQ6VXNlcjI5NzY3OA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/297678?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trusktr",
    "html_url": "https://github.com/trusktr",
    "followers_url": "https://api.github.com/users/trusktr/followers",
    "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
    "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
    "organizations_url": "https://api.github.com/users/trusktr/orgs",
    "repos_url": "https://api.github.com/users/trusktr/repos",
    "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trusktr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 127893911,
      "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
      "name": "Component: DOM",
      "color": "fef2c0",
      "default": false
    },
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2017-06-29T07:49:15Z",
  "updated_at": "2018-01-05T13:53:54Z",
  "closed_at": "2018-01-05T13:53:54Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nReact converts values to strings before passing them to the native `setAttribute` methods of DOM elements.\r\n\r\n**What is the expected behavior?**\r\n\r\nCustom Elements are landing in browsers. It is possible for Custom Elements to extend `setAttribute` (at least in Chrome) to do custom things with input values before passing onto `super.setAttribute()`.\r\n\r\nThis means that Custom Element authors can accept values other than strings, which can bring performance benefits. For example, imagine Custom Elements designed for rendering to WebGL, and when using them imperatively, the overhead of strings can be avoided.\r\n\r\nFor example, suppose we have this class:\r\n\r\n```js\r\ncustomElements.define('gl-mesh', class extends HTMLElement {\r\n  setAttribute(attr, value) {\r\n    if (value instanceof DOMMatrix) {\r\n        // use raw numbers here, for performance.\r\n    }\r\n    else if (typeof value == 'string') {\r\n        // otherwise, parse a string, which is slower.\r\n    }\r\n    super.setAttribute(attr, value)\r\n  }\r\n})\r\n```\r\n\r\nIf React converts values to strings before ever passing them into `setAttribute`, then Custom Element authors can not allow end users to benefit from performance improvements.\r\n\r\nBrowsers allow anything to be passed into `setAttribute`, so React should do the same. If a Custom Element doesn't extend `setAttribute`, the native super class will do the string conversion anyways, so React doesn't have to.\r\n\r\nIn my case, this would be awesome because then I could pass number-based values to my webgl-rendering Custom Elements, and propagate those directly into WebGL without having to convert strings to numbers every tick (for hundreds if not thousands of WebGL objects).\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n15.6",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
