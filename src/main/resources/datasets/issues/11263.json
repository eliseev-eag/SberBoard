{
  "url": "https://api.github.com/repos/facebook/react/issues/11263",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/11263/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/11263/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/11263/events",
  "html_url": "https://github.com/facebook/react/issues/11263",
  "id": 266317253,
  "node_id": "MDU6SXNzdWUyNjYzMTcyNTM=",
  "number": 11263,
  "title": "New way to bind event handler function",
  "user": {
    "login": "bgnx",
    "id": 30298641,
    "node_id": "MDQ6VXNlcjMwMjk4NjQx",
    "avatar_url": "https://avatars3.githubusercontent.com/u/30298641?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bgnx",
    "html_url": "https://github.com/bgnx",
    "followers_url": "https://api.github.com/users/bgnx/followers",
    "following_url": "https://api.github.com/users/bgnx/following{/other_user}",
    "gists_url": "https://api.github.com/users/bgnx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bgnx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bgnx/subscriptions",
    "organizations_url": "https://api.github.com/users/bgnx/orgs",
    "repos_url": "https://api.github.com/users/bgnx/repos",
    "events_url": "https://api.github.com/users/bgnx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bgnx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2017-10-17T23:57:26Z",
  "updated_at": "2018-01-06T03:05:59Z",
  "closed_at": "2018-01-06T03:05:59Z",
  "author_association": "NONE",
  "body": "Currently there is no way to use event handlers in functional components without performance degradation e.g - unnecessary function recreations through .bind or arrow functions \r\n```\r\nfunction Node({node}){\r\n  return (\r\n    <div>\r\n      <button onClick={()=>node.parent.removeChild(node)}>remove</button>\r\n      <div>{node.text}</div>\r\n   </div>\r\n  )\r\n}\r\n```\r\nIn this case on each render a new handler will be created, and also react will need to perform some bookkeeping - remove previous handler from dom element and add new handler (ok, with event delegation system react will not touch dom elements and only replace handler somewhere in internal structure but what about events which don't bubble?) and all this take some noticeable time in my application. \r\nSure I can change to class components and solve problem by bind handlers only once when component will be created but what if I want to use functional components? \r\nSo in my application I came up with new and fastest method of binding handlers. Actually it does not preform binding at all). What is the reason of binding function in event handler? - we need to access current component props or current component state. Is there another way to get props or state of component? React does not describe this in docs but yes - we can access to props or state of current component without any unnecessary functions recreations on each render.\r\n```\r\nfunction Node({node}){\r\n  return (\r\n    <div>\r\n      <button onClick={onClick}>remove</button>\r\n      <div>{node.text}</div>\r\n   </div>\r\n  )\r\n}\r\n\r\nfunction onClick(e){\r\n  const {node} = getProps(e);\r\n  node.parent.removeChild(node)\r\n}\r\n\r\nfunction getProps(e){\r\n  return e.target[Object.keys(e.target).filter(k => k.indexOf('__reactInternalInstance') !== -1)[0]]._debugOwner.memoizedProps;\r\n} \r\n```\r\nand this demo https://codesandbox.io/s/4r59w89lox\r\n\r\nTo perform event delegations in an efficient way react need to assign current vdom-element to each rendered dom element. And vdom-element has link to actual owner component where we can get our props and state. So why react concealed this from developers and made them suffer not only from performance degradation but also from choosing problem (how many articles and advices recommend or investigate this rule to not bind handlers in render function, and how many solutions exist - use bind in constructor ? - use class field properties with arrow functions ? - use autobind decorators?) ??? And my solution not need even to recreate handlers on each component instantiation like all current solutions does, so it definitely the fastest way. I highly suggest make this api public or make some helper to get current props and state from event.target",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
