{
  "url": "https://api.github.com/repos/facebook/react/issues/12963",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12963/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12963/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12963/events",
  "html_url": "https://github.com/facebook/react/issues/12963",
  "id": 328641328,
  "node_id": "MDU6SXNzdWUzMjg2NDEzMjg=",
  "number": 12963,
  "title": "Signaling reusable instances",
  "user": {
    "login": "brigand",
    "id": 936069,
    "node_id": "MDQ6VXNlcjkzNjA2OQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/936069?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brigand",
    "html_url": "https://github.com/brigand",
    "followers_url": "https://api.github.com/users/brigand/followers",
    "following_url": "https://api.github.com/users/brigand/following{/other_user}",
    "gists_url": "https://api.github.com/users/brigand/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brigand/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brigand/subscriptions",
    "organizations_url": "https://api.github.com/users/brigand/orgs",
    "repos_url": "https://api.github.com/users/brigand/repos",
    "events_url": "https://api.github.com/users/brigand/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brigand/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-06-01T19:55:34Z",
  "updated_at": "2018-06-24T01:16:15Z",
  "closed_at": "2018-06-24T01:16:15Z",
  "author_association": "CONTRIBUTOR",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n---\r\n\r\nThere's a common case of having a list of items, keyed by some id, and items can be added/removed over time. For example, say we have a list of users and a button to refresh the list with new data from the server. Here, `User` is a simple function component.\r\n\r\n```jsx\r\nusers.map((user) => (\r\n  <User key={user.id} data={user} />\r\n)\r\n```\r\n\r\nSay this produces the following User elements:\r\n\r\n```\r\nkey: 1000, data: { name: 'foo' }\r\nkey: 1001, data: { name: 'bar' }\r\nkey: 1002, data: { name: 'baz' }\r\n```\r\n\r\nLater we get the new user list, and these are the resulting elements:\r\n\r\n```\r\nkey: 1003, data: { name: 'quux' }\r\nkey: 1002, data: { name: 'baz' }\r\nkey: 1001, data: { name: 'bar' }\r\n```\r\n\r\nThe operations are:\r\n\r\n- remove 1000, destroy instance and dom nodes\r\n- move 1002, update\r\n- create 1003, with instance and dom nodes\r\n\r\nWould an option to tell React that it can reuse the instances and dom nodes make sense?\r\n\r\nFrom the list diff, React has this information (as I understand it):\r\n\r\n- remove at key: 1000, type: User, index: 0\r\n- create at key: 1003, type: User. index: 0\r\n\r\nIf we signaled to React that it can reuse elements, and since the 'type' is the same, it could reduce these operations to updating the identity of the underlying instance (key: 1000 -> key: 1003) and then update the instance normally. It could also require a move, but it doesn't here.\r\n\r\nWhen used, it reduces the combined create/destroy operations of instances and dom nodes from `create + destroy` to `Math.abs(create - destroy)`. \r\n\r\nOf course, this has to be opt-in behavior because some components won't clear their internal state, and some DOM nodes can hold uncontrolled state. Also in some cases this could be slower (but I'd wager this is rare).\r\n\r\nThe syntax is secondary; I mostly want to hear what's thought about the idea of explicitly permitting React to reuse instances, but this is the simplest idea I have.\r\n\r\n```jsx\r\n<React.Reusable>\r\n  {users.map(...)}\r\n</React.Reusable>\r\n```\r\n\r\n---\r\n\r\n**Why do this in core?**\r\n\r\nI can't think of a reasonable way to do this in user space, and the less reasonable ways require duplicating the effort of diffing the list.\r\n\r\nIt's just allowing React to simplify the operations it intends to perform.\r\n\r\n**Why do this at all?**\r\n\r\nIt provides another performance hook for React code, which people can attempt to apply while optimizing their react and react-native apps, if it makes sense in their situation.\r\n\r\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
