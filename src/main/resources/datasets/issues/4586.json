{
  "url": "https://api.github.com/repos/facebook/react/issues/4586",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4586/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4586/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4586/events",
  "html_url": "https://github.com/facebook/react/issues/4586",
  "id": 99727240,
  "node_id": "MDU6SXNzdWU5OTcyNzI0MA==",
  "number": 4586,
  "title": "IE error - rendering properly in chrome ",
  "user": {
    "login": "ramu1224",
    "id": 13513922,
    "node_id": "MDQ6VXNlcjEzNTEzOTIy",
    "avatar_url": "https://avatars2.githubusercontent.com/u/13513922?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ramu1224",
    "html_url": "https://github.com/ramu1224",
    "followers_url": "https://api.github.com/users/ramu1224/followers",
    "following_url": "https://api.github.com/users/ramu1224/following{/other_user}",
    "gists_url": "https://api.github.com/users/ramu1224/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ramu1224/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ramu1224/subscriptions",
    "organizations_url": "https://api.github.com/users/ramu1224/orgs",
    "repos_url": "https://api.github.com/users/ramu1224/repos",
    "events_url": "https://api.github.com/users/ramu1224/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ramu1224/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-08-07T20:42:58Z",
  "updated_at": "2015-08-08T02:36:02Z",
  "closed_at": "2015-08-08T02:36:02Z",
  "author_association": "NONE",
  "body": " am trying to render a header into the existing header by creating a div into the table\n\nHTML Code\n\n```\n<table\n<div id=\"container\"></div>\n<tr><th/><th/>....<th/></tr>------> deleting this row when my header is getting rendered\n<tr><td/><td/>....<td/></td>\n</table>\n```\n\nScript\n\n```\nvar StickyDiv = React.createClass({\n            mixins: [SimplePageScrollMixin, SimpleResizeMixin],\n            displayName:\"StickyDiv\",\n            propTypes:{\n                offsetTop: React.PropTypes.number,\n                zIndex: React.PropTypes.number,\n                className: React.PropTypes.string\n            },\n            getInitialState : function(){\n                return {\n                    fix: false,\n                    width: null\n                };\n            },\n            getDefaultProps: function() {\n                return {\n                    offsetTop: 38,\n                    className: '',\n                    zIndex: 9999\n                };\n            },\n            handleResize : function(){\n                this.checkWidth();\n                this.checkPositions();\n            },\n            handleScroll: function () {\n                this.checkWidth();\n                this.checkPositions();\n            },\n            checkPositions: function(){\n                var pos;\n                if('findDOMNode' in React){\n                    pos = util.findPosRelativeToViewport(React.findDOMNode(this));\n                  } else {\n                    pos = util.findPosRelativeToViewport(this.getDOMNode());\n                  }               \n                 if (pos[1] <=this.props.offsetTop){                    \n                    this.setState({fix: true});\n                } else {\n                    this.setState({fix: false});\n                }  \n            },\n            checkWidth: function () {\n                var width = null;\n                if (this.refs.duplicate) {\n                 if('findDOMNode' in React){\n                    width = React.findDOMNode(this.refs.duplicate).getBoundingClientRect().width;\n                  } else {\n                    width = this.refs.duplicate.getDOMNode().getBoundingClientRect().width;\n                  }\n                } else {\n                 if('findDOMNode' in React){\n                    width = React.findDOMNode(this.refs.original).getBoundingClientRect().width;\n                  } else {\n                    width = this.refs.original.getDOMNode().getBoundingClientRect().width;\n                  }\n\n                }\n                if (this.state.width !== width) {\n                    this.setState({\n                        width: width\n                    });\n                }\n            },\n            componentDidMount: function () {\n                this.checkWidth();\n            },\n            render: function () {\n                var divStyle;\n                if (this.state.fix) {\n                    divStyle = {\n                        display: 'block',\n                        position: 'fixed',\n                        width: this.state.width ? (this.state.width + 'px') : null,\n                        top: this.props.offsetTop,\n                        content: \"text/html\"\n                    };\n\n                    return (\n                    React.createElement(\"div\", {style: {zIndex : this.props.zIndex, position:'relative', width:'100%'}}, \n                        React.createElement(\"div\", {ref: \"duplicate\", key: \"duplicate\", style: {visibility:'hidden'}}, \n                                this.props.children\n                            ),     \n                        React.createElement(\"div\", {ref: \"original\", key: \"original\", style: divStyle}, \n                            this.props.children\n                        )\n                    ));\n                }\n                else {\n                    divStyle = {\n                        display: 'block',\n                        position: 'relative',\n                        width:'100%'\n                    };\n                    return (\n                    React.createElement(\"div\", {style: {zIndex : this.props.zIndex, position:'relative', width:'100%'}}, \n                        React.createElement(\"div\", {ref: \"original\", key: \"original\", style: divStyle}, \n                            this.props.children\n                        )\n                    ));\n                }\n            }\n        });\n\n        MyComponent = React.createClass({displayName: \"MyComponent\",\n\n        getInitialState: function() {\n            return {\n                isSelected: false\n            };\n        },      \n        render: function() {\n\n        var myVar = \"<%= request.getAttribute(\"xxxx\") %>\"\n             return (\n               React.createElement(StickyDiv, null, \n              React.createElement(\"table\",{className: \"\", cellSpacing: \"0\", cellPadding: \"0\", border: \"0\", width: \"100%\"},\n               React.createElement(\"tr\", null, \n               React.createElement(\"th\", {valign:'middle', align:'left', width:'3%'},React.createElement(\"img\", {src: \"<%=appRoot%>/common/images/icon_confirm.gif\", className: \"recentlyProcessedIcon\"})), \n               React.createElement(\"th\", {width:'23%'},React.createElement(\"span\", null,\"second coloumn\")),\n               React.createElement(\"th\", {width:'9%'},React.createElement(\"span\", {nowrap:true},\"third coloumn \")),\n               React.createElement(\"th\", {width:'12%'},React.createElement(\"span\", null,\"fourth coloumn\")),\n               React.createElement(\"th\", {width:'11.5%'},React.createElement(\"span\", null,\"fifith\")),\n               React.createElement(\"th\", {width:'10.5%'},React.createElement(\"span\",null,\"sixth\")),\n               React.createElement(\"th\", {width:'3%',valign:'middle'},React.createElement(\"span\", null,\"seventh\"))\n)  )));\n  }});\n\n    React.render(React.createElement(MyComponent, null),\n           document.getElementById('container')\n        );\n```\n\n![error](https://cloud.githubusercontent.com/assets/13513922/9145554/4506487a-3d23-11e5-97f8-51997a744e18.png)\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
