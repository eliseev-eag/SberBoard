{
  "url": "https://api.github.com/repos/facebook/react/issues/15632",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15632/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15632/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15632/events",
  "html_url": "https://github.com/facebook/react/issues/15632",
  "id": 443249214,
  "node_id": "MDU6SXNzdWU0NDMyNDkyMTQ=",
  "number": 15632,
  "title": "rehydrating dangerouslySetInnerHtml on svg with hooks",
  "user": {
    "login": "wmertens",
    "id": 54934,
    "node_id": "MDQ6VXNlcjU0OTM0",
    "avatar_url": "https://avatars2.githubusercontent.com/u/54934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wmertens",
    "html_url": "https://github.com/wmertens",
    "followers_url": "https://api.github.com/users/wmertens/followers",
    "following_url": "https://api.github.com/users/wmertens/following{/other_user}",
    "gists_url": "https://api.github.com/users/wmertens/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wmertens/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wmertens/subscriptions",
    "organizations_url": "https://api.github.com/users/wmertens/orgs",
    "repos_url": "https://api.github.com/users/wmertens/repos",
    "events_url": "https://api.github.com/users/wmertens/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wmertens/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-05-13T07:39:07Z",
  "updated_at": "2019-05-13T08:46:36Z",
  "closed_at": "2019-05-13T08:46:35Z",
  "author_association": "CONTRIBUTOR",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\nI have a svg symbol component that puts a bunch of svg symbols at the bottom or the page and refers to them with `<use/>`. It works fine in the previous incarnation which uses the old-style context API.\r\n\r\nI rewrote it to use the new Context API and hooks, and now it doesn't hydrate properly.\r\n\r\n**What is the current behavior?**\r\n\r\nAfter SSR, the resulting HTML has working icons. After rehydration, the svg component with the symbols is empty. The symbols are provided to `dangerouslySetInnerHtml:{__html}` as a string with all symbols concatenated.\r\n\r\nAfter re-rendering that symbols component, the innerHtml of the svg is correct again.\r\n\r\nI don't have time to create a sandbox just now, please let me know if it will be necessary and I will create one.\r\n\r\nHere's the relevant code for the provider and the `<Symbols />` component that manages the symbols:\r\n```js\r\nimport React, {useState, useContext, useRef} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst IconContext = React.createContext()\r\n\r\nexport const Use = ({symbol}) => {\r\n\tif (!symbol) return false\r\n\tconst ctx = useContext(IconContext)\r\n\tif (!ctx) return false\r\n\r\n\tctx.addSymbol(symbol)\r\n\r\n\treturn <use xlinkHref={'#' + symbol.id} />\r\n}\r\nUse.propTypes = {symbol: PropTypes.object.isRequired}\r\n\r\n// Note: this has to stay a separate component so it gets evaluated at the end of the render\r\n// that way the uses object will contain all the used symbols (through mutation)\r\nconst Symbols = () => {\r\n\tconst context = useContext(IconContext)\r\n\tconst [, refresh] = useState()\r\n\r\n\tconst {uses, onAdd} = context\r\n\tif (!onAdd) context.onAdd = refresh\r\n\r\n\treturn (\r\n\t\t<svg\r\n\t\t\t// eslint-disable-next-line react/no-danger\r\n\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t__html: Object.values(uses)\r\n\t\t\t\t\t.map(s => s.text)\r\n\t\t\t\t\t.join(''),\r\n\t\t\t}}\r\n\t\t\tstyle={{display: 'none'}}\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\txmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nconst IconProvider = ({children}) => {\r\n\tconst {current: context} = useRef({})\r\n\tif (!context.addSymbol) {\r\n\t\t// Initialize our context\r\n\t\tcontext.uses = {}\r\n\t\t// We don't remove symbols, it's extra work and the browser will be fine\r\n\t\tcontext.addSymbol = symbol => {\r\n\t\t\tconst has = context.uses[symbol.id]\r\n\t\t\tif (has) {\r\n\t\t\t\tif (has === symbol) return\r\n\r\n\t\t\t\t// eslint-disable-next-line no-console\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\tnew Error(`Symbol ID ${symbol.id} has to be unique (hot reload ok)`)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcontext.uses[symbol.id] = symbol\r\n\t\t\t// This causes Symbols to rerender\r\n\t\t\tif (context.onAdd) context.onAdd(symbol)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<IconContext.Provider value={context}>\r\n\t\t\t<>\r\n\t\t\t\t{children}\r\n\t\t\t\t<Symbols />\r\n\t\t\t</>\r\n\t\t</IconContext.Provider>\r\n\t)\r\n}\r\n\r\nIconProvider.propTypes = {children: PropTypes.any}\r\n\r\nexport default IconProvider\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nThe rehydration should set the innerHtml.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact version is 16.8.6, and it works in the non-hooks version (you can see that in action on https://yaska.eu).",
  "closed_by": {
    "login": "wmertens",
    "id": 54934,
    "node_id": "MDQ6VXNlcjU0OTM0",
    "avatar_url": "https://avatars2.githubusercontent.com/u/54934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wmertens",
    "html_url": "https://github.com/wmertens",
    "followers_url": "https://api.github.com/users/wmertens/followers",
    "following_url": "https://api.github.com/users/wmertens/following{/other_user}",
    "gists_url": "https://api.github.com/users/wmertens/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wmertens/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wmertens/subscriptions",
    "organizations_url": "https://api.github.com/users/wmertens/orgs",
    "repos_url": "https://api.github.com/users/wmertens/repos",
    "events_url": "https://api.github.com/users/wmertens/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wmertens/received_events",
    "type": "User",
    "site_admin": false
  }
}
