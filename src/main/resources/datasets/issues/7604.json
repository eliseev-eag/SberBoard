{
  "url": "https://api.github.com/repos/facebook/react/issues/7604",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7604/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7604/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7604/events",
  "html_url": "https://github.com/facebook/react/issues/7604",
  "id": 173834122,
  "node_id": "MDU6SXNzdWUxNzM4MzQxMjI=",
  "number": 7604,
  "title": "I'm getting 100s of new inapplicable prop warnings; please make this less painful for developers",
  "user": {
    "login": "jedwards1211",
    "id": 1448194,
    "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jedwards1211",
    "html_url": "https://github.com/jedwards1211",
    "followers_url": "https://api.github.com/users/jedwards1211/followers",
    "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
    "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
    "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
    "repos_url": "https://api.github.com/users/jedwards1211/repos",
    "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2016-08-29T18:02:54Z",
  "updated_at": "2016-08-29T19:33:26Z",
  "closed_at": "2016-08-29T18:17:54Z",
  "author_association": "CONTRIBUTOR",
  "body": "Passing userland, non-applicable props to `<div>s`, `<button>s`, <input>s`, etc. is already widespread in my large codebase because:\n- I have a lot of components that add on various properties (e.g. for Bootstrap) but I want to pass the rest of the props through in case any are applicable\n- I saw no reason to waste CPU time/memory/my own time cloning the props and deleting the component-specific props...until now.\n\n(Example code at the bottom of this post)\n\nI am trying hard to contain my anger about this; now I have to painstakingly change 100s of components to get rid of the slew of new React warnings about inapplicable props!  Did the React team really not expect people to write components this way?  I certainly don't remember seeing thorough explanations why we shouldn't do this in the documentation; even the [Unknown Prop Warning page](https://facebook.github.io/react/warnings/unknown-prop.html) says \"You should ensure that your DOM elements do not have spurious props floating around\" **without any justification**.\n\nThis is unkind to developers.  So, how about providing some kind of global switch or flag prop that makes DOM elements delete all of the inapplicable props?  Or a codemod that wraps all object spread props to DOM elements in a filter function?\n\nExample:\n\n``` jsx\n/* @flow */\n\nimport React, {Component} from 'react'\nimport classNames from 'classnames'\nimport addClass from '../wrappers/addClass'\nimport {getContextClass, getContextContent, getShadeClass} from './bootstrapPropUtils'\n\nimport './Alert.sass'\n\nimport {errorMessage} from '../utils/reactErrorUtils'\n\ntype Props = {\n  contextClass?: 'alarm' | 'error' | 'danger' | 'warning' | 'info' | 'success' | 'ok',\n  alarm?: ?any,\n  error?: ?any,\n  danger?: ?any,\n  warning?: ?any,\n  info?: ?any,\n  success?: ?any,\n  ok?: ?any,\n  shade?: 'darker' | 'brighter',\n  darker?: boolean,\n  brighter?: boolean,\n  className?: string,\n  children?: any,\n};\n\nexport default class Alert extends Component<void, Props, void> {\n  static Link = addClass('a', 'alert-link');\n  render(): React.Element<any> {\n    let {className, children} = this.props\n    let contextClass = getContextClass(this.props, 'type')\n    let shadeClass = getShadeClass(this.props)\n    let content = getContextContent(this.props)\n\n    if (content && (contextClass === 'danger' || contextClass === 'warning' || content instanceof Error)) {\n      content = errorMessage(content)\n    }\n\n    className = classNames(className, 'alert', contextClass && ('alert-' + contextClass), shadeClass)\n\n    return <div role=\"alert\" {...this.props} className={className}>\n      {children}\n      {content}\n    </div>\n  }\n```\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
