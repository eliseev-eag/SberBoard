{
  "url": "https://api.github.com/repos/facebook/react/issues/16219",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16219/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16219/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16219/events",
  "html_url": "https://github.com/facebook/react/issues/16219",
  "id": 473247923,
  "node_id": "MDU6SXNzdWU0NzMyNDc5MjM=",
  "number": 16219,
  "title": "more than more useState，how to get the values",
  "user": {
    "login": "MaoGirlsQueen",
    "id": 29169537,
    "node_id": "MDQ6VXNlcjI5MTY5NTM3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29169537?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaoGirlsQueen",
    "html_url": "https://github.com/MaoGirlsQueen",
    "followers_url": "https://api.github.com/users/MaoGirlsQueen/followers",
    "following_url": "https://api.github.com/users/MaoGirlsQueen/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaoGirlsQueen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaoGirlsQueen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaoGirlsQueen/subscriptions",
    "organizations_url": "https://api.github.com/users/MaoGirlsQueen/orgs",
    "repos_url": "https://api.github.com/users/MaoGirlsQueen/repos",
    "events_url": "https://api.github.com/users/MaoGirlsQueen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaoGirlsQueen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-07-26T08:47:18Z",
  "updated_at": "2019-07-30T01:13:29Z",
  "closed_at": "2019-07-27T23:09:26Z",
  "author_association": "NONE",
  "body": "When using more than one useState, the response from the API contains more than one variable defined in the useState. How can we assign all states like this. setState ({... response}) to all states? If there are more than 10 useStates, this would be a waste of time.\r\nfor Example：\r\n\r\n const [quickDate,setQuickDate] = useState( '9');\r\n  const [from,setFrom] = useState( getDateTime(getLastYear3Days()[0]));\r\n  const [to,setTo] = useState(getDateTime(getLastYear3Days()[1]));\r\n  const [index,setIndex] = useState('');\r\n  const [chargeState,setChargeState] = useState(0);\r\n  const [vin,setVin] = useState('');\r\n  const [vinStar,setVinStar] = useState('');\r\n  const [duration,setDuration] = useState('');\r\n  const [analysisType,setAnalysisType] = useState('single');\r\n  const [chartType,setChartType] = useState('bar');\r\n  const [selectColumns,setSelectColumns] = useState([]);\r\n  const [groupByColumns,setGroupByColumns] = useState([]);\r\n  const [rightBlock,setRightBlock] = useState([]);\r\n  const [dslFilters,setDslFilters] = useState([]);\r\n  const [dslFilterCombiner,setDslFilterCombiner] = useState('must');\r\n  const [dsl,setDsl] = useState('');\r\n  const [vinFilterVisible,setVinFilterVisible] = useState(false);\r\n  const [mySearch,setMySearch] = useState(null);\r\n\r\n const mySearchInit = (searchId)=>{\r\n    dispatch({\r\n      type: 'common/fetchMySearchById',\r\n      payload: { id: searchId },\r\n      callback: (response) => {\r\n        let newState = JSON.parse(response.condition);\r\n        initVlaue(newState,response);\r\n        previewChart(newState);\r\n        mountInit(newState);\r\n      },\r\n    });\r\n  }\r\n  const initVlaue = (newState,response)=>{\r\n    setAnalysisType(newState.analysisType);\r\n    setChargeState(newState.chargeState);\r\n    setChartType(newState.chartType);\r\n    setDsl(newState.dsl);\r\n    setDslFilterCombiner(newState.dslFilterCombiner);\r\n    setDslFilters(newState.dslFilters);\r\n    setDuration(newState.duration);\r\n    setFrom(newState.from);\r\n    setGroupByColumns(newState.groupByColumns);\r\n    setIndex(newState.index);\r\n    setQuickDate(newState.quickDate);\r\n    setRightBlock(newState.rightBlock);\r\n    setSelectColumns(newState.selectColumns);\r\n    setTo(newState.to);\r\n    setVin(newState.vin);\r\n    setVinFilterVisible(newState.vinFilterVisible);\r\n    setVinStar(newState.vinStar);\r\n    setMySearch(response);\r\n  }\r\n\r\nhow to do ??",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
