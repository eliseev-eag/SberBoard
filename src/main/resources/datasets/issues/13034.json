{
  "url": "https://api.github.com/repos/facebook/react/issues/13034",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/13034/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/13034/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/13034/events",
  "html_url": "https://github.com/facebook/react/issues/13034",
  "id": 331857993,
  "node_id": "MDU6SXNzdWUzMzE4NTc5OTM=",
  "number": 13034,
  "title": "Some means of determining component order in hierarchy",
  "user": {
    "login": "kierenj",
    "id": 82343,
    "node_id": "MDQ6VXNlcjgyMzQz",
    "avatar_url": "https://avatars0.githubusercontent.com/u/82343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kierenj",
    "html_url": "https://github.com/kierenj",
    "followers_url": "https://api.github.com/users/kierenj/followers",
    "following_url": "https://api.github.com/users/kierenj/following{/other_user}",
    "gists_url": "https://api.github.com/users/kierenj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kierenj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kierenj/subscriptions",
    "organizations_url": "https://api.github.com/users/kierenj/orgs",
    "repos_url": "https://api.github.com/users/kierenj/repos",
    "events_url": "https://api.github.com/users/kierenj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kierenj/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-06-13T06:27:27Z",
  "updated_at": "2018-06-19T07:16:36Z",
  "closed_at": "2018-06-18T16:57:45Z",
  "author_association": "NONE",
  "body": "I'm trying to build a container component and child component, whereby the children can sit anywhere in the hierarchy beneath the container, but know their relative order/index within that hierarchy.\r\n\r\nMy use-case is to build a helper wrapper for CSS grids, allowing subcomponents to themselves render a \"row\" component which knows it must be the next index, and may or may not progress the row counter for the next \"row\" component found in order.\r\n\r\nI've looked into two possible avenues - recursing using `React.Children` on the component, which stops when it hits a component without `props.children` (e.g. a redux-`connect()`-ed one), and passing some means of counting via context, which fails because it seems the `render()` methods of the child components isn't always called in \"DOM order\".\r\n\r\nMore background here - https://stackoverflow.com/questions/50776933/react-get-component-order-within-hierarchy\r\n\r\nIt would be great to have some feature in React which might allow for this.",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
