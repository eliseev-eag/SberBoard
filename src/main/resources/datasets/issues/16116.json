{
  "url": "https://api.github.com/repos/facebook/react/issues/16116",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16116/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16116/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16116/events",
  "html_url": "https://github.com/facebook/react/issues/16116",
  "id": 467170802,
  "node_id": "MDU6SXNzdWU0NjcxNzA4MDI=",
  "number": 16116,
  "title": "Allow hooks in class component render methods.",
  "user": {
    "login": "FrobtheBuilder",
    "id": 2354433,
    "node_id": "MDQ6VXNlcjIzNTQ0MzM=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/2354433?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/FrobtheBuilder",
    "html_url": "https://github.com/FrobtheBuilder",
    "followers_url": "https://api.github.com/users/FrobtheBuilder/followers",
    "following_url": "https://api.github.com/users/FrobtheBuilder/following{/other_user}",
    "gists_url": "https://api.github.com/users/FrobtheBuilder/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/FrobtheBuilder/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/FrobtheBuilder/subscriptions",
    "organizations_url": "https://api.github.com/users/FrobtheBuilder/orgs",
    "repos_url": "https://api.github.com/users/FrobtheBuilder/repos",
    "events_url": "https://api.github.com/users/FrobtheBuilder/events{/privacy}",
    "received_events_url": "https://api.github.com/users/FrobtheBuilder/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-07-12T01:01:51Z",
  "updated_at": "2019-08-15T23:04:51Z",
  "closed_at": "2019-08-15T13:27:06Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature.\r\n\r\n**What is the current behavior?**\r\nCurrently, it is only possible to use hooks in function components. I know the rationale behind this is to encourage use of the function component pattern, and allow for future optimization work in the form of precompilation. However, it makes it very inconvenient to use modern hooks-based libraries in class components, and you're essentially forced to resort to using a higher order component instead, if one is even provided. \r\nFor instance, included with the react-i18next library is a very convenient `useTranslation` hook, yet, if you're localizing class components, you must wrap everything with a HOC, since the library no longer includes a decorator. The HOC pattern is especially nasty with Typescript since you essentially have to add a bunch of extra properties to your component's props interface and then have the HOC function strip them with a compound type.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\nN/A\r\n\r\n**What is the expected behavior?**\r\nCurrently, it is actually possible to shim the core React hooks API to allow calling `use...` functions in class component render methods with [react-universal-hooks](https://github.com/salvoravida/react-universal-hooks). It even works with custom hooks provided by third party libraries, since the built-in hooks they call are wrapped. We're currently using this with the `useTranslation` hook from react-i18next with no issues. \r\nI can't see any reason why this shouldn't be available natively, if only for compatibility and migration purposes. Render methods are just functions, and hooks are simply a way to allow repeated function calls to access persistent state from a backing list, correct? The hooks API documentation states that you shouldn't bother to refactor all your class components just for hooks, and even if that sort of usage wouldn't be possible to optimize through precompilation, allowing it would significantly ease the transition.\r\nThe only potential caveat is the common class component pattern of delegating out to subordinate render methods, in which hooks wouldn't work properly if they're called conditionally or in a loop. This can be avoided by passing hooked values from the top level render method instead.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nEvery version since hooks were added, 16.8.0 and up, all browsers obviously.",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
