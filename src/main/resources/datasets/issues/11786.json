{
  "url": "https://api.github.com/repos/facebook/react/issues/11786",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/11786/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/11786/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/11786/events",
  "html_url": "https://github.com/facebook/react/pull/11786",
  "id": 279826740,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MTU2NzgyMTk5",
  "number": 11786,
  "title": "toWarnInDev matcher; throw on unexpected console.error",
  "user": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2017-12-06T16:50:44Z",
  "updated_at": "2018-01-02T19:06:45Z",
  "closed_at": "2018-01-02T19:06:42Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/11786",
    "html_url": "https://github.com/facebook/react/pull/11786",
    "diff_url": "https://github.com/facebook/react/pull/11786.diff",
    "patch_url": "https://github.com/facebook/react/pull/11786.patch"
  },
  "body": "Relates to #11626.\r\n\r\nAdded a new matcher for dev errors and warnings. Rather than checking for warnings like this:\r\n```js\r\nspyOnDev(console, 'error');\r\n\r\n// Some code\r\n\r\nif (__DEV__) {\r\n  expect(console.error.calls.count()).toBe(2);\r\n  expect(console.error.calls.argsFor(0)[0]).toContain('Some error');\r\n  expect(console.error.calls.argsFor(1)[0]).toContain('Some other error');\r\n}\r\n```\r\n\r\nYou can now write this:\r\n```js\r\nexpect(() => {\r\n  // Some code\r\n}).toWarnDev([\r\n  'Some error',\r\n  'Some other error',\r\n]);\r\n```\r\n\r\nIn addition to being syntactically shorter, I've also changed our [default `console` overrides](https://github.com/facebook/react/blob/247c5241706356033cd5bf1dc31197e058853e13/scripts/jest/setupTests.js#L58-L88) to report the correct call-stack for unexpected warnings. The combination of these two changes provides a couple of benefits:\r\n* Warnings being verified are now explicitly scoped to a block of code.\r\n* Any warnings that happen outside of this scope are guaranteed to fail the test, unlike before where a forgotten assertion on `calls.count()` could result in suppressed/ignored warnings.\r\n* Unexpected warnings show the correct call stack (making them easier to identify and correct or add tests for).\r\n* Error stack normalization logic is now centralized (rather than copy-pasting it around each test that depends on it).\r\n\r\nI've updated a dozen or so tests to use the new matcher, to make sure it works correctly. There are still several more with `console` spies that I can remove via follow-up PRs.\r\n\r\n# Follow Up Work\r\n\r\n- [ ] Update the matcher to catch all `Error`s and re-throw as `JestAssertionError`s for better stack traces (once facebook/jest/pull/5138 is released).\r\n- [ ] Update remaining tests that spy on `console` to use the new matcher.\r\n- [ ] Update our `spyOn` helpers to detect if they're being used to spy on `console` redirect to use the new matcher instead. (See PR #11898 for a possible implementation.)\r\n- [ ] Decide whether to (continue to) support nested `toWarnDev` matchers or whether to throw an error if this pattern is detected.\r\n\r\n# Expected failures\r\n## Unexpected warnings\r\n```js\r\nit('should fail for unexpected warnings(s)', () => {\r\n  const foo = () => bar();\r\n  const bar = () => baz();\r\n  const baz = () => console.error('unexpected warning');\r\n\r\n  foo();\r\n});\r\n```\r\n![screen shot 2017-12-19 at 3 06 37 pm](https://user-images.githubusercontent.com/29597/34183168-3f29ed76-e4ce-11e7-891c-933e0c702b19.png)\r\n\r\n## Unexpected warnings within a `try`/`catch`\r\n```js\r\nit('should fail for unexpected warnings(s) within a try/catch', () => {\r\n  const foo = () => bar();\r\n  const bar = () => baz();\r\n  const baz = () => console.error('unexpected warning');\r\n\r\n  try {\r\n    foo();\r\n    console.error('another unexpected warning');\r\n  } catch (err) {}\r\n});\r\n```\r\n![screen shot 2017-12-19 at 3 07 13 pm](https://user-images.githubusercontent.com/29597/34183192-5fedcd20-e4ce-11e7-88f4-71d0aece9b18.png)\r\n\r\n## Errors thrown within `toWarnDev`\r\n```js\r\nit('should fail for errors thrown within .toWarnDev()', () => {\r\n  expect(() => {\r\n    asdf();\r\n  }).toWarnDev('foo')\r\n});\r\n```\r\n![screen shot 2017-12-19 at 3 08 20 pm](https://user-images.githubusercontent.com/29597/34183221-7a359bc2-e4ce-11e7-9c78-e4c0907645eb.png)\r\n\r\n## Invalid `toThrow` within `toWarnDev`\r\n```js\r\nit('should fail .toThrow() within .toWarnDev()', () => {\r\n  expect(() => {\r\n    console.error('foo');\r\n    expect(() => {}).toThrow();\r\n  }).toWarnDev('foo');\r\n});\r\n```\r\n![screen shot 2017-12-19 at 3 09 51 pm](https://user-images.githubusercontent.com/29597/34183256-b090e6d6-e4ce-11e7-956d-2c9587ea22f5.png)\r\n## Passing `toWarnDev` within `toThrow`\r\n```js\r\nit('should fail .toWarnDev() within .toThrow()', () => {\r\n  expect(() => {\r\n    expect(() => console.error('foo')).toWarnDev('foo')\r\n  }).toThrow();\r\n});\r\n```\r\n![screen shot 2017-12-19 at 3 10 40 pm](https://user-images.githubusercontent.com/29597/34183274-cd1420ac-e4ce-11e7-96f7-e667fd892c34.png)\r\n\r\n## Incorrect/non-matching warning\r\n```js\r\nit('should fail when the expected warnings passed to .toWarnDev() do not match the actual warnings', () => {\r\n  expect(() => {\r\n    console.error('foo');\r\n  }).toWarnDev('bar');\r\n});\r\n```\r\n![screen shot 2018-01-02 at 10 58 04 am](https://user-images.githubusercontent.com/29597/34495846-dae6bdc4-efab-11e7-9fd7-f654c294aa62.png)\r\n\r\n# Passing tests\r\n## Nested `toThrow` within `toWarnDev`\r\n```js\r\nit('should pass .toThrow() within .toWarnDev()', () => {\r\n  expect(() => {\r\n    console.error('foo');\r\n    expect(() => asdf()).toThrow();\r\n  }).toWarnDev('foo');\r\n});\r\n```\r\n## Nested `toWarnDev` within `toThrow`\r\n```js\r\nit('should pass .toWarnDev() within .toThrow()', () => {\r\n  expect(() => {\r\n    expect(() => {}).toWarnDev('foo')\r\n  }).toThrow();\r\n});\r\n```\r\n\r\n# Open Questions\r\n## Nested warnings\r\n\r\n```js\r\nexpect(() => {\r\n  console.error('foo');\r\n  expect(() => {\r\n    console.error('baz');\r\n    console.error('qux');\r\n  }).toWarnDev([\r\n    'baz',\r\n    'qux',\r\n  ]);\r\n  console.error('bar');\r\n}).toWarnDev([\r\n  'foo',\r\n  'bar',\r\n]);\r\n```\r\n\r\nThis is currently supported, although it's unclear if this is a case we would ever actually need or want to use. Once we've migrated the current warning tests over to use this new matcher, if we determine that we don't need to support nesting, we can change it to fail explicitly.",
  "closed_by": {
    "login": "bvaughn",
    "id": 29597,
    "node_id": "MDQ6VXNlcjI5NTk3",
    "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bvaughn",
    "html_url": "https://github.com/bvaughn",
    "followers_url": "https://api.github.com/users/bvaughn/followers",
    "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
    "organizations_url": "https://api.github.com/users/bvaughn/orgs",
    "repos_url": "https://api.github.com/users/bvaughn/repos",
    "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bvaughn/received_events",
    "type": "User",
    "site_admin": false
  }
}
