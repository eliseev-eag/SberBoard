{
  "url": "https://api.github.com/repos/facebook/react/issues/12477",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12477/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12477/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12477/events",
  "html_url": "https://github.com/facebook/react/issues/12477",
  "id": 309527937,
  "node_id": "MDU6SXNzdWUzMDk1Mjc5Mzc=",
  "number": 12477,
  "title": "Issues with ReactControlledValuePropTypes",
  "user": {
    "login": "lukescott",
    "id": 486224,
    "node_id": "MDQ6VXNlcjQ4NjIyNA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/486224?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lukescott",
    "html_url": "https://github.com/lukescott",
    "followers_url": "https://api.github.com/users/lukescott/followers",
    "following_url": "https://api.github.com/users/lukescott/following{/other_user}",
    "gists_url": "https://api.github.com/users/lukescott/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lukescott/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lukescott/subscriptions",
    "organizations_url": "https://api.github.com/users/lukescott/orgs",
    "repos_url": "https://api.github.com/users/lukescott/repos",
    "events_url": "https://api.github.com/users/lukescott/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lukescott/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2018-03-28T20:54:22Z",
  "updated_at": "2018-07-17T21:47:32Z",
  "closed_at": "2018-07-17T21:47:31Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nSee below.\r\n\r\n**What is the current behavior?**\r\n\r\n1. (Bug / Inconsistency)\r\n```jsx\r\n<input type=\"radio\" checked={false} />\r\n```\r\nNo Warning.\r\n\r\n2. (Feature Request)\r\n```jsx\r\n<input type=\"radio\" checked={true} onChange={undefined} />\r\n```\r\n`Warning: Failed prop type: You provided a 'checked' prop to a form field without an 'onChange' handler. This will render a read-only field. If the field should be mutable use 'defaultChecked'. Otherwise, set either 'onChange' or 'readOnly'.'`\r\n\r\n3. (Bug?)\r\n```jsx\r\n<select value=\"foo\" readOnly={true}>...</select>\r\n```\r\nNo warning.\r\n\r\n**What is the expected behavior?**\r\n\r\n1. Passing a falsy `value` or `checked` attribute will not trigger a warning, but a truthy value does.\r\n\r\n2. If onChange is passed as undefined (or null?) this should be considered as an acknowledgement and silence the warning. I have a case where I split the render method from the component and use it as a preview. When the component is interactive I use the component. When doing a preview I pass undefined as my change handler. A warning is shown to tell me I \"forgot\" it, but I intended it to be this way.\r\n\r\n3. Going along with 2, I can pass `readOnly={!handleChange}`, but according to DefinitelyTyped this isn't a valid attribute for select. I can't use disabled because it changes the appearance of the field.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.2.0\r\nChrome 65\r\n\r\n**Other**\r\n\r\nA proposed \"fix\" would be to change:\r\n\r\nhttps://github.com/facebook/react/blob/37e4329bc81def4695211d6e3795a654ef4d84f5/packages/react-dom/src/shared/ReactControlledValuePropTypes.js#L27-L33\r\n\r\nto:\r\n\r\n```js\r\nif ( \r\n    !(propName in props) || // Fixes 1\r\n    hasReadOnlyValue[props.type] || \r\n    \"onChange\" in props ||  // Fixes 2\r\n    props.readOnly || \r\n    props.disabled \r\n ) { \r\n```\r\n\r\nAnd:\r\n\r\nhttps://github.com/facebook/react/blob/37e4329bc81def4695211d6e3795a654ef4d84f5/packages/react-dom/src/shared/ReactControlledValuePropTypes.js#L44-L49\r\n\r\nto:\r\n\r\n```js\r\nif (\r\n    !(propName in props[propName]) || // Fixes 1\r\n    \"onChange\" in props || // Fixes 2\r\n    props.readOnly ||\r\n    props.disabled\r\n) {\r\n```",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
