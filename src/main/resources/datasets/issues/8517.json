{
  "url": "https://api.github.com/repos/facebook/react/issues/8517",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/8517/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/8517/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/8517/events",
  "html_url": "https://github.com/facebook/react/issues/8517",
  "id": 194110002,
  "node_id": "MDU6SXNzdWUxOTQxMTAwMDI=",
  "number": 8517,
  "title": "DX feature: more specific error when render returns Component instead of Element",
  "user": {
    "login": "slorber",
    "id": 749374,
    "node_id": "MDQ6VXNlcjc0OTM3NA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/749374?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slorber",
    "html_url": "https://github.com/slorber",
    "followers_url": "https://api.github.com/users/slorber/followers",
    "following_url": "https://api.github.com/users/slorber/following{/other_user}",
    "gists_url": "https://api.github.com/users/slorber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slorber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slorber/subscriptions",
    "organizations_url": "https://api.github.com/users/slorber/orgs",
    "repos_url": "https://api.github.com/users/slorber/repos",
    "events_url": "https://api.github.com/users/slorber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slorber/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-12-07T17:14:13Z",
  "updated_at": "2017-10-04T15:37:38Z",
  "closed_at": "2017-10-04T15:37:31Z",
  "author_association": "CONTRIBUTOR",
  "body": "\r\nVersion: 15.4.1\r\n\r\nWhen the render function returns a React Component instead of a React Element, the error message might be quite cryptic, like:\r\n\r\n> invariant.js:38 Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined.\r\n\r\nhttps://jsfiddle.net/69z2wepo/64457/\r\n\r\nI think React could try to detect that the render function is returning a component instead of an element, and print something convenient (like its displayName).\r\n\r\nWhy is this useful? Because for example I'm using a lib where there was an API breaking change where a prop has been changed from component to element, and it was hard to find the cause of the problem, even by looking at invarient stack/variables in debugger. (see https://github.com/akiran/react-slick/issues/458)\r\n\r\n\r\nQuite related but it seems that if React tries to put a component in the JSX (like `<span>{Component}</span>`, but also with `React.createElement`) this is simply swallowed, I think a warning would be useful too :) see https://jsfiddle.net/69z2wepo/64460/",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
