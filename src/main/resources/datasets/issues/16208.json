{
  "url": "https://api.github.com/repos/facebook/react/issues/16208",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16208/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16208/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16208/events",
  "html_url": "https://github.com/facebook/react/issues/16208",
  "id": 472971209,
  "node_id": "MDU6SXNzdWU0NzI5NzEyMDk=",
  "number": 16208,
  "title": "ReactCSSTransitionGroup deletes elements from DOM after animation",
  "user": {
    "login": "uzinouzi",
    "id": 33220427,
    "node_id": "MDQ6VXNlcjMzMjIwNDI3",
    "avatar_url": "https://avatars2.githubusercontent.com/u/33220427?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/uzinouzi",
    "html_url": "https://github.com/uzinouzi",
    "followers_url": "https://api.github.com/users/uzinouzi/followers",
    "following_url": "https://api.github.com/users/uzinouzi/following{/other_user}",
    "gists_url": "https://api.github.com/users/uzinouzi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/uzinouzi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/uzinouzi/subscriptions",
    "organizations_url": "https://api.github.com/users/uzinouzi/orgs",
    "repos_url": "https://api.github.com/users/uzinouzi/repos",
    "events_url": "https://api.github.com/users/uzinouzi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/uzinouzi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-07-25T16:55:37Z",
  "updated_at": "2019-07-27T12:25:15Z",
  "closed_at": "2019-07-27T12:25:15Z",
  "author_association": "NONE",
  "body": "ReactCSSTransitionGroup deletes elements from DOM after animation. I don't know why.\r\n\r\nThis is my component\r\n\r\n```\r\n`import React from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\nimport WorkItem from '../WorkItem';\r\n\r\nclass PortfolioSectionPanel extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showWorks: false,\r\n            works: [\r\n                {\r\n                    type: 'Веб-разработка',\r\n                    link: 'some',\r\n                },\r\n                {\r\n                    type: 'Продвижение',\r\n                    link: 'some1',\r\n                },\r\n                {\r\n                    type: 'Скриптинг',\r\n                    link: 'some',\r\n                },\r\n                {\r\n                    type: 'Веб-дизайн',\r\n                    link: 'some1',\r\n                },\r\n                {\r\n                    type: 'Копирайтинг',\r\n                    link: 'some',\r\n                }\r\n            ]\r\n        }\r\n\r\n        this.showWorks = () => {\r\n            this.setState({\r\n                showWorks: !this.state.showWorks,\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n\r\n        let workItems;\r\n\r\n        if(this.state.showWorks) {\r\n            let {works} = this.state;\r\n\r\n            const angleRad = 360 / works.length * 0.017; //Частота кругов в радианах\r\n            const bg = document.getElementById('portfolio-panel-disk');\r\n            let radius;\r\n            if(bg) {\r\n                radius = parseInt(getComputedStyle(bg).width) / 2;\r\n            }\r\n\r\n            workItems = works.map((currentValue, index) => {\r\n                return <WorkItem \r\n                        type={currentValue.type} \r\n                        link={currentValue.link} \r\n                        key={index + 50} \r\n                        leftOffset={radius - radius * Math.cos(angleRad * index)}\r\n                        topOffset={radius - radius * Math.sin(angleRad * index)}  />\r\n            })\r\n        } else {\r\n            workItems = null;\r\n        }\r\n   \r\n        return(\r\n\r\n            <div className='portfolio-panel' id='porfolioPanel' ref={this.props.link}>\r\n                <div className='portfolio-panel-background' ref={this.props.linkCircle} onTransitionEnd={this.showWorks} >\r\n                    <div className='portfolio-panel-disk' id='portfolio-panel-disk'>\r\n                        <ReactCSSTransitionGroup\r\n                        transitionName='work-item'\r\n                        transitionEnterTimeout={500}\r\n                        transitionLeaveTimeout={500}>\r\n                            {workItems}\r\n                        </ReactCSSTransitionGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\n\r\nexport default PortfolioSectionPanel;`\r\n```\r\n\r\nLess that I using:\r\n\r\n```\r\n`.work-item {\r\n    width: 400px;\r\n    height: 400px;\r\n    background-color: @maxColor;\r\n    transform:translate(-50%, -50%);\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    color: @whiteColor;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n\r\n    &__type {\r\n        font-size: 1.6rem;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    &-enter {\r\n        opacity: 0;\r\n        transition: .5s;\r\n    }\r\n\r\n    &-enter-active {\r\n        opacity: 1;\r\n    }\r\n\r\n    &-leave {\r\n        opacity: 1;\r\n        transition: .5s;\r\n    }\r\n\r\n    &-leave-active {\r\n        opacity: 0;\r\n    }\r\n}`\r\n```\r\n\r\nVideo with my proplem: https://wmpics.pics/di-EUJC.gif",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
