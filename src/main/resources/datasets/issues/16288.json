{
  "url": "https://api.github.com/repos/facebook/react/issues/16288",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16288/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16288/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16288/events",
  "html_url": "https://github.com/facebook/react/pull/16288",
  "id": 476581977,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0MDg3MTY0",
  "number": 16288,
  "title": "Fix hydration bug with nested suspense boundaries",
  "user": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-08-04T18:45:14Z",
  "updated_at": "2019-08-05T23:36:14Z",
  "closed_at": "2019-08-05T23:36:14Z",
  "author_association": "MEMBER",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/16288",
    "html_url": "https://github.com/facebook/react/pull/16288",
    "diff_url": "https://github.com/facebook/react/pull/16288.diff",
    "patch_url": "https://github.com/facebook/react/pull/16288.patch"
  },
  "body": "This happens in this case: `<!--$!--><!--$!-->...<!--/$--><!--/$-->...`\r\n\r\ngetNextHydratableInstanceAfterSuspenseInstance didn't take\r\nSUSPENSE_FALLBACK_START_DATA or SUSPENSE_PENDING_START_DATA into account\r\nso if a boundary was in one of those states, it wouldn't be considered to\r\npush the stack of boundaries. As a result the first end comment was\r\nconsidered the end but it really should've been the second end comment.\r\n\r\nThe next comment then would've been considered something that can be\r\nskipped. However, since the logic in there considered all comments as\r\n\"hydratable\", it was considered a hydratable node. Since it was considered\r\na node that didn't actually correspond to anything in the React tree it got\r\ndeleted (instead of left alone).\r\n\r\nThe HTML is now `<!--$!--><!--$!-->...<!--/$-->...` and the trailing\r\ncontent is now hydrated since it did match something.\r\n\r\nNext, since this was client rendered, we're going to delete the suspended\r\nboundary by calling clearSuspenseBoundary and then inserting new content.\r\nHowever, clearSuspenseBoundary *is* aware of SUSPENSE_FALLBACK_START_DATA\r\nand assumes that there must be another `<!--/$-->` after the first one.\r\nAs a result it deleted the trailing content from the DOM since it should\r\nbe part of the boundary. However, those DOM nodes were already hydrated in\r\nthe React tree. So we end up in an inconsistent state.\r\n\r\nWhen we then try to insert the new content we throw as a result.\r\n\r\nI think we would have recovered correctly if clearSuspenseBoundary and\r\ngetNextHydratableInstanceAfterSuspenseInstance had the *same* bug but\r\nbecause they were inconsistent we ended up in a bad place.\r\n\r\nLikewise, if the getNextHydratable would've skipped over the comment instead of deleted it, it also would've recovered correctly. So it's a combination of both bugs that cause this.\r\n\r\nTODO: Test.",
  "closed_by": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  }
}
