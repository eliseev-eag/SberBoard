{
  "url": "https://api.github.com/repos/facebook/react/issues/875",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/875/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/875/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/875/events",
  "html_url": "https://github.com/facebook/react/issues/875",
  "id": 25509932,
  "node_id": "MDU6SXNzdWUyNTUwOTkzMg==",
  "number": 875,
  "title": "transferPropsTo, shall we?",
  "user": {
    "login": "syranide",
    "id": 1714255,
    "node_id": "MDQ6VXNlcjE3MTQyNTU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/syranide",
    "html_url": "https://github.com/syranide",
    "followers_url": "https://api.github.com/users/syranide/followers",
    "following_url": "https://api.github.com/users/syranide/following{/other_user}",
    "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
    "organizations_url": "https://api.github.com/users/syranide/orgs",
    "repos_url": "https://api.github.com/users/syranide/repos",
    "events_url": "https://api.github.com/users/syranide/events{/privacy}",
    "received_events_url": "https://api.github.com/users/syranide/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2014-01-13T16:41:34Z",
  "updated_at": "2014-06-11T20:01:42Z",
  "closed_at": "2014-06-11T20:00:47Z",
  "author_association": "CONTRIBUTOR",
  "body": "Let's make an issue out of this and we'll hopefully get some progress on this.\n\nIssue of the day, our imaginary component is a thin wrapper for a `<div>` using `transferPropsTo`. It defines a custom `onError`-event, however `onError` may soon be a real DOM property in React which breaks the component as the property is still transfered.\n\n---\n\nThe current implementation should really be called something like `transferDOMPropsTo` as it applies special transforms to certain DOM attributes. It would also benefit from being able to exclude properties to transfer, properties that we component itself consumes.\n\nIt seems to me that you can basically categorize DOM properties into three categories, CSS (`style` and `className`), events (supported `on*`) and misc (everything else, `checked`, `rows`, etc)... perhaps there are more. I can't really formulate any use-cases right now, but it seems like you would often want ALL, only CSS + events, or just CSS even, and everything else the component takes care of.\n\nPersonally I feel like it would be interesting if React exported the helpers for the transfer strategies, so that we could easily have our own properties like `headerStyle`, `bodyStyle`, `bodyClassName` that works like `style` and `className` does. Perhaps it isn't as useful in practice though.\n\nI guess `on*`-events could also benefit from a transfer strategy so that a component could listen for `onClick` while also allowing the parent to listen to `onClick`?\n",
  "closed_by": {
    "login": "sebmarkbage",
    "id": 63648,
    "node_id": "MDQ6VXNlcjYzNjQ4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebmarkbage",
    "html_url": "https://github.com/sebmarkbage",
    "followers_url": "https://api.github.com/users/sebmarkbage/followers",
    "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
    "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
    "repos_url": "https://api.github.com/users/sebmarkbage/repos",
    "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
    "type": "User",
    "site_admin": false
  }
}
