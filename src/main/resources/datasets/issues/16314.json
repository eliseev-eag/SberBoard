{
  "url": "https://api.github.com/repos/facebook/react/issues/16314",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16314/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16314/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16314/events",
  "html_url": "https://github.com/facebook/react/issues/16314",
  "id": 478297781,
  "node_id": "MDU6SXNzdWU0NzgyOTc3ODE=",
  "number": 16314,
  "title": "yarn test failing",
  "user": {
    "login": "kambleaa007",
    "id": 19818679,
    "node_id": "MDQ6VXNlcjE5ODE4Njc5",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19818679?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kambleaa007",
    "html_url": "https://github.com/kambleaa007",
    "followers_url": "https://api.github.com/users/kambleaa007/followers",
    "following_url": "https://api.github.com/users/kambleaa007/following{/other_user}",
    "gists_url": "https://api.github.com/users/kambleaa007/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kambleaa007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kambleaa007/subscriptions",
    "organizations_url": "https://api.github.com/users/kambleaa007/orgs",
    "repos_url": "https://api.github.com/users/kambleaa007/repos",
    "events_url": "https://api.github.com/users/kambleaa007/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kambleaa007/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 620368407,
      "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
      "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
      "name": "Resolution: Needs More Information",
      "color": "fffde7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-08-08T07:25:59Z",
  "updated_at": "2019-09-03T08:52:16Z",
  "closed_at": "2019-09-03T08:52:16Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n**What is the current behavior?**\r\nfailing yarn tests\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\nshould success\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n\r\nSummary of all failing tests\r\n FAIL  packages/react-dom/src/__tests__/CSSPropertyOperations-test.js\r\n  ● CSSPropertyOperations › should not add units to CSS custom properties\r\n\r\n    expect(received).toEqual(expected)\r\n\r\n    Expected value to equal:\r\n      \"5\"\r\n    Received:\r\n      undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      253 |     ReactDOM.render(<Comp />, root);\r\n      254 |\r\n    > 255 |     expect(root.children[0].style.Foo).toEqual('5');\r\n          |                                        ^\r\n      256 |   });\r\n      257 | });\r\n      258 |\r\n\r\n      at Object.<anonymous> (packages/react-dom/src/__tests__/CSSPropertyOperations-test.js:255:40)\r\n\r\n FAIL  packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js (6.559s)\r\n  ● react-hooks › valid ›\r\n      // Valid because hooks can call hooks.\r\n      function useHook() { useState(); }\r\n      const whatever = function useHook() { useState(); };\r\n      const useHook1 = () => { useState(); };\r\n      let useHook2 = () => useState();\r\n      useHook2 = () => { useState(); };\r\n      ({useHook: () => { useState(); }});\r\n      ({useHook() { useState(); }});\r\n      const {useHook = () => { useState(); }} = {};\r\n      ({useHook = () => { useState(); }} = {});\r\n\r\n\r\n    assert.strictEqual(received, expected)\r\n\r\n    Expected value to strictly be equal to:\r\n      0\r\n    Received:\r\n      1\r\n\r\n    Message:\r\n      Should have no errors but had 1: [ { ruleId: null,\r\n        fatal: true,\r\n        severity: 2,\r\n        source: '      const {useHook = () => { useState(); }} = {};',\r\n        message:\r\n         'Parsing error: Identifier \\'useHook\\' has already been declared\\n\\n\\u001b[0m \\u001b[90m  8 | \\u001b[39m      ({useHook\\u001b[33m:\\u001b[39m () \\u001b[33m=>\\u001b[39m { useState()\\u001b[33m;\\u001b[39m }})\\u001b[33m;\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m  9 | \\u001b[39m      ({useHook() { useState()\\u001b[33m;\\u001b[39m }})\\u001b[33m;\\u001b[39m\\u001b[0m\\n\\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[22m\\u001b[39m\\u001b[90m 10 | \\u001b[39m      \\u001b[36mconst\\u001b[39m {useHook \\u001b[33m=\\u001b[39m () \\u001b[33m=>\\u001b[39m { useState()\\u001b[33m;\\u001b[39m }} \\u001b[33m=\\u001b[39m {}\\u001b[33m;\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m    | \\u001b[39m             \\u001b[31m\\u001b[1m^\\u001b[22m\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 11 | \\u001b[39m      ({useHook \\u001b[33m=\\u001b[39m () \\u001b[33m=>\\u001b[39m { useState()\\u001b[33m;\\u001b[39m }} \\u001b[33m=\\u001b[39m {})\\u001b[33m;\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 12 | \\u001b[39m    \\u001b[0m',\r\n        line: 10,\r\n        column: 14 } ]\r\n\r\n      at testValidTemplate (node_modules/eslint/lib/testers/rule-tester.js:418:20)\r\n      at Object.RuleTester.it (node_modules/eslint/lib/testers/rule-tester.js:573:25)\r\n\r\n FAIL  packages/react/src/__tests__/createReactClassIntegration-test.js (6.668s)\r\n  ● create-react-class-integration › warns if getDerivedStateFromProps is not static\r\n\r\n    Error: Unexpected warning recorded: - Expected\r\n    + Received\r\n\r\n    - Component: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.\r\n    + Warning: Foo: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.\r\n\r\n      129 |         // We don't throw an Error here though,\r\n      130 |         // Because it might be suppressed by ReactFiberScheduler.\r\n    > 131 |         unexpectedWarnings.push(new Error(errorMessage));\r\n          |                                   ^\r\n      132 |       };\r\n      133 |\r\n      134 |       // TODO Decide whether we need to support nested toWarn* expectations.\r\n\r\n      at BufferedConsole.consoleSpy (scripts/jest/matchers/toWarnDev.js:131:35)\r\n      at warningWithoutStack (packages/shared/warningWithoutStack.js:40:32)\r\n      at checkClassInstance (packages/react-reconciler/src/ReactFiberClassComponent.js:500:76)\r\n      at mountClassInstance (packages/react-reconciler/src/ReactFiberClassComponent.js:798:5)\r\n      at updateClassComponent (packages/react-reconciler/src/ReactFiberBeginWork.js:2614:168)\r\n      at beginWork (packages/react-reconciler/src/ReactFiberBeginWork.js:2944:1125)\r\n      at beginWork (packages/react-reconciler/src/ReactFiberWorkLoop.js:3201:153)\r\n      at performUnitOfWork (packages/react-reconciler/src/ReactFiberWorkLoop.js:3016:501)\r\n      at workLoopSync (packages/react-reconciler/src/ReactFiberWorkLoop.js:3012:213)\r\n      at renderRoot (packages/react-reconciler/src/ReactFiberWorkLoop.js:2925:242)\r\n      at scheduleUpdateOnFiber (packages/react-reconciler/src/ReactFiberWorkLoop.js:2835:22)\r\n      at scheduleRootUpdate (packages/react-reconciler/src/ReactFiberReconciler.js:491:560)\r\n      at updateContainerAtExpirationTime (packages/react-reconciler/src/ReactFiberReconciler.js:492:564)\r\n      at updateContainer (packages/react-reconciler/src/ReactFiberReconciler.js:493:364)\r\n      at packages/react-dom/src/client/ReactDOM.js:570:35\r\n      at unbatchedUpdates (packages/react-reconciler/src/ReactFiberWorkLoop.js:2886:240)\r\n      at legacyRenderSubtreeIntoContainer (packages/react-dom/src/client/ReactDOM.js:569:34)\r\n      at Object.render (packages/react-dom/src/client/ReactDOM.js:677:12)\r\n      at packages/react/src/__tests__/createReactClassIntegration-test.js:454:18\r\n      at Object.matcher (scripts/jest/matchers/toWarnDev.js:143:11)\r\n      at Object.throwingMatcher [as toWarnDev] (node_modules/expect/build/index.js:320:33)\r\n      at Object.<anonymous> (packages/react/src/__tests__/createReactClassIntegration-test.js:455:5)\r\n      at Object.<anonymous> (packages/react/src/__tests__/createReactClassIntegration-test.js:455:5)\r\n\r\n  ● create-react-class-integration › warns if getDerivedStateFromError is not static\r\n\r\n    Error: Unexpected warning recorded: - Expected\r\n    + Received\r\n\r\n    - Component: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.\r\n    + Warning: Foo: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.\r\n\r\n      129 |         // We don't throw an Error here though,\r\n      130 |         // Because it might be suppressed by ReactFiberScheduler.\r\n    > 131 |         unexpectedWarnings.push(new Error(errorMessage));\r\n          |                                   ^\r\n      132 |       };\r\n      133 |\r\n      134 |       // TODO Decide whether we need to support nested toWarn* expectations.\r\n\r\n      at BufferedConsole.consoleSpy (scripts/jest/matchers/toWarnDev.js:131:35)\r\n      at warningWithoutStack (packages/shared/warningWithoutStack.js:40:32)\r\n      at checkClassInstance (packages/react-reconciler/src/ReactFiberClassComponent.js:508:76)\r\n      at mountClassInstance (packages/react-reconciler/src/ReactFiberClassComponent.js:798:5)\r\n      at updateClassComponent (packages/react-reconciler/src/ReactFiberBeginWork.js:2614:168)\r\n      at beginWork (packages/react-reconciler/src/ReactFiberBeginWork.js:2944:1125)\r\n      at beginWork (packages/react-reconciler/src/ReactFiberWorkLoop.js:3201:153)\r\n      at performUnitOfWork (packages/react-reconciler/src/ReactFiberWorkLoop.js:3016:501)\r\n      at workLoopSync (packages/react-reconciler/src/ReactFiberWorkLoop.js:3012:213)\r\n      at renderRoot (packages/react-reconciler/src/ReactFiberWorkLoop.js:2925:242)\r\n      at scheduleUpdateOnFiber (packages/react-reconciler/src/ReactFiberWorkLoop.js:2835:22)\r\n      at scheduleRootUpdate (packages/react-reconciler/src/ReactFiberReconciler.js:491:560)\r\n      at updateContainerAtExpirationTime (packages/react-reconciler/src/ReactFiberReconciler.js:492:564)\r\n      at updateContainer (packages/react-reconciler/src/ReactFiberReconciler.js:493:364)\r\n      at packages/react-dom/src/client/ReactDOM.js:570:35\r\n      at unbatchedUpdates (packages/react-reconciler/src/ReactFiberWorkLoop.js:2886:240)\r\n      at legacyRenderSubtreeIntoContainer (packages/react-dom/src/client/ReactDOM.js:569:34)\r\n      at Object.render (packages/react-dom/src/client/ReactDOM.js:677:12)\r\n      at packages/react/src/__tests__/createReactClassIntegration-test.js:472:18\r\n      at Object.matcher (scripts/jest/matchers/toWarnDev.js:143:11)\r\n      at Object.throwingMatcher [as toWarnDev] (node_modules/expect/build/index.js:320:33)\r\n      at Object.<anonymous> (packages/react/src/__tests__/createReactClassIntegration-test.js:473:5)\r\n      at Object.<anonymous> (packages/react/src/__tests__/createReactClassIntegration-test.js:473:5)\r\n\r\n  ● create-react-class-integration › warns if getSnapshotBeforeUpdate is static\r\n\r\n    Error: Unexpected warning recorded: - Expected\r\n    + Received\r\n\r\n    - Component: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.\r\n    + Warning: Foo: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.\r\n\r\n      129 |         // We don't throw an Error here though,\r\n      130 |         // Because it might be suppressed by ReactFiberScheduler.\r\n    > 131 |         unexpectedWarnings.push(new Error(errorMessage));\r\n          |                                   ^\r\n      132 |       };\r\n      133 |\r\n      134 |       // TODO Decide whether we need to support nested toWarn* expectations.\r\n\r\n      at BufferedConsole.consoleSpy (scripts/jest/matchers/toWarnDev.js:131:35)\r\n      at warningWithoutStack (packages/shared/warningWithoutStack.js:40:32)\r\n      at checkClassInstance (packages/react-reconciler/src/ReactFiberClassComponent.js:516:73)\r\n      at mountClassInstance (packages/react-reconciler/src/ReactFiberClassComponent.js:798:5)\r\n      at updateClassComponent (packages/react-reconciler/src/ReactFiberBeginWork.js:2614:168)\r\n      at beginWork (packages/react-reconciler/src/ReactFiberBeginWork.js:2944:1125)\r\n      at beginWork (packages/react-reconciler/src/ReactFiberWorkLoop.js:3201:153)\r\n      at performUnitOfWork (packages/react-reconciler/src/ReactFiberWorkLoop.js:3016:501)\r\n      at workLoopSync (packages/react-reconciler/src/ReactFiberWorkLoop.js:3012:213)\r\n      at renderRoot (packages/react-reconciler/src/ReactFiberWorkLoop.js:2925:242)\r\n      at scheduleUpdateOnFiber (packages/react-reconciler/src/ReactFiberWorkLoop.js:2835:22)\r\n      at scheduleRootUpdate (packages/react-reconciler/src/ReactFiberReconciler.js:491:560)\r\n      at updateContainerAtExpirationTime (packages/react-reconciler/src/ReactFiberReconciler.js:492:564)\r\n      at updateContainer (packages/react-reconciler/src/ReactFiberReconciler.js:493:364)\r\n      at packages/react-dom/src/client/ReactDOM.js:570:35\r\n      at unbatchedUpdates (packages/react-reconciler/src/ReactFiberWorkLoop.js:2886:240)\r\n      at legacyRenderSubtreeIntoContainer (packages/react-dom/src/client/ReactDOM.js:569:34)\r\n      at Object.render (packages/react-dom/src/client/ReactDOM.js:677:12)\r\n      at packages/react/src/__tests__/createReactClassIntegration-test.js:492:18\r\n      at Object.matcher (scripts/jest/matchers/toWarnDev.js:143:11)\r\n      at Object.throwingMatcher [as toWarnDev] (node_modules/expect/build/index.js:320:33)\r\n      at Object.<anonymous> (packages/react/src/__tests__/createReactClassIntegration-test.js:493:5)\r\n      at Object.<anonymous> (packages/react/src/__tests__/createReactClassIntegration-test.js:493:5)\r\n\r\n FAIL  packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js (7.708s)\r\n  ● react-hooks › valid ›\r\n        function useMyThing(myRef) {\r\n          const myRef = useRef();\r\n          useEffect(() => {\r\n            const handleMove = () => {};\r\n            const node = myRef.current;\r\n            node.addEventListener('mousemove', handleMove);\r\n            return () => node.removeEventListener('mousemove', handleMove);\r\n          }, [myRef]);\r\n          return <div ref={myRef} />;\r\n        }\r\n\r\n\r\n    assert.strictEqual(received, expected)\r\n\r\n    Expected value to strictly be equal to:\r\n      0\r\n    Received:\r\n      1\r\n\r\n    Message:\r\n      Should have no errors but had 1: [ { ruleId: null,\r\n        fatal: true,\r\n        severity: 2,\r\n        source: '          const myRef = useRef();',\r\n        message:\r\n         'Parsing error: Identifier \\'myRef\\' has already been declared\\n\\n\\u001b[0m \\u001b[90m 1 | \\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 2 | \\u001b[39m        \\u001b[36mfunction\\u001b[39m useMyThing(myRef) {\\u001b[0m\\n\\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[22m\\u001b[39m\\u001b[90m 3 | \\u001b[39m          \\u001b[36mconst\\u001b[39m myRef \\u001b[33m=\\u001b[39m useRef()\\u001b[33m;\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m   | \\u001b[39m                \\u001b[31m\\u001b[1m^\\u001b[22m\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 4 | \\u001b[39m          useEffect(() \\u001b[33m=>\\u001b[39m {\\u001b[0m\\n\\u001b[0m \\u001b[90m 5 | \\u001b[39m            \\u001b[36mconst\\u001b[39m handleMove \\u001b[33m=\\u001b[39m () \\u001b[33m=>\\u001b[39m {}\\u001b[33m;\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 6 | \\u001b[39m            \\u001b[36mconst\\u001b[39m node \\u001b[33m=\\u001b[39m myRef\\u001b[33m.\\u001b[39mcurrent\\u001b[33m;\\u001b[39m\\u001b[0m',\r\n        line: 3,\r\n        column: 17 } ]\r\n\r\n      at testValidTemplate (node_modules/eslint/lib/testers/rule-tester.js:418:20)\r\n      at Object.RuleTester.it (node_modules/eslint/lib/testers/rule-tester.js:573:25)\r\n\r\n FAIL  packages/react-dom/src/__tests__/ReactDOMComponent-test.js (15.691s)\r\n  ● ReactDOMComponent › Object stringification › should pass objects as attributes if they define toString\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"hello\"\r\n    Received: \"http://localhost/hello\"\r\n\r\n      2428 |\r\n      2429 |       ReactDOM.render(<img src={obj} />, container);\r\n    > 2430 |       expect(container.firstChild.src).toBe('hello');\r\n           |                                        ^\r\n      2431 |\r\n      2432 |       ReactDOM.render(<svg arabicForm={obj} />, container);\r\n      2433 |       expect(container.firstChild.getAttribute('arabic-form')).toBe('hello');\r\n\r\n      at Object.<anonymous> (packages/react-dom/src/__tests__/ReactDOMComponent-test.js:2430:40)\r\n\r\n  ● ReactDOMComponent › Object stringification › allows objects that inherit a custom toString method\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"hello.jpg\"\r\n    Received: \"http://localhost/hello.jpg\"\r\n\r\n      2462 |       const el = ReactTestUtils.renderIntoDocument(<img src={child} />);\r\n      2463 |\r\n    > 2464 |       expect(el.src).toBe('hello.jpg');\r\n           |                      ^\r\n      2465 |     });\r\n      2466 |\r\n      2467 |     it('assigns ajaxify (an important internal FB attribute)', function() {\r\n\r\n      at Object.<anonymous> (packages/react-dom/src/__tests__/ReactDOMComponent-test.js:2464:22)\r\n\r\n FAIL  packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js (47.993s)\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders custom properties with server string render\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"5\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      399 |         // This seems like an odd way computed properties are exposed in jsdom.\r\n      400 |         // In a real browser we'd read it with e.style.getPropertyValue('--foo')\r\n    > 401 |         expect(e.style.Foo).toBe('5');\r\n          |                             ^\r\n      402 |       });\r\n      403 |\r\n      404 |       itRenders('camel cased custom properties', async render => {\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:401:29\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders custom properties with server stream render\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"5\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      399 |         // This seems like an odd way computed properties are exposed in jsdom.\r\n      400 |         // In a real browser we'd read it with e.style.getPropertyValue('--foo')\r\n    > 401 |         expect(e.style.Foo).toBe('5');\r\n          |                             ^\r\n      402 |       });\r\n      403 |\r\n      404 |       itRenders('camel cased custom properties', async render => {\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:401:29\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders custom properties with clean client render\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"5\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      399 |         // This seems like an odd way computed properties are exposed in jsdom.\r\n      400 |         // In a real browser we'd read it with e.style.getPropertyValue('--foo')\r\n    > 401 |         expect(e.style.Foo).toBe('5');\r\n          |                             ^\r\n      402 |       });\r\n      403 |\r\n      404 |       itRenders('camel cased custom properties', async render => {\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:401:29\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders custom properties with client render on top of good server markup\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"5\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      399 |         // This seems like an odd way computed properties are exposed in jsdom.\r\n      400 |         // In a real browser we'd read it with e.style.getPropertyValue('--foo')\r\n    > 401 |         expect(e.style.Foo).toBe('5');\r\n          |                             ^\r\n      402 |       });\r\n      403 |\r\n      404 |       itRenders('camel cased custom properties', async render => {\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:401:29\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders camel cased custom properties with server string render\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"#000000\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      404 |       itRenders('camel cased custom properties', async render => {\r\n      405 |         const e = await render(<div style={{'--someColor': '#000000'}} />);\r\n    > 406 |         expect(e.style.SomeColor).toBe('#000000');\r\n          |                                   ^\r\n      407 |       });\r\n      408 |\r\n      409 |       itRenders('no undefined styles', async render => {\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:406:35\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders camel cased custom properties with server stream render\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"#000000\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      404 |       itRenders('camel cased custom properties', async render => {\r\n      405 |         const e = await render(<div style={{'--someColor': '#000000'}} />);\r\n    > 406 |         expect(e.style.SomeColor).toBe('#000000');\r\n          |                                   ^\r\n      407 |       });\r\n      408 |\r\n      409 |       itRenders('no undefined styles', async render => {\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:406:35\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders camel cased custom properties with clean client render\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"#000000\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      404 |       itRenders('camel cased custom properties', async render => {\r\n      405 |         const e = await render(<div style={{'--someColor': '#000000'}} />);\r\n    > 406 |         expect(e.style.SomeColor).toBe('#000000');\r\n          |                                   ^\r\n      407 |       });\r\n      408 |\r\n      409 |       itRenders('no undefined styles', async render => {\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:406:35\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders camel cased custom properties with client render on top of good server markup\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"#000000\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      404 |       itRenders('camel cased custom properties', async render => {\r\n      405 |         const e = await render(<div style={{'--someColor': '#000000'}} />);\r\n    > 406 |         expect(e.style.SomeColor).toBe('#000000');\r\n          |                                   ^\r\n      407 |       });\r\n      408 |\r\n      409 |       itRenders('no undefined styles', async render => {\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:406:35\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders unitless-number rules with prefixes with server string render\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"10\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      449 |\r\n      450 |         expect(style.lineClamp).toBe('10');\r\n    > 451 |         expect(style.WebkitLineClamp).toBe('10');\r\n          |                                       ^\r\n      452 |         expect(style.MozFlexGrow).toBe('10');\r\n      453 |         // jsdom is inconsistent in the style property name\r\n      454 |         // it uses on the client and when processing server markup.\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:451:39\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders unitless-number rules with prefixes with server stream render\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"10\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      449 |\r\n      450 |         expect(style.lineClamp).toBe('10');\r\n    > 451 |         expect(style.WebkitLineClamp).toBe('10');\r\n          |                                       ^\r\n      452 |         expect(style.MozFlexGrow).toBe('10');\r\n      453 |         // jsdom is inconsistent in the style property name\r\n      454 |         // it uses on the client and when processing server markup.\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:451:39\r\n\r\n  ● ReactDOMServerIntegration › property to attribute mapping › inline styles › renders unitless-number rules with prefixes with client render on top of good server markup\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: \"10\"\r\n    Received: undefined\r\n\r\n    Difference:\r\n\r\n      Comparing two different types of values. Expected string but received undefined.\r\n\r\n      449 |\r\n      450 |         expect(style.lineClamp).toBe('10');\r\n    > 451 |         expect(style.WebkitLineClamp).toBe('10');\r\n          |                                       ^\r\n      452 |         expect(style.MozFlexGrow).toBe('10');\r\n      453 |         // jsdom is inconsistent in the style property name\r\n      454 |         // it uses on the client and when processing server markup.\r\n\r\n      at packages/react-dom/src/__tests__/ReactDOMServerIntegrationAttributes-test.js:451:39\r\n\r\n\r\nTest Suites: 6 failed, 223 passed, 229 total\r\nTests:       19 failed, 26 skipped, 5017 passed, 5062 total\r\nSnapshots:   85 passed, 85 total\r\nTime:        149.925s\r\nRan all test suites.\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\r\n\r\n",
  "closed_by": {
    "login": "threepointone",
    "id": 18808,
    "node_id": "MDQ6VXNlcjE4ODA4",
    "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/threepointone",
    "html_url": "https://github.com/threepointone",
    "followers_url": "https://api.github.com/users/threepointone/followers",
    "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
    "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
    "organizations_url": "https://api.github.com/users/threepointone/orgs",
    "repos_url": "https://api.github.com/users/threepointone/repos",
    "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/threepointone/received_events",
    "type": "User",
    "site_admin": false
  }
}
