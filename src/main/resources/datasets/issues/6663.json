{
  "url": "https://api.github.com/repos/facebook/react/issues/6663",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6663/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6663/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6663/events",
  "html_url": "https://github.com/facebook/react/issues/6663",
  "id": 152007047,
  "node_id": "MDU6SXNzdWUxNTIwMDcwNDc=",
  "number": 6663,
  "title": "React re-render changes <input> `value` field first before `type` and re-rendering the node",
  "user": {
    "login": "gurinderhans",
    "id": 3400083,
    "node_id": "MDQ6VXNlcjM0MDAwODM=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/3400083?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gurinderhans",
    "html_url": "https://github.com/gurinderhans",
    "followers_url": "https://api.github.com/users/gurinderhans/followers",
    "following_url": "https://api.github.com/users/gurinderhans/following{/other_user}",
    "gists_url": "https://api.github.com/users/gurinderhans/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gurinderhans/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gurinderhans/subscriptions",
    "organizations_url": "https://api.github.com/users/gurinderhans/orgs",
    "repos_url": "https://api.github.com/users/gurinderhans/repos",
    "events_url": "https://api.github.com/users/gurinderhans/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gurinderhans/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-04-30T04:17:25Z",
  "updated_at": "2016-04-30T14:42:10Z",
  "closed_at": "2016-04-30T14:42:10Z",
  "author_association": "NONE",
  "body": "The following code generates two `<button>`'s and an `<input>` field whose type changes respective to the type of button clicked (or dependent on the component `state`).\n\nSo, if my rendered field is type `number` and it has the value `42` and I tap the `<button>` to change the field type to `text` with new value `hello world!`, react tries to set `<input type='number' />`'s value to `'hello world!'` before changing field type to `text`, which generates a warning in the console as show below:\n![screen shot 2016-04-29 at 9 06 45 pm](https://cloud.githubusercontent.com/assets/3400083/14933814/8c7e3af2-0e4f-11e6-92ee-c9aef99dd2ab.png)\n\nThe value definitely set's once the `type` changes, which is after the `value`, however the warning is generated.\n\n**The code is below:**\n\n``` html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>React Re-Render Warning Example</title>\n    <link rel=\"stylesheet\" href=\"../shared/css/base.css\" />\n  </head>\n  <body>\n    <h1>React Re-Render Warning Example</h1>\n    <div id=\"container\">\n      Loading...\n    </div>\n    <script src=\"../../build/react.js\"></script>\n    <script src=\"../../build/react-dom.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.min.js\"></script>\n    <script type=\"text/babel\">\n      var InnerApp = React.createClass({\n        getInitialState: function() {\n          return {\n            type: '',\n            val: ''\n          }\n        },\n\n        componentWillMount: function() {\n          this.setState({\n            type: this.props.type,\n            val: this.props.val\n          });\n        },\n\n        componentWillReceiveProps: function(nextProps) {\n          this.setState({\n            type: nextProps.type,\n            val: nextProps.val\n          });\n        },\n\n        onChange: function(event) {\n          this.setState({\n            val: event.target.value\n          })\n        },\n\n        render: function() {\n          var renderInput;\n          if (this.state.type === 'text') {\n            renderInput = (<input type='text' value={this.state.val} onChange={this.onChange} />);\n          } else {\n            renderInput = (<input type='number' value={this.state.val} onChange={this.onChange} />);\n          }\n\n          return (\n            <div>\n              {renderInput}\n            </div>\n          );\n        }\n      });\n\n      var App = React.createClass({\n        getInitialState: function() {\n          return {\n            type: 'text',\n            val: ''\n          }\n        },\n\n        changeType: function(itype) {\n          this.setState({\n            type: itype,\n            val: itype === 'text' ? 'randomstring' : 32\n          });\n        },\n\n        render: function() {\n          return (\n            <div>\n              <button onClick={this.changeType.bind(null, 'text')}>Text</button>\n              <button onClick={this.changeType.bind(null, 'number')}>Number</button>\n              <InnerApp val={this.state.val} type={this.state.type} />\n            </div>\n          );\n        }\n      });\n\n      ReactDOM.render(<App />, document.getElementById('container'));\n    </script>\n  </body>\n</html>\n```\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
