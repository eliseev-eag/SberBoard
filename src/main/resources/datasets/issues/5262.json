{
  "url": "https://api.github.com/repos/facebook/react/issues/5262",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5262/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5262/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5262/events",
  "html_url": "https://github.com/facebook/react/issues/5262",
  "id": 113117967,
  "node_id": "MDU6SXNzdWUxMTMxMTc5Njc=",
  "number": 5262,
  "title": "Calling unmountComponentAtNode recursively causes weird behavior",
  "user": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2015-10-23T23:46:17Z",
  "updated_at": "2017-10-04T01:44:17Z",
  "closed_at": "2017-10-03T22:41:22Z",
  "author_association": "COLLABORATOR",
  "body": "If you call unmountComponentAtNode recursively, it tries to unmount the same component multiple times. This means that componentWillUnmount can be called more than once (weird) which often causes inconsistent state and an exception, and if componentWillUnmount does not fail, this will cause a stack overflow.\n\nThis test case fails:\n\n```\n  it('should batch nested top-level unmounts', function() {\n    var outer;\n    var Inner = React.createClass({\n      render: function() {\n        return <div />;\n      },\n      componentWillUnmount: function() {\n        // This breaks React.\n        ReactDOM.unmountComponentAtNode(container);\n      },\n    });\n    var Outer = React.createClass({\n      render: function() {\n        return <div><Inner /></div>;\n      },\n    });\n\n    var container = document.createElement('div');\n    outer = ReactDOM.render(<Outer />, container);\n    expect(() => {\n      ReactDOM.unmountComponentAtNode(container);\n    }).not.toThrow();\n  });\n```\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
