{
  "url": "https://api.github.com/repos/facebook/react/issues/16113",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16113/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16113/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16113/events",
  "html_url": "https://github.com/facebook/react/issues/16113",
  "id": 467076634,
  "node_id": "MDU6SXNzdWU0NjcwNzY2MzQ=",
  "number": 16113,
  "title": "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined.",
  "user": {
    "login": "bellancaf",
    "id": 14964341,
    "node_id": "MDQ6VXNlcjE0OTY0MzQx",
    "avatar_url": "https://avatars0.githubusercontent.com/u/14964341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bellancaf",
    "html_url": "https://github.com/bellancaf",
    "followers_url": "https://api.github.com/users/bellancaf/followers",
    "following_url": "https://api.github.com/users/bellancaf/following{/other_user}",
    "gists_url": "https://api.github.com/users/bellancaf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bellancaf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bellancaf/subscriptions",
    "organizations_url": "https://api.github.com/users/bellancaf/orgs",
    "repos_url": "https://api.github.com/users/bellancaf/repos",
    "events_url": "https://api.github.com/users/bellancaf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bellancaf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-07-11T19:52:16Z",
  "updated_at": "2019-07-15T08:02:36Z",
  "closed_at": "2019-07-15T08:02:36Z",
  "author_association": "NONE",
  "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBugReport\r\n\r\n**What is the current behavior?**\r\nThe system on our marketplace is not able to fetch certain products but successfully manages to get others. \r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\nhere the difference \r\n-> https://www.feralhorses.co.uk/artworks/i-belong-to-you (works) \r\n-> https://www.feralhorses.co.uk/artworks/parallel-expressions (doesn't work) \r\n\r\n````\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as authActions from '../actions/authActions';\r\nimport * as lotActions from '../actions/lotActions';\r\nimport { requestCurrentLot } from '../utils/crudHelpers';\r\nimport { logActions, createLog } from '../utils/logHelpers';\r\nimport { checkToken } from '../utils/authHelpers';\r\nimport SingleArtworkPrimary from './SingleArtworkPrimary';\r\nimport SingleArtworkSecondary from './SingleArtworkSecondary';\r\nimport {\r\n  requestArtworkByName,\r\n  requestSingleArtworkGeneral,\r\n  requestArtworks\r\n} from '../utils/crudHelpers';\r\n\r\nclass SingleArtworkContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getSingleArtwork = this.getSingleArtwork.bind(this);    \r\n    this.requestArtistPrimaryArtworks = this.requestArtistPrimaryArtworks.bind(this);\r\n    this.readUrl = this.readUrl.bind(this);\r\n\r\n    this.state = {\r\n      singleArtwork: null,\r\n      artistArtworks: []      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (checkToken()) {\r\n      document.body.classList.add('is-auth');\r\n    }\r\n    this.getSingleArtwork(this.readUrl());  \r\n  }\r\n\r\n  readUrl() {\r\n    const browserPath = window.location.pathname;\r\n    return browserPath.split('/')[2];\r\n  }\r\n\r\n  getSingleArtwork(artworkTitle) {\r\n    requestSingleArtworkGeneral(artworkTitle)\r\n      .then((response) => {\r\n        if(response.data.result){\r\n          const { artwork } = response.data;\r\n          if (artwork.status === 2) {\r\n            this.requestArtistPrimaryArtworks(artwork.primary_lot_id, artwork.artist.pretty_url);\r\n          }\r\n          this.setState({\r\n            singleArtwork: artwork\r\n          });\r\n          if(checkToken()) {\r\n            createLog(logActions.primaryMarketArtwork, `Artwork: ${artwork.artwork_id}-${artwork.artwork_title} by ${artwork.artist_name}`);\r\n          }\r\n        } else {\r\n          authActions.forwardUserTo('/not-found');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  \r\n  requestArtistPrimaryArtworks(lot_id, prettyUrl) {\r\n    requestArtworks(1, lot_id, 3, {artist_pretty_url: prettyUrl})\r\n      .then((response) => {\r\n        response.data.primary_lot_artworks.map((artwork, key) => {\r\n          this.state.artistArtworks.push(artwork);\r\n        });\r\n        this.setState({\r\n          isLoading: false          \r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.singleArtwork === null) {\r\n      return (\r\n        <div style={{ minHeight: '95vh' }}>\r\n          <h3>Loading</h3>\r\n        </div>\r\n      );\r\n    } else if (this.state.singleArtwork.status === 2) {\r\n      return (\r\n        <div>\r\n          <SingleArtworkPrimary\r\n            artwork={this.state.singleArtwork}\r\n            artistArtworks={this.state.artistArtworks}\r\n            />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <SingleArtworkSecondary \r\n            artwork={this.state.singleArtwork}\r\n            />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  lot: state.lots.lot\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: {\r\n    lotActions: bindActionCreators(lotActions, dispatch)\r\n  }\r\n});\r\n\r\nSingleArtworkContainer.propTypes = {\r\n  artwork: PropTypes.object,\r\n  from: PropTypes.string,\r\n  lot: PropTypes.object\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleArtworkContainer);\r\n````\r\n\r\nMy first catch error is what consoles it out\r\n\r\n**What is the expected behavior?**\r\nGiven that this is exactly the same code I am honestly surprised by the fact that I get a React error as the code behind the two pages is literally the same :(  \r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nAll browsers \r\nReact 15.3.0 (but also happens in our UAT machine with react 16.8) \r\n",
  "closed_by": {
    "login": "bellancaf",
    "id": 14964341,
    "node_id": "MDQ6VXNlcjE0OTY0MzQx",
    "avatar_url": "https://avatars0.githubusercontent.com/u/14964341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bellancaf",
    "html_url": "https://github.com/bellancaf",
    "followers_url": "https://api.github.com/users/bellancaf/followers",
    "following_url": "https://api.github.com/users/bellancaf/following{/other_user}",
    "gists_url": "https://api.github.com/users/bellancaf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bellancaf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bellancaf/subscriptions",
    "organizations_url": "https://api.github.com/users/bellancaf/orgs",
    "repos_url": "https://api.github.com/users/bellancaf/repos",
    "events_url": "https://api.github.com/users/bellancaf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bellancaf/received_events",
    "type": "User",
    "site_admin": false
  }
}
