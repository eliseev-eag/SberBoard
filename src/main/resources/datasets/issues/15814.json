{
  "url": "https://api.github.com/repos/facebook/react/issues/15814",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/15814/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/15814/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/15814/events",
  "html_url": "https://github.com/facebook/react/issues/15814",
  "id": 451885414,
  "node_id": "MDU6SXNzdWU0NTE4ODU0MTQ=",
  "number": 15814,
  "title": "Feature request: useEffect add support for async await functions",
  "user": {
    "login": "ywarezk",
    "id": 2714362,
    "node_id": "MDQ6VXNlcjI3MTQzNjI=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/2714362?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ywarezk",
    "html_url": "https://github.com/ywarezk",
    "followers_url": "https://api.github.com/users/ywarezk/followers",
    "following_url": "https://api.github.com/users/ywarezk/following{/other_user}",
    "gists_url": "https://api.github.com/users/ywarezk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ywarezk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ywarezk/subscriptions",
    "organizations_url": "https://api.github.com/users/ywarezk/orgs",
    "repos_url": "https://api.github.com/users/ywarezk/repos",
    "events_url": "https://api.github.com/users/ywarezk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ywarezk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-06-04T09:16:59Z",
  "updated_at": "2019-06-12T13:15:31Z",
  "closed_at": "2019-06-12T13:15:31Z",
  "author_association": "NONE",
  "body": "Feature request for adding to the  API for the **useEffect** hook:\r\n\r\ncurrently if I want to use a class component **componentDidMount** to fetch things from my server I could use **async** method like so:\r\n\r\n```\r\nasync componentDidMount() {\r\n     try {\r\n        const response = await fetch('...');\r\n        const json = await response.json();\r\n        this.setState({...});\r\n    catch(err) {\r\n        this.setState(...)\r\n    }\r\n}\r\n```\r\n\r\nThe **useEffect** should optionally return a cleanup function so applying this kind of syntax in a **useEffect** is wrong.\r\nSo this is wrong:\r\n\r\n```\r\nuseEffect(async () => {\r\n    try {\r\n        const response = await fetch('...');\r\n        const json = await response.json();\r\n        setSomeStateCreatedWithUseStatet(...)\r\n    catch(err) {\r\n        setSomeStateCreatedWithUseStatet(...)\r\n    }\r\n})\r\n```\r\n\r\nOf course I could wrap the above code in another async function like so:\r\n\r\n```\r\nuseEffect(() => {\r\n    (async function() {\r\n        try {\r\n            const response = await fetch('...');\r\n            const json = await response.json();\r\n            setSomeStateCreatedWithUseStatet(...)\r\n        catch(err) {\r\n            setSomeStateCreatedWithUseStatet(...)\r\n        }    \r\n    })()\r\n})\r\n```\r\n\r\nBut this extra nesting kind of contradict the nice readable syntax that async await is giving us. \r\nSince the cleanup function is running in an async way already, it seems to me that the **useEffect**\r\nshould support a return value of a cleanup function or a promise wrapped cleanup function so we can use the async await syntax in the useEffect hook. \r\nSo my suggestion is to not change the useEffect rather add an extra option to use async await functions inside the useEffect.\r\n\r\nIn this way we can use the regular useEffect but also these usages of useEffect will be valid as well:\r\n\r\n```\r\nuseEffect(async () => {\r\n    try {\r\n        const response = await fetch('...');\r\n        const json = await response.json();\r\n        setSomeStateCreatedWithUseStatet(...)\r\n    catch(err) {\r\n        setSomeStateCreatedWithUseStatet(...)\r\n    }\r\n    return function cleanup() {...}\r\n})\r\n```\r\n\r\nor if you prefer the hard way:\r\n\r\n```\r\nuseEffect(() => {\r\n    ...\r\n    return new Promise((resolve) => {\r\n        resolve(function cleanup() { ...})   \r\n    })\r\n})\r\n```\r\n\r\nWhat do you think?\r\n\r\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
