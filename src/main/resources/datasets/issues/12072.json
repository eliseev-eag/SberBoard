{
  "url": "https://api.github.com/repos/facebook/react/issues/12072",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12072/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12072/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12072/events",
  "html_url": "https://github.com/facebook/react/issues/12072",
  "id": 290555006,
  "node_id": "MDU6SXNzdWUyOTA1NTUwMDY=",
  "number": 12072,
  "title": "All controlled <textarea/> fields re-render on any setState() call even though their data has not changed.",
  "user": {
    "login": "martintasevski",
    "id": 33579371,
    "node_id": "MDQ6VXNlcjMzNTc5Mzcx",
    "avatar_url": "https://avatars2.githubusercontent.com/u/33579371?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/martintasevski",
    "html_url": "https://github.com/martintasevski",
    "followers_url": "https://api.github.com/users/martintasevski/followers",
    "following_url": "https://api.github.com/users/martintasevski/following{/other_user}",
    "gists_url": "https://api.github.com/users/martintasevski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/martintasevski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/martintasevski/subscriptions",
    "organizations_url": "https://api.github.com/users/martintasevski/orgs",
    "repos_url": "https://api.github.com/users/martintasevski/repos",
    "events_url": "https://api.github.com/users/martintasevski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/martintasevski/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 127893911,
      "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
      "name": "Component: DOM",
      "color": "fef2c0",
      "default": false
    },
    {
      "id": 40929151,
      "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
      "name": "Type: Bug",
      "color": "b60205",
      "default": false
    },
    {
      "id": 710722093,
      "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
      "name": "Type: Needs Investigation",
      "color": "fbca04",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-01-22T17:45:57Z",
  "updated_at": "2018-09-14T23:09:07Z",
  "closed_at": "2018-09-14T23:09:07Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nReporting a bug.\r\n\r\n**What is the current behavior?**\r\nBasically I have many controlled `<textarea/>` fields in the app that I am currently developing and I normally only want them to re-render when their values have changed through their onChange event, but they re-render every time setState() gets called anywhere within the component or any parent component.\r\n\r\nI even tried creating a custom component which only contains a `<textarea/>` and setting shouldComponentUpdate() to return false but it seems to ignore that command completely. It's weird because in this case the console.log()s in my child component's render() function don't get executed but the field gets re-rendered nonetheless.\r\n\r\nThis issue is causing some major performance problems in my app. I hope someone addresses this issue as fast as possible so I can continue working on my react project. Maybe someone can provide a temporary workaround? Please let me know if there's something I'm missing or if I'm using this field incorrectly.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\nI have isolated the problem in a new empty app and you can see the behavior in the following gif:\r\nhttps://gfycat.com/DentalExcitableIndri\r\n\r\nThe code is very simple. You can recreate this problem by creating 2 controlled fields, one `<input/>` and another `<textarea/>`. Then go to your browser, inspect the `<textarea/>` element and input something in the basic input field. The `<textarea/>` will re-render on every new typed letter in the `<input/>` field but not the other way around.\r\n```javascript\r\nimport React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tta1 : \"ta1\",\r\n\t\t\tta2 : \"ta2\",\r\n\t\t\tta3 : \"ta3\",\r\n\t\t\ti1 : \"i1\",\r\n\t\t\ti2 : \"i2\",\r\n\t\t\ti3 : \"i3\"\r\n\t\t};\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n\r\n\thandleInputChange(event){\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name] : event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header className=\"App-header\">\r\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t\t\t<h1 className=\"App-title\">Welcome to React</h1>\r\n\t\t\t\t</header>\r\n\t\t\t\t<p className=\"App-intro\">\r\n\t\t\t\t\ttest\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"column\">\r\n\t\t\t\t\t\ttextareas\r\n\t\t\t\t\t\t<textarea value={this.state.ta1} name=\"ta1\" onChange={this.handleInputChange}/>\r\n\t\t\t\t\t\t<textarea value={this.state.ta2} name=\"ta2\" onChange={this.handleInputChange}/>\r\n\t\t\t\t\t\t<textarea value={this.state.ta3} name=\"ta3\" onChange={this.handleInputChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"column\">\r\n\t\t\t\t\t\tinput fields\r\n\t\t\t\t\t\t<input value={this.state.i1} name=\"i1\" onChange={this.handleInputChange}/>\r\n\t\t\t\t\t\t<input value={this.state.i2} name=\"i2\" onChange={this.handleInputChange}/>\r\n\t\t\t\t\t\t<input value={this.state.i3} name=\"i3\" onChange={this.handleInputChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n**What is the expected behavior?**\r\nThe `<textarea/>` field should only re-render when its data is changed.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nI was able to recreate this problem on React versions 16.2.0 (latest) and 15.6.1. I did not test on other versions so I am not sure if this worked correctly before. I'm using Chrome 62.0.3202.94 64-bit (latest) and Firefox 57.0.4 64-bit (latest) on Ubuntu 14.04.",
  "closed_by": {
    "login": "nhunzaker",
    "id": 590904,
    "node_id": "MDQ6VXNlcjU5MDkwNA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/590904?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nhunzaker",
    "html_url": "https://github.com/nhunzaker",
    "followers_url": "https://api.github.com/users/nhunzaker/followers",
    "following_url": "https://api.github.com/users/nhunzaker/following{/other_user}",
    "gists_url": "https://api.github.com/users/nhunzaker/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nhunzaker/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nhunzaker/subscriptions",
    "organizations_url": "https://api.github.com/users/nhunzaker/orgs",
    "repos_url": "https://api.github.com/users/nhunzaker/repos",
    "events_url": "https://api.github.com/users/nhunzaker/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nhunzaker/received_events",
    "type": "User",
    "site_admin": false
  }
}
