{
  "url": "https://api.github.com/repos/facebook/react/issues/12865",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12865/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12865/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12865/events",
  "html_url": "https://github.com/facebook/react/issues/12865",
  "id": 324631984,
  "node_id": "MDU6SXNzdWUzMjQ2MzE5ODQ=",
  "number": 12865,
  "title": "App unmounts on caught error",
  "user": {
    "login": "jshado1",
    "id": 3012099,
    "node_id": "MDQ6VXNlcjMwMTIwOTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/3012099?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jshado1",
    "html_url": "https://github.com/jshado1",
    "followers_url": "https://api.github.com/users/jshado1/followers",
    "following_url": "https://api.github.com/users/jshado1/following{/other_user}",
    "gists_url": "https://api.github.com/users/jshado1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jshado1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jshado1/subscriptions",
    "organizations_url": "https://api.github.com/users/jshado1/orgs",
    "repos_url": "https://api.github.com/users/jshado1/repos",
    "events_url": "https://api.github.com/users/jshado1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jshado1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-05-19T14:02:51Z",
  "updated_at": "2018-05-24T09:34:14Z",
  "closed_at": "2018-05-19T21:29:05Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nBasically 3 levels of components\r\n```\r\nApp\r\n    Shell\r\n        Header\r\n        view // \"children\" via react-router\r\n        Footer\r\n```\r\n\r\n<details>\r\n<summary>Shell.tsx (catches)</summary>\r\n\r\n```tsx\r\nclass Shell extends React.Component {\r\n    state: ShellState = {\r\n        alerts: [],\r\n    }\r\n\r\n    componentDidCatch(err, info) {\r\n        const alert = new Alert(err);\r\n        this.setState({ alerts: _.concat(alerts, alert) });\r\n        debugger; // all good in the neighbourhood\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header alerts={this.state.alerts} />\r\n                {this.props.children}\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>SomeView.tsx (always throws in render)</summary>\r\n\r\n```tsx\r\nclass SomeView extends React.Component {\r\n    // â€¦\r\n\r\n    render() {\r\n        throw new Error('test');\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\n---\r\n\r\n`Shell.componentDidCatch()` fires and does its thing (no new errors thrown), but the app still unmounts anyway.\r\n\r\nI understand why this is happening: SomeView's render always throws an error, so after the componentDidCatch handles the error and Shell re-renders, SomeView throws again, and apparently React shuts down (probably as an easy way to avoid an endless loop).\r\n\r\n**What is the expected behavior?**\r\n\r\nApp does not unmount; abort/blacklist/ignore the miscreant component (which could be N-levels deep in the app).\r\n\r\nI expect it to work like the [codepen](https://codepen.io/gaearon/pen/wqvxGa?editors=0010) example.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nNo, before v16 React did not explode (to use less colourful language than this deserves).\r\n\r\nreact 16.3.1\r\n\r\n---\r\n\r\nThis componentDidCatch is both neat and horrendous:\r\n* Neat in that there is a (mostly) standard way to catch and handle errors.\r\n* Horrendous in that it unmounts the entire app, creating an unrecoverable state (have you seen Spotify lately?). If anything, the unmounting should be a development-only bug-pretending-to-be-a-feature that can be disabled (because this is hella annoying and any cursory google search on it clearly shows countless hours wasted).",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
