{
  "url": "https://api.github.com/repos/facebook/react/issues/7529",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/7529/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/7529/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/7529/events",
  "html_url": "https://github.com/facebook/react/issues/7529",
  "id": 172131575,
  "node_id": "MDU6SXNzdWUxNzIxMzE1NzU=",
  "number": 7529,
  "title": "[Proposal] Stateful functional components",
  "user": {
    "login": "kripod",
    "id": 14854048,
    "node_id": "MDQ6VXNlcjE0ODU0MDQ4",
    "avatar_url": "https://avatars3.githubusercontent.com/u/14854048?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kripod",
    "html_url": "https://github.com/kripod",
    "followers_url": "https://api.github.com/users/kripod/followers",
    "following_url": "https://api.github.com/users/kripod/following{/other_user}",
    "gists_url": "https://api.github.com/users/kripod/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kripod/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kripod/subscriptions",
    "organizations_url": "https://api.github.com/users/kripod/orgs",
    "repos_url": "https://api.github.com/users/kripod/repos",
    "events_url": "https://api.github.com/users/kripod/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kripod/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-08-19T13:30:13Z",
  "updated_at": "2016-08-19T17:31:34Z",
  "closed_at": "2016-08-19T17:31:34Z",
  "author_association": "NONE",
  "body": "Functional components are awesome for numerous reasons. In React, there is no way to declare stateful equivalents of functional components as of today.\n\nThis is a feature proposal which introduces a backwards-compatible solution for including an optional observable state map object in a functional component.\n\nExample:\n\n``` js\nimport { ObservableMap } from 'react';\n\nconst Counter = (props, state = new ObservableMap([['value', 42]])) => (\n  <div>\n    <span>Counter: {state.get('value')}</span>\n    <button onClick={state.set('value', state.get('value') + 1)}>+</button>\n    <button onClick={state.set('value', state.get('value') - 1)}>-</button>\n  </div>\n);\n\nexport default Counter;\n```\n\nIn the example above, state changes can easily be tracked by using an `ObservableMap` object. The initial value of the counter is `42`, and it can be incremented or decremented by clicking one of the rendered buttons. As soon as the state changes, the stateful functional component calls itself, resulting in a re-render of the component.\n\nIf no initial state is provided, then `state` should be assigned an empty `ObservableMap` instance. Furthermore, if an immutable variant of `ObservableMap` was made, time travel debugging could be made possible.\n",
  "closed_by": {
    "login": "kripod",
    "id": 14854048,
    "node_id": "MDQ6VXNlcjE0ODU0MDQ4",
    "avatar_url": "https://avatars3.githubusercontent.com/u/14854048?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kripod",
    "html_url": "https://github.com/kripod",
    "followers_url": "https://api.github.com/users/kripod/followers",
    "following_url": "https://api.github.com/users/kripod/following{/other_user}",
    "gists_url": "https://api.github.com/users/kripod/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kripod/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kripod/subscriptions",
    "organizations_url": "https://api.github.com/users/kripod/orgs",
    "repos_url": "https://api.github.com/users/kripod/repos",
    "events_url": "https://api.github.com/users/kripod/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kripod/received_events",
    "type": "User",
    "site_admin": false
  }
}
