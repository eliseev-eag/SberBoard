{
  "url": "https://api.github.com/repos/facebook/react/issues/12991",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/12991/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/12991/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/12991/events",
  "html_url": "https://github.com/facebook/react/issues/12991",
  "id": 330196260,
  "node_id": "MDU6SXNzdWUzMzAxOTYyNjA=",
  "number": 12991,
  "title": "Explanation on why React is behaving weird when combining setState with animation of scrollLeft of container",
  "user": {
    "login": "ghost",
    "id": 10137,
    "node_id": "MDQ6VXNlcjEwMTM3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ghost",
    "html_url": "https://github.com/ghost",
    "followers_url": "https://api.github.com/users/ghost/followers",
    "following_url": "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
    "organizations_url": "https://api.github.com/users/ghost/orgs",
    "repos_url": "https://api.github.com/users/ghost/repos",
    "events_url": "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ghost/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-06-07T09:45:36Z",
  "updated_at": "2018-06-20T19:30:06Z",
  "closed_at": "2018-06-20T19:30:06Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?** Bug\r\n\r\n**What is the current behavior?**\r\nIn an application I am currently developing I have multiple cards in a carousel that can be scrolled card by card. Those cards themselves can have overflowing content and have scrollbars in that case. Unfortunately though, depending on the number of cards and content I have an issue wherein scrolling the mousewheel does not scroll the card content after scrolling through the carousel. One such manifestation of the bug is shown in this gif:\r\n\r\n![xldwovv](https://user-images.githubusercontent.com/32624319/41091846-d3dd4d1a-6a47-11e8-9570-cf30a1811673.gif)\r\n\r\nI can scroll the card content, move forward and back and all of a sudden the second card content cannot be scrolled anymore. When moving the mouse outside of the carousel and back (without actually clicking) it works again.\r\n\r\nAt times it felt as if React/the browser thinks the card is still at its old place and thus doesn't perform the default behavior when trying to scroll, that is relaying the default scroll behaviour to the card itself.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nA MWE repo can be found here: https://gitlab.com/NearAutomata/react-scrolling-mwe\r\nPlease use `npm install && npm run build` and open the `Index.html` in the `Build folder to check that issue for yourself. In Chrome and Electron the behaviour seen in the gif is occuring to me.\r\n\r\n---\r\n\r\nThe corresponding block in the source file with the issue is here: https://gitlab.com/NearAutomata/react-scrolling-mwe/blob/master/Source/Components/Launcher.tsx#L228-230\r\n\r\nIn the first iteration of my code when clicking on the button I was calling `setState` then the `scrollTo` animation. React apparently expects the old coords of the elements. To my surprise `setState({ ... }, () => { scrollTo(...); })` did not work either. I expected the animation to be called right after React updates and re-renders everything. Conversely, adding a callback to my animation like `scrollTo(..., () => { setState({ ... }); })` seems to work to prevent any internal mismatch of positions.\r\n\r\nI'd like to know whether you can explain why the second variant with `setState({ ... }, () => { scrollTo(...); })` isn't working as expected and why React is having issue with scrolled elements.",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
