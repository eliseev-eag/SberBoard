{
  "url": "https://api.github.com/repos/facebook/react/issues/6784",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6784/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6784/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6784/events",
  "html_url": "https://github.com/facebook/react/issues/6784",
  "id": 155132321,
  "node_id": "MDU6SXNzdWUxNTUxMzIzMjE=",
  "number": 6784,
  "title": "Add option to ignore specified props in shallowCompare",
  "user": {
    "login": "fredrikolovsson",
    "id": 12738484,
    "node_id": "MDQ6VXNlcjEyNzM4NDg0",
    "avatar_url": "https://avatars1.githubusercontent.com/u/12738484?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fredrikolovsson",
    "html_url": "https://github.com/fredrikolovsson",
    "followers_url": "https://api.github.com/users/fredrikolovsson/followers",
    "following_url": "https://api.github.com/users/fredrikolovsson/following{/other_user}",
    "gists_url": "https://api.github.com/users/fredrikolovsson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fredrikolovsson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fredrikolovsson/subscriptions",
    "organizations_url": "https://api.github.com/users/fredrikolovsson/orgs",
    "repos_url": "https://api.github.com/users/fredrikolovsson/repos",
    "events_url": "https://api.github.com/users/fredrikolovsson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fredrikolovsson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2016-05-16T22:00:36Z",
  "updated_at": "2016-05-16T22:40:44Z",
  "closed_at": "2016-05-16T22:35:52Z",
  "author_association": "NONE",
  "body": "[feature request/question]\nConsider a component that has a stateless functional component (SFC) as prop, e.g. like this: \n\n``` jsx\n<MyComponent component={(props) => <div>{props.title}</div>;} />\n```\n\nUsing `shallowCompare` in `shouldComponentUpdate` of `MyComponent` would always return `true`, but there are cases when it makes sense to use `shallowCompare` on all props except those with SFCs, like in this [issue](https://github.com/erikras/redux-form/issues/961#issuecomment-219531194) in [`redux-form`](https://github.com/erikras/redux-form), which had this [solution](https://github.com/erikras/redux-form/pull/981):\n\n``` javascript\nshouldComponentUpdate(nextProps) {\n  const propsWithoutComponent = { ...this.props }\n  const nextPropsWithoutComponent = { ...nextProps }\n  delete propsWithoutComponent.component\n  delete nextPropsWithoutComponent.component\n  return shallowCompare({ props: propsWithoutComponent }, nextPropsWithoutComponent)\n}\n```\n\nWhile I have no idea how common this pattern is or will be, I saw that `context` is [about to be added](https://github.com/facebook/react/pull/6661) to `shallowCompare` and I thought maybe it would be possible to add an option to make `shallowCompare` ignore one or several props?\n\nE.g. the signature could be like this instead:\n\n``` javascript\nfunction shallowCompare(instance, { nextProps, nextState, nextContext, propsToIgnore })\n```\n\nwhere `propsToIgnore` could be an array of string keys. (To avoid a breaking change,  `propsToIgnore` could of course be added as the fifth argument instead, but this seems more robust to me.)\n\nIf this makes sense to you, I could have a go at a PR for this.\n",
  "closed_by": {
    "login": "zpao",
    "id": 8445,
    "node_id": "MDQ6VXNlcjg0NDU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/8445?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zpao",
    "html_url": "https://github.com/zpao",
    "followers_url": "https://api.github.com/users/zpao/followers",
    "following_url": "https://api.github.com/users/zpao/following{/other_user}",
    "gists_url": "https://api.github.com/users/zpao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zpao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zpao/subscriptions",
    "organizations_url": "https://api.github.com/users/zpao/orgs",
    "repos_url": "https://api.github.com/users/zpao/repos",
    "events_url": "https://api.github.com/users/zpao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zpao/received_events",
    "type": "User",
    "site_admin": false
  }
}
