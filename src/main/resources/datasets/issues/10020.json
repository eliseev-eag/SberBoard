{
  "url": "https://api.github.com/repos/facebook/react/issues/10020",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10020/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10020/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10020/events",
  "html_url": "https://github.com/facebook/react/issues/10020",
  "id": 237657832,
  "node_id": "MDU6SXNzdWUyMzc2NTc4MzI=",
  "number": 10020,
  "title": "Feature request: renderTypes",
  "user": {
    "login": "ljharb",
    "id": 45469,
    "node_id": "MDQ6VXNlcjQ1NDY5",
    "avatar_url": "https://avatars1.githubusercontent.com/u/45469?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ljharb",
    "html_url": "https://github.com/ljharb",
    "followers_url": "https://api.github.com/users/ljharb/followers",
    "following_url": "https://api.github.com/users/ljharb/following{/other_user}",
    "gists_url": "https://api.github.com/users/ljharb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ljharb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ljharb/subscriptions",
    "organizations_url": "https://api.github.com/users/ljharb/orgs",
    "repos_url": "https://api.github.com/users/ljharb/repos",
    "events_url": "https://api.github.com/users/ljharb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ljharb/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 121709921,
      "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
      "name": "Type: Feature Request",
      "color": "c7def8",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 26,
  "created_at": "2017-06-21T20:40:15Z",
  "updated_at": "2017-11-03T15:36:12Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\nRequest a feature\r\n\r\nPer some discussion today with @tomocchino and @thejameskyle, I'd like a non-Flow mechanism to annotate what type(s) of elements a component expects to render.\r\n\r\nHere's some examples, with Flow types for comparison (that I realize may not be currently checked in Flow, yet):\r\n```jsx\r\nfunction Foo({ yes }){\r\n  return yes ? <Bar /> : <div />;\r\n}\r\nFoo.renderTypes = [Bar, 'div'];\r\n\r\n\r\nclass Bar extends React.Component {\r\n  static renderTypes = [Button];\r\n\r\n  render() {\r\n    return <Button />;\r\n  }\r\n}\r\n```\r\n```jsx\r\nfunction Foo({ yes }): React.Element<Bar | 'div'> {\r\n  return yes ? <Bar /> : <div />;\r\n}\r\n\r\nclass Bar extends React.Component {\r\n  render(): React.Element<Button> {\r\n    return <Button />;\r\n  }\r\n}\r\n```\r\n\r\nInside @Airbnb, we have lots of use cases where we have container components in a separate package - say, a `<ButtonRow>`, and we have intentionally restrictive propTypes on its `children` prop, to only allow a `Button` (also in the same package). However, in an app that consumes this component library package, a dev may want to create a `<SpecialProductButton />` that in turn renders a `<Button>` - however, they're unable to pass it into `ButtonRow` (our propType warnings fail tests), even though conceptually it should be permitted.\r\n\r\nHaving `.renderTypes` would allow us to widen our `children` propType to allow for either a `<Button>`, or *anything that renders a `<Button>`*, which helps us maintain separation of concerns (the package doesn't have to know about `<SpecialProductButton>` to accept it) as well as maintain strictness (the package doesn't have to allow any wacky element inside `<ButtonRow>`).\r\n\r\nI imagine the implementation to be:\r\n 1. when render() is called or an SFC is invoked, (in async rendering, it'd be when the component resolves, i suppose)\r\n 1. in development only and if `.renderTypes` exists on the component\r\n 1. evaluate the equivalent of [`elementType`](https://www.npmjs.com/package/airbnb-prop-types)`(...Component.renderTypes)({ children: renderedValue }, 'children', ...)`,\r\n 1. just like propTypes, log the error if one is returned\r\n\r\n(cc @spicyj)",
  "closed_by": null
}
