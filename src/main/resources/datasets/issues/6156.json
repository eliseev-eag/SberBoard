{
  "url": "https://api.github.com/repos/facebook/react/issues/6156",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/6156/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/6156/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/6156/events",
  "html_url": "https://github.com/facebook/react/issues/6156",
  "id": 137515907,
  "node_id": "MDU6SXNzdWUxMzc1MTU5MDc=",
  "number": 6156,
  "title": "Should React.Children.only() handle mapped children?",
  "user": {
    "login": "epsitec",
    "id": 3872435,
    "node_id": "MDQ6VXNlcjM4NzI0MzU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/3872435?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/epsitec",
    "html_url": "https://github.com/epsitec",
    "followers_url": "https://api.github.com/users/epsitec/followers",
    "following_url": "https://api.github.com/users/epsitec/following{/other_user}",
    "gists_url": "https://api.github.com/users/epsitec/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/epsitec/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/epsitec/subscriptions",
    "organizations_url": "https://api.github.com/users/epsitec/orgs",
    "repos_url": "https://api.github.com/users/epsitec/repos",
    "events_url": "https://api.github.com/users/epsitec/events{/privacy}",
    "received_events_url": "https://api.github.com/users/epsitec/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-03-01T09:11:04Z",
  "updated_at": "2016-03-01T09:57:41Z",
  "closed_at": "2016-03-01T09:57:41Z",
  "author_association": "NONE",
  "body": "Let's say we have a component `Foo` which expects to get a single child:\n\n``` javascript\n class Foo extends React.Component {\n    render () {\n      const {children} = this.props;\n      return React.Children.only (children);\n    }\n}\n```\n\nThis works as expected if I render `<Foo><div/></Foo>` since `children` then maps to a single child, and `React.Children.only()` will happily return the only child.\n\nHowever, when using `Foo` like this, it throws:\n\n``` javascript\nclass Bar extends React.Component {\n  render () {\n    const keys = ['a'];\n    return <Foo>{keys.map (k => <div key={k}/>)}</Foo>;\n  }\n}\n```\n\nNow, `Foo` gets an array with one `<div>` element.\n\nI was expecting `React.Children.only()` to also handle this case and return the only child in the array. But obviously, it does not.\n\nNow, I have to write this instead:\n\n``` javascript\n class Foo extends React.Component {\n    render () {\n      const {children} = this.props;\n      return (Array.isArray (children)) ? children[0] : React.Children.only (children);\n    }\n}\n```\n\n Is this by design? Did I miss something here?\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
