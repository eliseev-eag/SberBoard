{
  "url": "https://api.github.com/repos/facebook/react/issues/14072",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14072/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14072/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14072/events",
  "html_url": "https://github.com/facebook/react/issues/14072",
  "id": 376767583,
  "node_id": "MDU6SXNzdWUzNzY3Njc1ODM=",
  "number": 14072,
  "title": "Hooks, useImperativeMethods and multiple refs",
  "user": {
    "login": "latviancoder",
    "id": 3055171,
    "node_id": "MDQ6VXNlcjMwNTUxNzE=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/3055171?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/latviancoder",
    "html_url": "https://github.com/latviancoder",
    "followers_url": "https://api.github.com/users/latviancoder/followers",
    "following_url": "https://api.github.com/users/latviancoder/following{/other_user}",
    "gists_url": "https://api.github.com/users/latviancoder/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/latviancoder/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/latviancoder/subscriptions",
    "organizations_url": "https://api.github.com/users/latviancoder/orgs",
    "repos_url": "https://api.github.com/users/latviancoder/repos",
    "events_url": "https://api.github.com/users/latviancoder/events{/privacy}",
    "received_events_url": "https://api.github.com/users/latviancoder/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 710375792,
      "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
      "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
      "name": "Type: Discussion",
      "color": "fef2c0",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2018-11-02T11:11:35Z",
  "updated_at": "2019-03-28T08:24:35Z",
  "closed_at": "2019-01-16T23:22:31Z",
  "author_association": "NONE",
  "body": "I am not sure where to post this question, feel free to delete it if it doesn't belong here. \r\n\r\nHere is a small Accordion with AccordionPanels. It uses hooks to manage state and when some panel is opened we need to scroll to it, so we need a ref. \r\n\r\nMy question is: Is this how hooks are supposed to be used? Do you see some problems with this approach?\r\n\r\n**App.js**\r\n```js\r\nfunction App() {\r\n    const panels = [\r\n        'Panel 1',\r\n        'Panel 2',\r\n        'Panel 3'\r\n    ];\r\n\r\n    const [currentIndex, onClick, refs] = useAccordion(panels.length);\r\n\r\n    return <Accordion>\r\n        {panels.map((panel, index) => (\r\n            <AccordionPanel\r\n                ref={refs[index]}\r\n                key={index}\r\n                label={panel}\r\n                isOpen={currentIndex === index}\r\n                onClick={() => onClick(index)}\r\n            />\r\n        ))}\r\n    </Accordion>;\r\n}\r\n```\r\n\r\n**Accordion.js**\r\n```js\r\nfunction useAccordion(panelsCount) {\r\n    const [currentIndex, setCurrentIndex] = useState(undefined);\r\n    let refs = {};\r\n\r\n    for (let i = 0; i <= panelsCount; i++) {\r\n        refs[i] = createRef();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentIndex !== undefined) {\r\n            refs[currentIndex].current.scrollTo();\r\n        }\r\n    }, [currentIndex]);\r\n\r\n    function onClick(newIndex) {\r\n        setCurrentIndex(currentIndex === newIndex ? undefined : newIndex);\r\n    }\r\n\r\n    return [currentIndex, onClick, refs];\r\n}\r\n\r\nconst AccordionPanel = React.forwardRef((props, ref) => {\r\n    const containerRef = useRef();\r\n\r\n    useImperativeMethods(ref, () => ({\r\n        scrollTo: () => console.info('do scrolling')\r\n    }));\r\n\r\n    return <div onClick={props.onClick} ref={containerRef}>\r\n        {props.label}, {props.isOpen && 'open'}\r\n    </div>;\r\n});\r\n\r\nfunction Accordion(props) {\r\n    return <div>{props.children}</div>;\r\n}\r\n```",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
