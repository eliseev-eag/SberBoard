{
  "url": "https://api.github.com/repos/facebook/react/issues/16154",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16154/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16154/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16154/events",
  "html_url": "https://github.com/facebook/react/issues/16154",
  "id": 469603214,
  "node_id": "MDU6SXNzdWU0Njk2MDMyMTQ=",
  "number": 16154,
  "title": "Accessing state/props in callback ref with hooks",
  "user": {
    "login": "butchler",
    "id": 73473,
    "node_id": "MDQ6VXNlcjczNDcz",
    "avatar_url": "https://avatars3.githubusercontent.com/u/73473?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/butchler",
    "html_url": "https://github.com/butchler",
    "followers_url": "https://api.github.com/users/butchler/followers",
    "following_url": "https://api.github.com/users/butchler/following{/other_user}",
    "gists_url": "https://api.github.com/users/butchler/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/butchler/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/butchler/subscriptions",
    "organizations_url": "https://api.github.com/users/butchler/orgs",
    "repos_url": "https://api.github.com/users/butchler/repos",
    "events_url": "https://api.github.com/users/butchler/events{/privacy}",
    "received_events_url": "https://api.github.com/users/butchler/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-07-18T07:03:20Z",
  "updated_at": "2019-10-10T11:40:39Z",
  "closed_at": "2019-08-15T13:14:30Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nRequesting guidance on how to implement something with hooks that used to be possible with class components (so it's not quite a bug, but it might end up becoming a feature request)\r\n\r\n**What is the current behavior?**\r\n\r\nIf you want to access an external value inside a callback ref (props/state/etc.), you can use `useCallback`. However, in some cases you may want to avoid re-triggering the callback ref when one of those external values change. In that case, you could use `useRef` to work around this, and update the ref's value with `useEffect`/`useLayoutEffect`, like this:\r\n\r\n```\r\nconst valueRef = useRef(value);\r\nuseEffect(() => {\r\n  valueRef.current = value;\r\n}, [value]);\r\n\r\n// Now the callback ref can use `valueRef.current`\r\n```\r\n\r\nHowever, callback refs are called before `useEffect`/`useLayoutEffect` callbacks, so if the callback ref happens to be triggered as a result of the same render in which `value` changes, it will see the old value when it access `valueRef.current`.\r\n\r\nThis could be worked around by updating `valueRef` as a side effect of render:\r\n\r\n```\r\nconst valueRef = useRef(value);\r\nvalueRef.current = value;\r\n```\r\n\r\nThis is admittedly a very specific edge case, but I have actually introduced bugs into real code due to this, when trying to convert existing class components to use hooks. Another motivation for this is to use it to help implement a custom hook for making callback refs nicer to use by mimicking the `useEffect` API: https://github.com/facebook/react/issues/15176#issuecomment-512185852\r\n\r\nInterestingly, this issue does not happen with class components, because `this.props` and `this.state` have the correct value when the callback ref is triggered.\r\n\r\nHere is a codesandbox with a contrived example that reproduces the issue (and shows how the issue does not occur with a class component): https://codesandbox.io/s/callback-refhooks-72m3p\r\n\r\n**What is the expected behavior?**\r\n\r\nThat there is some way of handling this use case using hooks, and in such a way that works with concurrent mode:\r\n\r\n• Wanting to access external values in a callback ref\r\n• Wanting to avoid triggering the callback ref when those values change\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n* React/React-DOM 16.8.6\r\n* Not a browser/OS-related issue\r\n* Also did not work in previous versions of React",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
