{
  "url": "https://api.github.com/repos/facebook/react/issues/16155",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16155/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16155/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16155/events",
  "html_url": "https://github.com/facebook/react/issues/16155",
  "id": 469642073,
  "node_id": "MDU6SXNzdWU0Njk2NDIwNzM=",
  "number": 16155,
  "title": "Get the values of all child components inside parent component: ReactJS",
  "user": {
    "login": "vjr12",
    "id": 42905121,
    "node_id": "MDQ6VXNlcjQyOTA1MTIx",
    "avatar_url": "https://avatars3.githubusercontent.com/u/42905121?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vjr12",
    "html_url": "https://github.com/vjr12",
    "followers_url": "https://api.github.com/users/vjr12/followers",
    "following_url": "https://api.github.com/users/vjr12/following{/other_user}",
    "gists_url": "https://api.github.com/users/vjr12/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vjr12/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vjr12/subscriptions",
    "organizations_url": "https://api.github.com/users/vjr12/orgs",
    "repos_url": "https://api.github.com/users/vjr12/repos",
    "events_url": "https://api.github.com/users/vjr12/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vjr12/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-07-18T08:41:04Z",
  "updated_at": "2019-07-26T09:37:51Z",
  "closed_at": "2019-07-26T09:37:51Z",
  "author_association": "NONE",
  "body": "Scenario :\r\n\r\nI have a scenario where-in there is a child which is being called multiple times inside Parent.\r\n\r\nEach child components has as a set of checkboxes , an Apply and a clear button. So on click of Apply , I have to send the checked one's to the parent .\r\n\r\nFor example first section gives me this after I check \"Jack\" and click on Apply\r\n````````\r\n{key: \"Jack\" text: \"Jack\" field: \"firstName\" checked: true} \r\n`````````````\r\n\r\nNow If I go to section 2 and check on \"Pending\" I get\r\n```````````\r\n {key: \"Pending\" text: \"Pending\" field: \"status\" checked: true} \r\n\r\n`````````````````\r\n\r\nI don't want this behavior. Instead I want both the values some thing like this \r\n`````````````````\r\n[\r\n {key: \"Jack\" text: \"Jack\" field: \"firstName\" checked: true},\r\n {key: \"Pending\" text: \"Pending\" field: \"status\" checked: true} \r\n] \r\n\r\n``````````````````````\r\n\r\nor in general whichever the checked one's without losing the previous content.\r\n\r\nSandbox: https://codesandbox.io/s/stupefied-cohen-f5td1\r\n\r\nParent Component\r\n------------------\r\n\r\n```````````````````````\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Child1 from \"./Child1\";\r\nimport \"./styles.css\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        { firstName: \"Jack\", status: \"Submitted\" },\r\n        { firstName: \"Simon\", status: \"Pending\" },\r\n        { firstName: \"Pete\", status: \"Approved\" },\r\n        { firstName: \"Lucas\", status: \"Rejected\" }\r\n      ]\r\n    };\r\n  }\r\n\r\n  handleSetData = value => {\r\n    console.log(value); // need to get data here from all instances of child, it should not over ride\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Child1\r\n          data={this.state.data}\r\n          param=\"firstName\"\r\n          handleSetData={this.handleSetData}\r\n        />\r\n        <Child1\r\n          data={this.state.data}\r\n          param=\"status\"\r\n          handleSetData={this.handleSetData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\n`````````````````````````````\r\n\r\nChild Component\r\n---------------------\r\n\r\n````````````````````````\r\nimport React from \"react\";\r\nimport { Checkbox, Button } from \"semantic-ui-react\";\r\nimport \"./styles.css\";\r\n\r\nexport default class Child extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      optionsArr: [],\r\n      originalState: []\r\n    };\r\n  }\r\n\r\n  handleItemClick = (event, data) => {\r\n    const index = this.state.data.findIndex(item => item.name === data.name);\r\n    const optionsArr = this.state.data.map((prevState, i) =>\r\n      i === index\r\n        ? {\r\n            display: prevState.display,\r\n            name: prevState.name,\r\n            checked: !prevState.checked\r\n          }\r\n        : prevState\r\n    );\r\n    this.setState({ data: optionsArr });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let values = this.props.data.map(arr => arr[this.props.param]);\r\n    var optionsArr = [];\r\n    for (let i = 0; i < values.length; i++) {\r\n      var options = {};\r\n      options[\"key\"] = values[i];\r\n      options[\"text\"] = values[i];\r\n      options[\"field\"] = this.props.param;\r\n      options[\"checked\"] = false;\r\n      optionsArr.push(options);\r\n    }\r\n    this.setState({ optionsArr: optionsArr, originalState: optionsArr });\r\n  }\r\n\r\n  clearSelection = event => {\r\n    this.setState({ optionsArr: this.state.originalState });\r\n  };\r\n\r\n  submitSelection = () => {\r\n    let checkedValues = this.state.optionsArr.filter(item => item.checked);\r\n    this.setState({ originalState: this.state.optionsArr }, () =>\r\n      this.props.handleSetData(checkedValues)\r\n    );\r\n  };\r\n\r\n  handleItemClick = (event, data) => {\r\n    const index = this.state.optionsArr.findIndex(\r\n      item => item.text === data.name\r\n    );\r\n    const optionsArr = this.state.optionsArr.map((prevState, i) =>\r\n      i === index\r\n        ? {\r\n            key: prevState.key,\r\n            text: prevState.text,\r\n            field: this.props.param,\r\n            checked: !prevState.checked\r\n          }\r\n        : prevState\r\n    );\r\n    this.setState({ optionsArr });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Child Component\r\n        <div className=\"menu-item-holder\">\r\n          {this.state.optionsArr.map((item, i) => (\r\n            <div className=\"menu-item\" key={i}>\r\n              <Checkbox\r\n                name={item.text}\r\n                onChange={this.handleItemClick}\r\n                checked={item.checked}\r\n                label={item.text}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"menu-btn-holder\">\r\n          <Button size=\"small\" onClick={this.submitSelection}>\r\n            Apply\r\n          </Button>\r\n          <Button size=\"small\" onClick={this.clearSelection}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "vjr12",
    "id": 42905121,
    "node_id": "MDQ6VXNlcjQyOTA1MTIx",
    "avatar_url": "https://avatars3.githubusercontent.com/u/42905121?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vjr12",
    "html_url": "https://github.com/vjr12",
    "followers_url": "https://api.github.com/users/vjr12/followers",
    "following_url": "https://api.github.com/users/vjr12/following{/other_user}",
    "gists_url": "https://api.github.com/users/vjr12/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vjr12/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vjr12/subscriptions",
    "organizations_url": "https://api.github.com/users/vjr12/orgs",
    "repos_url": "https://api.github.com/users/vjr12/repos",
    "events_url": "https://api.github.com/users/vjr12/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vjr12/received_events",
    "type": "User",
    "site_admin": false
  }
}
