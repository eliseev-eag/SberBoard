{
  "url": "https://api.github.com/repos/facebook/react/issues/1602",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/1602/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/1602/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/1602/events",
  "html_url": "https://github.com/facebook/react/issues/1602",
  "id": 34275671,
  "node_id": "MDU6SXNzdWUzNDI3NTY3MQ==",
  "number": 1602,
  "title": "`props.children` is `UNMOUNTED` following update",
  "user": {
    "login": "yang",
    "id": 7129,
    "node_id": "MDQ6VXNlcjcxMjk=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/7129?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yang",
    "html_url": "https://github.com/yang",
    "followers_url": "https://api.github.com/users/yang/followers",
    "following_url": "https://api.github.com/users/yang/following{/other_user}",
    "gists_url": "https://api.github.com/users/yang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yang/subscriptions",
    "organizations_url": "https://api.github.com/users/yang/orgs",
    "repos_url": "https://api.github.com/users/yang/repos",
    "events_url": "https://api.github.com/users/yang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yang/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2014-05-25T23:55:00Z",
  "updated_at": "2014-05-27T02:58:58Z",
  "closed_at": "2014-05-25T23:57:16Z",
  "author_association": "NONE",
  "body": "I'm confused by the following behavior.  In this example, I have a `Wrapper` that takes a `children` prop.  When it first renders, clicking `mounted?` gives us `MOUNTED` which seems right.  But after clicking `update` to re-render everything, clicking `mounted?` gives us `UNMOUNTED`.\n\nFor some real-use-case context, this gave me errors when accessing `this.props.children.getDOMNode()` to pass to a third-party library for displaying a pop-up menu around the given node.  The given child was not responsible for knowing about the popup logic; instead, it's the sole purpose of `Wrapper` to show a contextual menu at the location of the given component.\n\nPasting this into a Live JSX Editor on http://facebook.github.io/react/ should work:\n\n```\n/** @jsx React.DOM */\nvar Wrapper = React.createClass({\n  mounted: function() { alert(this.props.children._lifeCycleState); },\n  showPopup: function() { alert(this.props.children.getDOMNode()); },\n  render: function() {\n    return <div>\n      {this.props.children}\n      <button onClick={this.mounted}>mounted?</button>\n      <button onClick={this.props.onUpdate}>update</button>\n      <button onClick={this.showPopup}>show popup</button>\n    </div>;\n  }\n});\nvar App = React.createClass({\n  handleUpdate: function() { this.forceUpdate(); },\n  render: function() {\n    return (\n      <Wrapper onUpdate={this.handleUpdate}>\n        <div>hello world</div>\n      </Wrapper>\n    );\n  }\n});\nReact.renderComponent(<App />, mountNode);\n```\n\nI believe I'm seeing the same behavior in general when accessing `props.children` of any ref.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
