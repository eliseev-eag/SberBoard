{
  "url": "https://api.github.com/repos/facebook/react/issues/5375",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/5375/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/5375/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/5375/events",
  "html_url": "https://github.com/facebook/react/issues/5375",
  "id": 114725288,
  "node_id": "MDU6SXNzdWUxMTQ3MjUyODg=",
  "number": 5375,
  "title": "React freezing Chrome, task manager reports 100% cpu on tab + ~5mb memory increase per second. (0.14 + 0.14.2)",
  "user": {
    "login": "ashtonsix",
    "id": 6740947,
    "node_id": "MDQ6VXNlcjY3NDA5NDc=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6740947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ashtonsix",
    "html_url": "https://github.com/ashtonsix",
    "followers_url": "https://api.github.com/users/ashtonsix/followers",
    "following_url": "https://api.github.com/users/ashtonsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/ashtonsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ashtonsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ashtonsix/subscriptions",
    "organizations_url": "https://api.github.com/users/ashtonsix/orgs",
    "repos_url": "https://api.github.com/users/ashtonsix/repos",
    "events_url": "https://api.github.com/users/ashtonsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ashtonsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2015-11-03T01:48:25Z",
  "updated_at": "2019-02-16T05:22:31Z",
  "closed_at": "2015-11-03T02:43:43Z",
  "author_association": "NONE",
  "body": "Sorry about the vauge description, can't think of what to provide except source and a trace stack as I'm rather flummoxed. Edited source to convey gist. My issue originates w/ an onClick handler inside `Row`:\n\n``` jsx\nimport React, {Component, PropTypes} from 'react';\nimport radium from 'radium';\n\nlet Row = ({storeName, deals, dateSelected, isOpen, toggleOpen, updateDateSelected}) => (\n  <div style={{marginBottom: 20}}>\n    <div onClick={toggleOpen}> // <- onClick works fine\n      ...\n    </div>\n    <div>\n      {\n        days.map((day, i) => (\n          <div onClick={() => updateDateSelected(day)}> // <- onClick is DEVIL\n            ...\n          </div>\n        ))\n      }\n    </div>\n  </div>\n);\n\nRow = radium(Row);\n\nimport {connect} from 'react-redux';\nimport {updateDateSelected} from 'actions/configActions';\n\n@connect(null, {updateDateSelected})\nexport default class RowContainer extends Component {\n  static propTypes = {\n    updateDateSelected: PropTypes.func,\n  }\n\n  constructor() {\n    super();\n    this.state = {isOpen: false};\n  }\n\n  toggleOpen() {\n    this.setState({isOpen: !this.state.isOpen});\n  }\n\n  render() {\n    return (\n      <Row\n        {...this.props}\n        {...this.state}\n        toggleOpen={::this.toggleOpen}\n      />\n    );\n  }\n}\n```\n\nWhen triggering `updateDateSelected` the page immediately freezes, a `debugger` statement allows some investigation. `updateDateSelected` calls a redux reducer (manages `state.config.deals`):\n\n``` jsx\nexport default handleActions({\n  ...\n  [CONFIG_DEALS_UPDATE_DATE_SELECTED]: (state, action) => (\n    update(state, {\n      $set: {dateSelected: action.payload},\n    })\n  ),\n}, {\n  dateSelected: moment().startOf('day').valueOf(),\n});\n```\n\nSome middleware is called, this component which contains `Row` is re-rendered w/ the correctly updated props:\n\n``` jsx\nimport React, {Component, PropTypes} from 'react';\nimport Row from 'views/config/ConfigDeals/Row';\n\nconst ConfigDeals = ({deals, stores, dateRangeStart, dateSelected}) => (\n  <div>\n    {\n      stores.map(store => (\n        <Row {...store} {...{dateSelected}}/>\n      ))\n    }\n  </div>\n);\n\nimport {connect} from 'react-redux';\n\n@connect(state => ({\n  dateSelected: state.config.deals.dateSelected,\n  deals: state.collections.deals.entities,\n  stores: state.meta.stores,\n}))\nexport default class ConfigDealsContainer extends Component {\n  static propTypes = {\n    deals: PropTypes.array,\n    stores: PropTypes.array,\n    dateSelected: PropTypes.number,\n  }\n\n  render() {\n    const {deals, stores, dateSelected} = this.props;\n    return <ConfigDeals {...{deals, stores, dateSelected}}/>;\n  }\n}\n```\n\nThis is the point where I'd expect React to stop doing stuff, but it keeps going. Stepping forwards w/ the debugger yields this trace stack:\n\n```\nMixin.perform (Transaction.js?6dff:149)\nReactDefaultBatchingStrategy.batchedUpdates (ReactDefaultBatchingStrategy.js?ef70:62)\nbatchedUpdates (ReactUpdates.js?ce09:94)\nReactEventListener.dispatchEvent (ReactEventListener.js?2365:204)\n```\n\nThe particular function call that seems to trip everything up is `this.closeAll(0); @ Transaction:149`, this comment `@ Transaction:108` seemed pertinent:\n\n```\nExecutes the function within a safety window. Use this for the top level\nmethods that result in large amounts of computation/mutations that would\nneed to be safety checked. The optional arguments helps prevent the need\nto bind in many cases.\n```\n\nI'm unsure what the large ammounts of computation/mutation could be.\n",
  "closed_by": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  }
}
