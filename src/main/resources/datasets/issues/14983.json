{
  "url": "https://api.github.com/repos/facebook/react/issues/14983",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14983/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14983/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14983/events",
  "html_url": "https://github.com/facebook/react/issues/14983",
  "id": 415831172,
  "node_id": "MDU6SXNzdWU0MTU4MzExNzI=",
  "number": 14983,
  "title": "[reconciler] re-instanciating object in commitUpdate",
  "user": {
    "login": "drcmda",
    "id": 2223602,
    "node_id": "MDQ6VXNlcjIyMjM2MDI=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/2223602?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drcmda",
    "html_url": "https://github.com/drcmda",
    "followers_url": "https://api.github.com/users/drcmda/followers",
    "following_url": "https://api.github.com/users/drcmda/following{/other_user}",
    "gists_url": "https://api.github.com/users/drcmda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drcmda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drcmda/subscriptions",
    "organizations_url": "https://api.github.com/users/drcmda/orgs",
    "repos_url": "https://api.github.com/users/drcmda/repos",
    "events_url": "https://api.github.com/users/drcmda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drcmda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 29,
  "created_at": "2019-02-28T21:27:18Z",
  "updated_at": "2019-03-05T18:37:13Z",
  "closed_at": "2019-02-28T22:45:22Z",
  "author_association": "NONE",
  "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nfeature, this is for https://github.com/drcmda/react-three-fiber\r\n\r\n**What is the current behavior?**\r\n\r\ncommitUpdate is supposed to simply update the instance, it seems that it cannot \"exchange\" the instance. \r\n\r\n**What is the expected behavior?**\r\n\r\nI need to re-instanciate the instance, just writing props to it is not enough in my case. Basically i am trying this:\r\n\r\n```js\r\n  commitUpdate(instance, updatePayload, type, oldProps, newProps, fiber) {\r\n    if (instance.isObject3D) {\r\n      applyProps(instance, newProps, oldProps)\r\n    } else {\r\n      // This is a data object, let's extract critical information about it\r\n      const parent = instance.__parent\r\n      const { args: argsNew = [], ...restNew } = newProps\r\n      const { args: argsOld = [], ...restOld } = oldProps\r\n      // If it has new props or arguments, then it needs to be re-instanciated\r\n      if (argsNew.some((value, index) => value !== argsOld[index])) {\r\n        // First it gets removed from its parent\r\n        removeChild(parent, instance)\r\n        // Next we create a new instance and append it again\r\n        const newInstance = createInstance(instance.type, newProps)\r\n        appendChild(parent, newInstance)\r\n        // Switch fiber node (???)\r\n        fiber.stateNode = newInstance // <---- this doesn't work\r\n```\r\n\r\nThis is a THREE data object which i am trying to map. Sometimes these objects cannot be mutated, THREE expects them to be re-created. One example of this is: https://threejs.org/docs/index.html#api/en/geometries/PlaneGeometry \r\n\r\n> Any modification after instantiation does not change the geometry.\r\n\r\nI am creating the object in JSX like so:\r\n\r\n```jsx\r\n<planeGeometry name=\"geometry\" args={[width, height]} />\r\n```\r\n\r\nWhen the args change the instance has to be recreated, no other way around unfortunately.\r\n\r\nIt would be amazing if commitUpdate would be allowed to return an instance. And if it does the reconciler writes it into the fiber node. I am trying fiber.stateNode here, but it doesn't help. Next time commitUpdate is called it passes on the old instance again, which doesn't have a parent any longer.\r\n\r\nI don't really understand how these nodes work but the stacktrace says  \r\n\r\n```jsx\r\ncommitWork(_current2, nextEffect)\r\n```\r\n\r\nwhere nextEffect ends up being \"fiber\" in the commitUpdate. \"_current2\" seems to be the one that still clings to the old stateNode.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.8.3",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
