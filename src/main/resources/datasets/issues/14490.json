{
  "url": "https://api.github.com/repos/facebook/react/issues/14490",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/14490/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/14490/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/14490/events",
  "html_url": "https://github.com/facebook/react/issues/14490",
  "id": 393843704,
  "node_id": "MDU6SXNzdWUzOTM4NDM3MDQ=",
  "number": 14490,
  "title": "Lazy useRef instance variables",
  "user": {
    "login": "Diokuz",
    "id": 2929442,
    "node_id": "MDQ6VXNlcjI5Mjk0NDI=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/2929442?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Diokuz",
    "html_url": "https://github.com/Diokuz",
    "followers_url": "https://api.github.com/users/Diokuz/followers",
    "following_url": "https://api.github.com/users/Diokuz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Diokuz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Diokuz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Diokuz/subscriptions",
    "organizations_url": "https://api.github.com/users/Diokuz/orgs",
    "repos_url": "https://api.github.com/users/Diokuz/repos",
    "events_url": "https://api.github.com/users/Diokuz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Diokuz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2018-12-24T09:26:40Z",
  "updated_at": "2019-04-26T01:26:46Z",
  "closed_at": "2019-01-16T22:46:32Z",
  "author_association": "NONE",
  "body": "I want to save a class instance, not just plain object, with `useRef` hook. And, I dont want to construct it each time hook function is invoked.\r\n\r\nIs it possible to do that?\r\n\r\nMy thoughts were:\r\n\r\n```js\r\nconst instanceRef = useRef(() => new Instance())\r\n```\r\nBut `useRef` does not accept the _initial value_ as a function (`useState` and `useReducer` could do that).\r\nWill that change in _alpha 3_?",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
