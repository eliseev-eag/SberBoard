{
  "url": "https://api.github.com/repos/facebook/react/issues/4197",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/4197/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/4197/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/4197/events",
  "html_url": "https://github.com/facebook/react/issues/4197",
  "id": 90231954,
  "node_id": "MDU6SXNzdWU5MDIzMTk1NA==",
  "number": 4197,
  "title": "ES6: getInitialState as static function",
  "user": {
    "login": "wereHamster",
    "id": 34538,
    "node_id": "MDQ6VXNlcjM0NTM4",
    "avatar_url": "https://avatars1.githubusercontent.com/u/34538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wereHamster",
    "html_url": "https://github.com/wereHamster",
    "followers_url": "https://api.github.com/users/wereHamster/followers",
    "following_url": "https://api.github.com/users/wereHamster/following{/other_user}",
    "gists_url": "https://api.github.com/users/wereHamster/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wereHamster/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wereHamster/subscriptions",
    "organizations_url": "https://api.github.com/users/wereHamster/orgs",
    "repos_url": "https://api.github.com/users/wereHamster/repos",
    "events_url": "https://api.github.com/users/wereHamster/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wereHamster/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2015-06-22T22:39:42Z",
  "updated_at": "2016-02-17T23:16:02Z",
  "closed_at": "2016-02-17T23:16:02Z",
  "author_association": "NONE",
  "body": "I understand that the old `getInitialState` API design was not ideal. But I disagree that assigning the  `state` instance property in the constructor is any better.\n\nThe `getInitialState` function, conceptually, has the type signature `Props -> State`, ie. a pure function converting props to state. Because the old `getInitialState` was defined on the instance, it also had access to `this`. However we can make that function static, therefore making it as pure as JS allows.\n\nIn practice a stateful component would look like the code just below.\n\n``` javascript\nclass Counter extends React.Component {\n\n  static propTypes = { initialCount: React.PropTypes.number };\n  static defaultProps = { initialCount: 0 };\n\n  static initialState(props) {\n    return { count: props.initalCount };\n  }\n\n  tick() {\n    this.setState({count: this.state.count + 1});\n  }\n\n  render() {\n    return (\n      <div onClick={this.tick.bind(this)}>\n        Clicks: {this.state.count}\n      </div>\n    );\n  }\n} \n```\n\nAnother advantage is that with this construction I don't have to override the component constructor. And the `initialState` function is defined declaratively, in a very straightforward and easy to understand way. Unlike the example from your React v0.13.0 Beta1 blog post which feels like much more magic, and gives the (implicit) `getInitialState` function access to the full instance instead of just the props. For illustration, this is what you proposed in the blog post:\n\n``` javascript\nexport class Counter extends React.Component {\n  state = { count: this.props.initialCount };\n}\n```\n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
