{
  "url": "https://api.github.com/repos/facebook/react/issues/10665",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/10665/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/10665/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/10665/events",
  "html_url": "https://github.com/facebook/react/pull/10665",
  "id": 256571252,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MTQwMjQzMDkw",
  "number": 10665,
  "title": "Remove implicit casts of Fiber to bool",
  "user": {
    "login": "sophiebits",
    "id": 6820,
    "node_id": "MDQ6VXNlcjY4MjA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sophiebits",
    "html_url": "https://github.com/sophiebits",
    "followers_url": "https://api.github.com/users/sophiebits/followers",
    "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
    "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
    "organizations_url": "https://api.github.com/users/sophiebits/orgs",
    "repos_url": "https://api.github.com/users/sophiebits/repos",
    "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sophiebits/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-09-11T03:19:47Z",
  "updated_at": "2018-01-05T16:17:34Z",
  "closed_at": "2018-01-05T16:17:34Z",
  "author_association": "COLLABORATOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/10665",
    "html_url": "https://github.com/facebook/react/pull/10665",
    "diff_url": "https://github.com/facebook/react/pull/10665.diff",
    "patch_url": "https://github.com/facebook/react/pull/10665.patch"
  },
  "body": "In a couple places I used `==` weak equals -- particularly, element._owner (either null from ReactCurrentOwner, or undefined if it's not present at all), event._dispatchInstances from event system where typing is sloppier, and ChangeEventPlugin which mixes null/undefined. Everywhere else I did strict and believe that it's safe.\r\n\r\nMethodology: run tests with this patch and fix all errors.\r\n\r\n```diff\r\ndiff --git a/scripts/jest/environment.js b/scripts/jest/environment.js\r\nindex 71323d7de..96e52aac7 100644\r\n--- a/scripts/jest/environment.js\r\n+++ b/scripts/jest/environment.js\r\n@@ -15,3 +15,15 @@ global.requestIdleCallback = function(callback) {\r\n     });\r\n   });\r\n };\r\n+\r\n+eval(\r\n+  `\r\n+global.checkBool = function(x) {\r\n+  if (typeof x === 'object' && x !== null && 'stateNode' in x) {\r\n+    //console.log('xyz', new Error().stack);\r\n+    throw new Error('Cast of Fiber to bool detected');\r\n+  }\r\n+  return x;\r\n+};\r\n+`\r\n+);\r\ndiff --git a/scripts/jest/preprocessor.js b/scripts/jest/preprocessor.js\r\nindex 7727b1b2d..022f6d08c 100644\r\n--- a/scripts/jest/preprocessor.js\r\n+++ b/scripts/jest/preprocessor.js\r\n@@ -53,6 +53,39 @@ var babelOptions = {\r\n     // into ReactART builds that include JSX.\r\n     // TODO: I have not verified that this actually works.\r\n     require.resolve('babel-plugin-transform-react-jsx-source'),\r\n+    function(babel) {\r\n+      const {types: t} = babel;\r\n+\r\n+      return {\r\n+        name: 'check-bool', // not required\r\n+        visitor: {\r\n+          Conditional(path) {\r\n+            path.node.test = t.CallExpression(t.identifier('checkBool'), [\r\n+              path.node.test,\r\n+            ]);\r\n+          },\r\n+          UnaryExpression(path) {\r\n+            if (path.node.operator === '!') {\r\n+              path.node.argument = t.CallExpression(t.identifier('checkBool'), [\r\n+                path.node.argument,\r\n+              ]);\r\n+            }\r\n+          },\r\n+          BinaryExpression(path) {\r\n+            if (path.node.operator === '||' || path.node.operator === '&&') {\r\n+              path.node.left = t.CallExpression(t.identifier('checkBool'), [\r\n+                path.node.left,\r\n+              ]);\r\n+              path.node.right = t.CallExpression(t.identifier('checkBool'), [\r\n+                path.node.right,\r\n+              ]);\r\n+            }\r\n+          },\r\n+        },\r\n+      };\r\n+    },\r\n   ],\r\n   retainLines: true,\r\n };\r\n```",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
