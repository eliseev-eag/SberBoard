{
  "url": "https://api.github.com/repos/facebook/react/issues/16358",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/16358/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/16358/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/16358/events",
  "html_url": "https://github.com/facebook/react/issues/16358",
  "id": 479390208,
  "node_id": "MDU6SXNzdWU0NzkzOTAyMDg=",
  "number": 16358,
  "title": "React state values is shared between two components!!!",
  "user": {
    "login": "PranjalAgni",
    "id": 26196076,
    "node_id": "MDQ6VXNlcjI2MTk2MDc2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/26196076?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PranjalAgni",
    "html_url": "https://github.com/PranjalAgni",
    "followers_url": "https://api.github.com/users/PranjalAgni/followers",
    "following_url": "https://api.github.com/users/PranjalAgni/following{/other_user}",
    "gists_url": "https://api.github.com/users/PranjalAgni/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PranjalAgni/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PranjalAgni/subscriptions",
    "organizations_url": "https://api.github.com/users/PranjalAgni/orgs",
    "repos_url": "https://api.github.com/users/PranjalAgni/repos",
    "events_url": "https://api.github.com/users/PranjalAgni/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PranjalAgni/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-08-11T17:08:56Z",
  "updated_at": "2019-08-11T17:56:22Z",
  "closed_at": "2019-08-11T17:56:21Z",
  "author_association": "NONE",
  "body": "**Bug**\r\n\r\nI have two components: \r\n `ComponentA` \r\n\r\n```js\r\nclass ComponentA extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.nextCardSet = this.nextCardSet.bind(this);\r\n    this.prevCardSet = this.prevCardSet.bind(this);\r\n  }\r\n  async prevCardSet() {\r\n    const currPage = this.state.currPage - 1;\r\n    const data = this.state.dataStore[currPage - 1];\r\n    await this.setState({\r\n      currPage,\r\n      data\r\n    });\r\n  }\r\n\r\n  async nextCardSet() {\r\n    const currPage = this.state.currPage + 1;\r\n    const data = this.state.dataStore[currPage - 1];\r\n    await this.setState({\r\n      currPage,\r\n      data\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await this.getData();\r\n\r\n    //...Doing some stuff...\r\n\r\n    await this.setState({\r\n      dataStore: mainData,\r\n      data: mainData[currPage - 1],\r\n      currPage,\r\n      totalPages,\r\n      isLoading: false\r\n    });\r\n  }\r\n\r\n  async getData() {\r\n    const response = await axios.get(\r\n      'http://localhost:4000/getUserOverviewJson'\r\n    );\r\n    return response;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <Fab size=\"small\" disabled={this.state.currPage === 1 ? true : false}>\r\n            <NavigateBefore\r\n              onClick={this.prevCardSet}\r\n            />\r\n          </Fab>\r\n          <Fab\r\n            size=\"small\"\r\n            disabled={\r\n              this.state.currPage === this.state.totalPages ? true : false\r\n            }\r\n          >\r\n            <NavigateNext\r\n              onClick={this.nextCardSet}\r\n            />\r\n          </Fab>\r\n        </div>\r\n        <CallWorkRender data={this.state.data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n`ComponentB`\r\n```js\r\nclass ComponentB extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.data = props.data;\r\n  }\r\n\r\n  getComponent = componentID => {\r\n    const data = this.data['pageData'].shift();\r\n    return ComponentGetter.getComponent(componentID, data);\r\n  };\r\n\r\n  render() {\r\n    const { width, data } = this.props;\r\n    this.data = data;\r\n    const layoutConfigCallPrep = layoutConfig['1'][width];\r\n\r\n    return (\r\n      <FlexGrid\r\n        layoutConfiguration={layoutConfigCallPrep}\r\n        getComponent={this.getComponent}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withWidth()(ComponentB);\r\n```\r\n\r\n\r\n\r\nIn the initial load `ComponentA` sends data to `ComponentB` , so in CompB when `getComponent()` method is called it pops elements from array which it got as props.\r\n\r\n**Now the data in array is manipulated in CompB but when I try to print the state of  CompA  its data also get manipulated. I don't understand how this weird data manipulation is happening. How does the data of one component gets altered due to data change in other component?**\r\n\r\n*React@16.8.6*\r\n*Windows 10*\r\n",
  "closed_by": {
    "login": "aweary",
    "id": 6886061,
    "node_id": "MDQ6VXNlcjY4ODYwNjE=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aweary",
    "html_url": "https://github.com/aweary",
    "followers_url": "https://api.github.com/users/aweary/followers",
    "following_url": "https://api.github.com/users/aweary/following{/other_user}",
    "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
    "organizations_url": "https://api.github.com/users/aweary/orgs",
    "repos_url": "https://api.github.com/users/aweary/repos",
    "events_url": "https://api.github.com/users/aweary/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aweary/received_events",
    "type": "User",
    "site_admin": false
  }
}
