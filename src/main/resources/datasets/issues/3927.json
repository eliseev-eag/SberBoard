{
  "url": "https://api.github.com/repos/facebook/react/issues/3927",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/3927/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/3927/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/3927/events",
  "html_url": "https://github.com/facebook/react/issues/3927",
  "id": 78993558,
  "node_id": "MDU6SXNzdWU3ODk5MzU1OA==",
  "number": 3927,
  "title": "Props in getInitialState is anti pattern - what about componentWillMount?",
  "user": {
    "login": "Laoujin",
    "id": 2582910,
    "node_id": "MDQ6VXNlcjI1ODI5MTA=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/2582910?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Laoujin",
    "html_url": "https://github.com/Laoujin",
    "followers_url": "https://api.github.com/users/Laoujin/followers",
    "following_url": "https://api.github.com/users/Laoujin/following{/other_user}",
    "gists_url": "https://api.github.com/users/Laoujin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Laoujin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Laoujin/subscriptions",
    "organizations_url": "https://api.github.com/users/Laoujin/orgs",
    "repos_url": "https://api.github.com/users/Laoujin/repos",
    "events_url": "https://api.github.com/users/Laoujin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Laoujin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2015-05-21T13:20:24Z",
  "updated_at": "2016-10-27T14:45:00Z",
  "closed_at": "2016-10-27T14:45:00Z",
  "author_association": "NONE",
  "body": "From the link:\nhttps://facebook.github.io/react/tips/props-in-getInitialState-as-anti-pattern.html\n\nI'm wondering, is the following code a similar anti pattern or is it a good practice:\n\n```\nfunction getState(props) {\n   var newState = { someState: false };\n   if (!!props) {\n      _.merge(newState, {\n          totalCount: props.total || 0,\n          items: props.items\n      };\n   }\n   return newState;\n}\n\nvar component = React.createClass({\n  propTypes: {\n    total: React.PropTypes.number\n    items: React.PropTypes.array\n  },\n  getInitialState: function(){\n    return getState();\n  },\n  componentWillMount: function() {\n    this.setState(getState(this.props));\n  },\n  componentWillReceiveProps: function(newProps){\n    this.setState(getState(newProps))\n  },\n  ....\n}\n```\n\nSo basically:  \n- Props is not used in `getInitialState` but in `componentWillMount`\n- All props are copied into state (some just copied, some get modified a bit ex: `'Mr. ' + props.name` etc)\n- Render method uses state only\n\nOne of my colleagues is using this pattern extensively. I have a funny feeling about it but I can't really pinpoint what would actually be wrong/bad with his approach.\n",
  "closed_by": {
    "login": "gaearon",
    "id": 810438,
    "node_id": "MDQ6VXNlcjgxMDQzOA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gaearon",
    "html_url": "https://github.com/gaearon",
    "followers_url": "https://api.github.com/users/gaearon/followers",
    "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
    "organizations_url": "https://api.github.com/users/gaearon/orgs",
    "repos_url": "https://api.github.com/users/gaearon/repos",
    "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gaearon/received_events",
    "type": "User",
    "site_admin": false
  }
}
