{
  "url": "https://api.github.com/repos/facebook/react/issues/2255",
  "repository_url": "https://api.github.com/repos/facebook/react",
  "labels_url": "https://api.github.com/repos/facebook/react/issues/2255/labels{/name}",
  "comments_url": "https://api.github.com/repos/facebook/react/issues/2255/comments",
  "events_url": "https://api.github.com/repos/facebook/react/issues/2255/events",
  "html_url": "https://github.com/facebook/react/pull/2255",
  "id": 44110809,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4Nzg1MDE=",
  "number": 2255,
  "title": "[idea] React-enhanced input/textarea/select should be addons",
  "user": {
    "login": "syranide",
    "id": 1714255,
    "node_id": "MDQ6VXNlcjE3MTQyNTU=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/syranide",
    "html_url": "https://github.com/syranide",
    "followers_url": "https://api.github.com/users/syranide/followers",
    "following_url": "https://api.github.com/users/syranide/following{/other_user}",
    "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
    "organizations_url": "https://api.github.com/users/syranide/orgs",
    "repos_url": "https://api.github.com/users/syranide/repos",
    "events_url": "https://api.github.com/users/syranide/events{/privacy}",
    "received_events_url": "https://api.github.com/users/syranide/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 196858374,
      "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
      "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
      "name": "CLA Signed",
      "color": "e7e7e7",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2014-09-26T22:04:57Z",
  "updated_at": "2015-11-10T00:10:45Z",
  "closed_at": "2015-11-10T00:10:45Z",
  "author_association": "CONTRIBUTOR",
  "pull_request": {
    "url": "https://api.github.com/repos/facebook/react/pulls/2255",
    "html_url": "https://github.com/facebook/react/pull/2255",
    "diff_url": "https://github.com/facebook/react/pull/2255.diff",
    "patch_url": "https://github.com/facebook/react/pull/2255.patch"
  },
  "body": "**EDIT:** I recommend [clicking this link to view changes](https://github.com/facebook/react/commit/1b9b143a53759c7e697026bf1e731782b6792ea0) as github diff ignored the file moves.\n\nThis RFC-PR removes all React-specific enhancements from `ReactDOMInput`, `ReactDOMTextarea` and `ReactDOMSelect`. The controlled (and still optionally uncontrolled) implementations are now found in `React.addons.*` instead and are fully backwards-compatible. The implementations provided by React core are now bare-bones, focusing only on exposing the DOM in a predictable way, much like the rest of ReactDOM.\n\nRelated: #2242, #2241, #2220, #1968, the list goes on.\n# Why was it flawed\n\n`ReactDOMInput`, `ReactDOMTextarea` and `ReactDOMSelect` are very complex implementations and they're still far from perfect (and quite frequently patched). Worse, the implementations are really rather hacky. A generic neat and robust implementation simply doesn't seem possible. `<select>` has to refresh `option.selected` for all options every render, the logic for `<input type=\"radio\">` is down-right horrendous and there are a number of edge-cases that do not behave as you would expect.\n\nTrying to make `<input>`, `<textarea>` and `<select>` controlled for the generic use-case is flawed and as such doesn't belong in React core.\n# Why is this better\n\n`ReactDOM*` is mostly wrapped by users and packaged as their own `MyTextfield`, `MyButton`, etc components and React makes it fantastically simple. So there's no reason why they should be forced to use and bundle sub-optimal implementations even when they have significantly simpler requirements.\n\nImplementing the React-enhanced controlled versions of `<input>`, `<textarea>` and `<select>` as addons/components is trivial. It allows the core implementations to stay lean and focus only on exposing the DOM consistently (and to patch `ReactDOM*` independently of React's release schedule). It allows the community to tailor the amount of logic to their own needs and to ignore edge-cases that simply aren't relevant, if they don't care, just use `React.addons.*`. Providing \"pure\" implementations of the controls would be trivial too for even more benefit.\n\nThere's no reason why this should be in React core. This PR as-is shaves ~4.3kb/1.2kb (~3-4%) of React core, can significantly reduce performance overhead for edge-cases and keeps React ever slightly less needlessly opinionated.\n# Result\n\n`ReactDOM*` now only accept initial values. `<input initialValue={...} initialChecked={...} />`, `<textarea initialValue={...} />` and `<select initialValue={...} />` (`initialSelected`?), feel free to object to `initial` vs `default`.\n\n`React.addons.*` are backwards-compatible implementations building on-top of the `ReactDOM*` exposed by React core.\n\nCodemod:ing existing codebases should be trivial.\n\n---\n\nPS. This PR is not thoroughly coded/tested (yet)  and includes some unrelated fixes (and obviously breaks a lot of tests), but the idea is sound and the implementation does work. If you agree with the premise I could go ahead and clean it up.\n\ncc @zpao @petehunt @sebmarkbage @jordwalke @spicyj @chenglou \n",
  "closed_by": {
    "login": "jimfb",
    "id": 9595985,
    "node_id": "MDQ6VXNlcjk1OTU5ODU=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimfb",
    "html_url": "https://github.com/jimfb",
    "followers_url": "https://api.github.com/users/jimfb/followers",
    "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
    "organizations_url": "https://api.github.com/users/jimfb/orgs",
    "repos_url": "https://api.github.com/users/jimfb/repos",
    "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimfb/received_events",
    "type": "User",
    "site_admin": false
  }
}
